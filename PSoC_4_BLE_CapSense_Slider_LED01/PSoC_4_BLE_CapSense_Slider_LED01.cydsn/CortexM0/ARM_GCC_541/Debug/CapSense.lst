ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	CapSense_lowLevelTuningDone
  20              		.bss
  21              		.type	CapSense_lowLevelTuningDone, %object
  22              		.size	CapSense_lowLevelTuningDone, 1
  23              	CapSense_lowLevelTuningDone:
  24 0000 00       		.space	1
  25              		.comm	CapSense_scanSpeedTbl,1,4
  26              		.global	CapSense_csdStatusVar
  27              		.type	CapSense_csdStatusVar, %object
  28              		.size	CapSense_csdStatusVar, 1
  29              	CapSense_csdStatusVar:
  30 0001 00       		.space	1
  31              		.global	CapSense_sensorIndex
  32              		.type	CapSense_sensorIndex, %object
  33              		.size	CapSense_sensorIndex, 1
  34              	CapSense_sensorIndex:
  35 0002 00       		.space	1
  36              		.global	CapSense_sensorRaw
  37 0003 00       		.align	2
  38              		.type	CapSense_sensorRaw, %object
  39              		.size	CapSense_sensorRaw, 10
  40              	CapSense_sensorRaw:
  41 0004 00000000 		.space	10
  41      00000000 
  41      0000
  42              		.comm	CapSense_csdTrim1,1,1
  43              		.comm	CapSense_unscannedSnsDriveMode,5,4
  44              		.comm	CapSense_sensorEnableMaskBackup,1,4
  45              		.global	CapSense_sensorEnableMask
  46              		.data
  47              		.align	2
  48              		.type	CapSense_sensorEnableMask, %object
  49              		.size	CapSense_sensorEnableMask, 1
  50              	CapSense_sensorEnableMask:
  51 0000 1F       		.byte	31
  52              		.global	CapSense_pcTable
  53 0001 000000   		.align	2
  54              		.type	CapSense_pcTable, %object
  55              		.size	CapSense_pcTable, 20
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 2


  56              	CapSense_pcTable:
  57 0004 08020440 		.word	1074004488
  58 0008 08020440 		.word	1074004488
  59 000c 08020440 		.word	1074004488
  60 0010 08020440 		.word	1074004488
  61 0014 08020440 		.word	1074004488
  62              		.global	CapSense_portTable
  63              		.section	.rodata
  64              		.align	2
  65              		.type	CapSense_portTable, %object
  66              		.size	CapSense_portTable, 5
  67              	CapSense_portTable:
  68 0000 02       		.byte	2
  69 0001 02       		.byte	2
  70 0002 02       		.byte	2
  71 0003 02       		.byte	2
  72 0004 02       		.byte	2
  73              		.global	CapSense_maskTable
  74 0005 000000   		.align	2
  75              		.type	CapSense_maskTable, %object
  76              		.size	CapSense_maskTable, 20
  77              	CapSense_maskTable:
  78 0008 02000000 		.word	2
  79 000c 04000000 		.word	4
  80 0010 08000000 		.word	8
  81 0014 10000000 		.word	16
  82 0018 20000000 		.word	32
  83              		.global	CapSense_pinShiftTbl
  84              		.align	2
  85              		.type	CapSense_pinShiftTbl, %object
  86              		.size	CapSense_pinShiftTbl, 5
  87              	CapSense_pinShiftTbl:
  88 001c 01       		.byte	1
  89 001d 02       		.byte	2
  90 001e 03       		.byte	3
  91 001f 04       		.byte	4
  92 0020 05       		.byte	5
  93              		.comm	CapSense_modulationIDAC,5,4
  94              		.comm	CapSense_compensationIDAC,5,4
  95              		.global	CapSense_widgetResolution
  96              		.data
  97              		.align	2
  98              		.type	CapSense_widgetResolution, %object
  99              		.size	CapSense_widgetResolution, 4
 100              	CapSense_widgetResolution:
 101 0018 0000FF0F 		.word	268369920
 102              		.comm	CapSense_senseClkDividerVal,5,4
 103              		.comm	CapSense_sampleClkDividerVal,5,4
 104              		.global	CapSense_widgetNumber
 105              		.section	.rodata
 106 0021 000000   		.align	2
 107              		.type	CapSense_widgetNumber, %object
 108              		.size	CapSense_widgetNumber, 5
 109              	CapSense_widgetNumber:
 110 0024 00000000 		.space	5
 110      00
 111              		.global	CapSense_prtSelTbl
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 3


 112 0029 000000   		.align	2
 113              		.type	CapSense_prtSelTbl, %object
 114              		.size	CapSense_prtSelTbl, 28
 115              	CapSense_prtSelTbl:
 116 002c 00000240 		.word	1073872896
 117 0030 00010240 		.word	1073873152
 118 0034 00020240 		.word	1073873408
 119 0038 00030240 		.word	1073873664
 120 003c 00040240 		.word	1073873920
 121 0040 00050240 		.word	1073874176
 122 0044 00060240 		.word	1073874432
 123              		.global	CapSense_prtCfgTbl
 124              		.align	2
 125              		.type	CapSense_prtCfgTbl, %object
 126              		.size	CapSense_prtCfgTbl, 28
 127              	CapSense_prtCfgTbl:
 128 0048 08000440 		.word	1074003976
 129 004c 08010440 		.word	1074004232
 130 0050 08020440 		.word	1074004488
 131 0054 08030440 		.word	1074004744
 132 0058 08040440 		.word	1074005000
 133 005c 08050440 		.word	1074005256
 134 0060 08060440 		.word	1074005512
 135              		.global	CapSense_prtDRTbl
 136              		.align	2
 137              		.type	CapSense_prtDRTbl, %object
 138              		.size	CapSense_prtDRTbl, 28
 139              	CapSense_prtDRTbl:
 140 0064 00000440 		.word	1074003968
 141 0068 00010440 		.word	1074004224
 142 006c 00020440 		.word	1074004480
 143 0070 00030440 		.word	1074004736
 144 0074 00040440 		.word	1074004992
 145 0078 00050440 		.word	1074005248
 146 007c 00060440 		.word	1074005504
 147              		.section	.text.CapSense_Init,"ax",%progbits
 148              		.align	2
 149              		.global	CapSense_Init
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_Init, %function
 153              	CapSense_Init:
 154              	.LFB34:
 155              		.file 1 "Generated_Source\\PSoC4\\CapSense.c"
   1:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense.c **** * File Name: CapSense.c
   3:Generated_Source\PSoC4/CapSense.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense.c **** *
   5:Generated_Source\PSoC4/CapSense.c **** * Description:
   6:Generated_Source\PSoC4/CapSense.c **** *  This file provides the source code for scanning APIs for the CapSense CSD
   7:Generated_Source\PSoC4/CapSense.c **** *  component.
   8:Generated_Source\PSoC4/CapSense.c **** *
   9:Generated_Source\PSoC4/CapSense.c **** * Note:
  10:Generated_Source\PSoC4/CapSense.c **** *
  11:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 4


  14:Generated_Source\PSoC4/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense.c **** 
  18:Generated_Source\PSoC4/CapSense.c **** #include "CapSense.h"
  19:Generated_Source\PSoC4/CapSense.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense.c **** #include "cypins.h"
  21:Generated_Source\PSoC4/CapSense.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/CapSense.c **** 
  23:Generated_Source\PSoC4/CapSense.c **** #if(0u != CapSense_CSHL_API_GENERATE)
  24:Generated_Source\PSoC4/CapSense.c ****     #include "CapSense_CSHL.h"
  25:Generated_Source\PSoC4/CapSense.c **** #endif /* (0u != CapSense_CSHL_API_GENERATE) */
  26:Generated_Source\PSoC4/CapSense.c **** 
  27:Generated_Source\PSoC4/CapSense.c **** /* This definition is intended to prevent unexpected linker error.
  28:Generated_Source\PSoC4/CapSense.c ****    For more details please see the IAR Technical Note 49981 */
  29:Generated_Source\PSoC4/CapSense.c **** #if defined(__ICCARM__)
  30:Generated_Source\PSoC4/CapSense.c ****     extern void CapSense_EnableSensor(uint32 sensor);
  31:Generated_Source\PSoC4/CapSense.c ****     extern void CapSense_DisableSensor(uint32 sensor);
  32:Generated_Source\PSoC4/CapSense.c **** #endif /* (__ICCARM__) */
  33:Generated_Source\PSoC4/CapSense.c **** 
  34:Generated_Source\PSoC4/CapSense.c **** /* SmartSense functions */
  35:Generated_Source\PSoC4/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  36:Generated_Source\PSoC4/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 0u;
  37:Generated_Source\PSoC4/CapSense.c ****     uint8 CapSense_scanSpeedTbl[((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u];
  38:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  39:Generated_Source\PSoC4/CapSense.c **** 
  40:Generated_Source\PSoC4/CapSense.c **** #if(CapSense_PRS_OPTIONS != CapSense__PRS_NONE)
  41:Generated_Source\PSoC4/CapSense.c ****     uint8 CapSense_prescalersTuningDone = 0u;
  42:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_PRS_OPTIONS == CapSense__PRS_NONE) */
  43:Generated_Source\PSoC4/CapSense.c **** 
  44:Generated_Source\PSoC4/CapSense.c **** /* Global software variables */
  45:Generated_Source\PSoC4/CapSense.c **** volatile uint8 CapSense_csdStatusVar = 0u;   /* CapSense CSD status, variable */
  46:Generated_Source\PSoC4/CapSense.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of scannig sensor */
  47:Generated_Source\PSoC4/CapSense.c **** 
  48:Generated_Source\PSoC4/CapSense.c **** /* Global array of Raw Counts */
  49:Generated_Source\PSoC4/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  50:Generated_Source\PSoC4/CapSense.c **** 
  51:Generated_Source\PSoC4/CapSense.c **** /* Backup variables for trim registers*/
  52:Generated_Source\PSoC4/CapSense.c **** #if (CapSense_IDAC1_POLARITY == CapSense__IDAC_SINK)
  53:Generated_Source\PSoC4/CapSense.c ****     uint8 CapSense_csdTrim2;
  54:Generated_Source\PSoC4/CapSense.c **** #else
  55:Generated_Source\PSoC4/CapSense.c ****     uint8 CapSense_csdTrim1;
  56:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_IDAC1_POLARITY == CapSense__IDAC_SINK) */
  57:Generated_Source\PSoC4/CapSense.c **** 
  58:Generated_Source\PSoC4/CapSense.c **** /* Global array of un-scanned sensors state */
  59:Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_unscannedSnsDriveMode[CapSense_PORT_PIN_CONFIG_TBL_ZISE];
  60:Generated_Source\PSoC4/CapSense.c **** 
  61:Generated_Source\PSoC4/CapSense.c **** /* Backup array for CapSense_sensorEnableMask */
  62:Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_sensorEnableMaskBackup[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  63:Generated_Source\PSoC4/CapSense.c **** 
  64:Generated_Source\PSoC4/CapSense.c **** /* Configured constants and arrays by Customizer */
  65:Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  66:Generated_Source\PSoC4/CapSense.c **** 0x1Fu, };
  67:Generated_Source\PSoC4/CapSense.c **** 
  68:Generated_Source\PSoC4/CapSense.c **** reg32 * CapSense_pcTable[] = {
  69:Generated_Source\PSoC4/CapSense.c ****     (reg32 *)CapSense_Sns__LinearSlider0_e0__LS__PC, 
  70:Generated_Source\PSoC4/CapSense.c ****     (reg32 *)CapSense_Sns__LinearSlider0_e1__LS__PC, 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 5


  71:Generated_Source\PSoC4/CapSense.c ****     (reg32 *)CapSense_Sns__LinearSlider0_e2__LS__PC, 
  72:Generated_Source\PSoC4/CapSense.c ****     (reg32 *)CapSense_Sns__LinearSlider0_e3__LS__PC, 
  73:Generated_Source\PSoC4/CapSense.c ****     (reg32 *)CapSense_Sns__LinearSlider0_e4__LS__PC, 
  74:Generated_Source\PSoC4/CapSense.c **** };
  75:Generated_Source\PSoC4/CapSense.c **** 
  76:Generated_Source\PSoC4/CapSense.c **** const uint8 CapSense_portTable[] = {
  77:Generated_Source\PSoC4/CapSense.c ****     CapSense_Sns__LinearSlider0_e0__LS__PORT, 
  78:Generated_Source\PSoC4/CapSense.c ****     CapSense_Sns__LinearSlider0_e1__LS__PORT, 
  79:Generated_Source\PSoC4/CapSense.c ****     CapSense_Sns__LinearSlider0_e2__LS__PORT, 
  80:Generated_Source\PSoC4/CapSense.c ****     CapSense_Sns__LinearSlider0_e3__LS__PORT, 
  81:Generated_Source\PSoC4/CapSense.c ****     CapSense_Sns__LinearSlider0_e4__LS__PORT, 
  82:Generated_Source\PSoC4/CapSense.c **** };
  83:Generated_Source\PSoC4/CapSense.c **** 
  84:Generated_Source\PSoC4/CapSense.c **** const uint32 CapSense_maskTable[] = {
  85:Generated_Source\PSoC4/CapSense.c ****     CapSense_Sns__LinearSlider0_e0__LS__MASK, 
  86:Generated_Source\PSoC4/CapSense.c ****     CapSense_Sns__LinearSlider0_e1__LS__MASK, 
  87:Generated_Source\PSoC4/CapSense.c ****     CapSense_Sns__LinearSlider0_e2__LS__MASK, 
  88:Generated_Source\PSoC4/CapSense.c ****     CapSense_Sns__LinearSlider0_e3__LS__MASK, 
  89:Generated_Source\PSoC4/CapSense.c ****     CapSense_Sns__LinearSlider0_e4__LS__MASK, 
  90:Generated_Source\PSoC4/CapSense.c **** };
  91:Generated_Source\PSoC4/CapSense.c **** 
  92:Generated_Source\PSoC4/CapSense.c **** const uint8 CapSense_pinShiftTbl[] = {
  93:Generated_Source\PSoC4/CapSense.c ****     (uint8) CapSense_Sns__LinearSlider0_e0__LS__SHIFT, 
  94:Generated_Source\PSoC4/CapSense.c ****     (uint8) CapSense_Sns__LinearSlider0_e1__LS__SHIFT, 
  95:Generated_Source\PSoC4/CapSense.c ****     (uint8) CapSense_Sns__LinearSlider0_e2__LS__SHIFT, 
  96:Generated_Source\PSoC4/CapSense.c ****     (uint8) CapSense_Sns__LinearSlider0_e3__LS__SHIFT, 
  97:Generated_Source\PSoC4/CapSense.c ****     (uint8) CapSense_Sns__LinearSlider0_e4__LS__SHIFT, 
  98:Generated_Source\PSoC4/CapSense.c **** };
  99:Generated_Source\PSoC4/CapSense.c **** 
 100:Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_modulationIDAC[CapSense_TOTAL_SENSOR_COUNT];
 101:Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_compensationIDAC[CapSense_TOTAL_SENSOR_COUNT];
 102:Generated_Source\PSoC4/CapSense.c **** 
 103:Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE] = {
 104:Generated_Source\PSoC4/CapSense.c ****     CapSense_RESOLUTION_12_BITS,
 105:Generated_Source\PSoC4/CapSense.c **** };
 106:Generated_Source\PSoC4/CapSense.c **** 
 107:Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_senseClkDividerVal[CapSense_TOTAL_SCANSLOT_COUNT];
 108:Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_sampleClkDividerVal[CapSense_TOTAL_SCANSLOT_COUNT];
 109:Generated_Source\PSoC4/CapSense.c **** 
 110:Generated_Source\PSoC4/CapSense.c **** const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT] = {
 111:Generated_Source\PSoC4/CapSense.c ****     0u, 0u, 0u, 0u, 0u, /* LinearSlider0__LS */
 112:Generated_Source\PSoC4/CapSense.c **** };
 113:Generated_Source\PSoC4/CapSense.c **** 
 114:Generated_Source\PSoC4/CapSense.c **** reg32* const CapSense_prtSelTbl[CapSense_CFG_REG_TBL_SIZE] = {
 115:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL0),
 116:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL1),
 117:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL2),
 118:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL3),
 119:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL4),
 120:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL5),
 121:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL6),
 122:Generated_Source\PSoC4/CapSense.c **** };
 123:Generated_Source\PSoC4/CapSense.c **** 
 124:Generated_Source\PSoC4/CapSense.c **** reg32* const CapSense_prtCfgTbl[CapSense_CFG_REG_TBL_SIZE] = {
 125:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT0_PC),
 126:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT1_PC),
 127:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT2_PC),
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 6


 128:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT3_PC),
 129:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT4_PC),
 130:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT5_PC),
 131:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT6_PC),
 132:Generated_Source\PSoC4/CapSense.c **** };
 133:Generated_Source\PSoC4/CapSense.c **** 
 134:Generated_Source\PSoC4/CapSense.c **** reg32* const CapSense_prtDRTbl[CapSense_CFG_REG_TBL_SIZE] = {
 135:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT0_DR),
 136:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT1_DR),
 137:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT2_DR),
 138:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT3_DR),
 139:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT4_DR),
 140:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT5_DR),
 141:Generated_Source\PSoC4/CapSense.c ****     ((reg32 *) CYREG_GPIO_PRT6_DR),
 142:Generated_Source\PSoC4/CapSense.c **** };
 143:Generated_Source\PSoC4/CapSense.c **** 
 144:Generated_Source\PSoC4/CapSense.c **** 
 145:Generated_Source\PSoC4/CapSense.c **** 
 146:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 147:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_Init
 148:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 149:Generated_Source\PSoC4/CapSense.c **** *
 150:Generated_Source\PSoC4/CapSense.c **** * Summary:
 151:Generated_Source\PSoC4/CapSense.c **** *  API initializes default CapSense configuration provided by the customizer that defines
 152:Generated_Source\PSoC4/CapSense.c **** *  the mode of component operations and resets all the sensors to an inactive state.
 153:Generated_Source\PSoC4/CapSense.c **** *
 154:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 155:Generated_Source\PSoC4/CapSense.c **** *  None
 156:Generated_Source\PSoC4/CapSense.c **** *
 157:Generated_Source\PSoC4/CapSense.c **** * Return:
 158:Generated_Source\PSoC4/CapSense.c **** *  None
 159:Generated_Source\PSoC4/CapSense.c **** *
 160:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 161:Generated_Source\PSoC4/CapSense.c **** *  CapSense_immunityIndex - defines immunity level.
 162:Generated_Source\PSoC4/CapSense.c **** *
 163:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 164:Generated_Source\PSoC4/CapSense.c **** *  None
 165:Generated_Source\PSoC4/CapSense.c **** *
 166:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 167:Generated_Source\PSoC4/CapSense.c **** void CapSense_Init(void)
 168:Generated_Source\PSoC4/CapSense.c **** {
 156              		.loc 1 168 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 8
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160 0000 80B5     		push	{r7, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 82B0     		sub	sp, sp, #8
 165              		.cfi_def_cfa_offset 16
 166 0004 00AF     		add	r7, sp, #0
 167              		.cfi_def_cfa_register 7
 169:Generated_Source\PSoC4/CapSense.c ****     uint32 curSensor;
 170:Generated_Source\PSoC4/CapSense.c **** 
 171:Generated_Source\PSoC4/CapSense.c ****     #if(CapSense_IS_SHIELD_ENABLE)
 172:Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 7


 173:Generated_Source\PSoC4/CapSense.c ****         #if((CapSense_CSH_TANK_PREGARGE_OPTION == CapSense__CAPPRIOBUF) || (0u != CapSense_CSH_TANK
 174:Generated_Source\PSoC4/CapSense.c ****             uint32 newRegValue;
 175:Generated_Source\PSoC4/CapSense.c **** 
 176:Generated_Source\PSoC4/CapSense.c ****             newRegValue = CapSense_CTANK_CONNECTION_REG;
 177:Generated_Source\PSoC4/CapSense.c ****             newRegValue &= ~(CapSense_CSD_CTANK_CONNECTION_MASK);
 178:Generated_Source\PSoC4/CapSense.c ****             newRegValue |= CapSense_CSD_CTANK_TO_AMUXBUS_B;
 179:Generated_Source\PSoC4/CapSense.c ****             CapSense_CTANK_CONNECTION_REG = newRegValue;
 180:Generated_Source\PSoC4/CapSense.c **** 
 181:Generated_Source\PSoC4/CapSense.c ****             #if(CapSense_CSH_TANK_PREGARGE_OPTION == CapSense__CAPPRIOBUF)
 182:Generated_Source\PSoC4/CapSense.c ****                 newRegValue = CapSense_CTANK_PORT_PC_REG;
 183:Generated_Source\PSoC4/CapSense.c ****                 newRegValue &= ~(CapSense_CSD_CTANK_PC_MASK);
 184:Generated_Source\PSoC4/CapSense.c ****                 newRegValue |= CapSense_CTANK_PC_STRONG_MODE;
 185:Generated_Source\PSoC4/CapSense.c ****                 CapSense_CTANK_PORT_PC_REG = newRegValue;
 186:Generated_Source\PSoC4/CapSense.c **** 
 187:Generated_Source\PSoC4/CapSense.c ****                 newRegValue = CapSense_CTANK_PORT_DR_REG;
 188:Generated_Source\PSoC4/CapSense.c ****                 newRegValue &= ~(CapSense_CTANK_DR_MASK);
 189:Generated_Source\PSoC4/CapSense.c ****                 newRegValue |= CapSense_CTANK_DR_CONFIG;
 190:Generated_Source\PSoC4/CapSense.c ****                 CapSense_CTANK_PORT_DR_REG = newRegValue;
 191:Generated_Source\PSoC4/CapSense.c ****             #endif /* (CapSense_CSH_TANK_PREGARGE_OPTION == CapSense__CAPPRIOBUF) */
 192:Generated_Source\PSoC4/CapSense.c **** 
 193:Generated_Source\PSoC4/CapSense.c ****         #endif /* ((CapSense_CSH_TANK_PREGARGE_OPTION == CapSense__CAPPRIOBUF) || (CapSense_CSH_TAN
 194:Generated_Source\PSoC4/CapSense.c **** 
 195:Generated_Source\PSoC4/CapSense.c ****         CapSense_EnableShieldElectrode((uint32)CapSense_SHIELD_PIN_NUMBER, (uint32)CapSense_SHIELD_
 196:Generated_Source\PSoC4/CapSense.c **** 
 197:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_IS_SHIELD_ENABLE) */
 198:Generated_Source\PSoC4/CapSense.c **** 
 199:Generated_Source\PSoC4/CapSense.c ****     for(curSensor = 0u; curSensor < CapSense_TOTAL_SENSOR_COUNT; curSensor++)
 168              		.loc 1 199 0
 169 0006 0023     		movs	r3, #0
 170 0008 7B60     		str	r3, [r7, #4]
 171 000a 07E0     		b	.L2
 172              	.L3:
 200:Generated_Source\PSoC4/CapSense.c ****     {
 201:Generated_Source\PSoC4/CapSense.c ****         CapSense_SetUnscannedSensorState(curSensor, CapSense_CONNECT_INACTIVE_SNS);
 173              		.loc 1 201 0 discriminator 3
 174 000c 7B68     		ldr	r3, [r7, #4]
 175 000e 0021     		movs	r1, #0
 176 0010 1800     		movs	r0, r3
 177 0012 FFF7FEFF 		bl	CapSense_SetUnscannedSensorState
 199:Generated_Source\PSoC4/CapSense.c ****     {
 178              		.loc 1 199 0 discriminator 3
 179 0016 7B68     		ldr	r3, [r7, #4]
 180 0018 0133     		adds	r3, r3, #1
 181 001a 7B60     		str	r3, [r7, #4]
 182              	.L2:
 199:Generated_Source\PSoC4/CapSense.c ****     {
 183              		.loc 1 199 0 is_stmt 0 discriminator 1
 184 001c 7B68     		ldr	r3, [r7, #4]
 185 001e 042B     		cmp	r3, #4
 186 0020 F4D9     		bls	.L3
 202:Generated_Source\PSoC4/CapSense.c ****     }
 203:Generated_Source\PSoC4/CapSense.c **** 
 204:Generated_Source\PSoC4/CapSense.c ****     CapSense_CsdHwBlockInit();
 187              		.loc 1 204 0 is_stmt 1
 188 0022 FFF7FEFF 		bl	CapSense_CsdHwBlockInit
 205:Generated_Source\PSoC4/CapSense.c ****     CapSense_SetShieldDelay(CapSense_SHIELD_DELAY );
 189              		.loc 1 205 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 8


 190 0026 0020     		movs	r0, #0
 191 0028 FFF7FEFF 		bl	CapSense_SetShieldDelay
 206:Generated_Source\PSoC4/CapSense.c **** 
 207:Generated_Source\PSoC4/CapSense.c ****     /* Clear all sensors */
 208:Generated_Source\PSoC4/CapSense.c ****     CapSense_ClearSensors();
 192              		.loc 1 208 0
 193 002c FFF7FEFF 		bl	CapSense_ClearSensors
 209:Generated_Source\PSoC4/CapSense.c **** }
 194              		.loc 1 209 0
 195 0030 C046     		nop
 196 0032 BD46     		mov	sp, r7
 197 0034 02B0     		add	sp, sp, #8
 198              		@ sp needed
 199 0036 80BD     		pop	{r7, pc}
 200              		.cfi_endproc
 201              	.LFE34:
 202              		.size	CapSense_Init, .-CapSense_Init
 203              		.section	.text.CapSense_CsdHwBlockInit,"ax",%progbits
 204              		.align	2
 205              		.global	CapSense_CsdHwBlockInit
 206              		.code	16
 207              		.thumb_func
 208              		.type	CapSense_CsdHwBlockInit, %function
 209              	CapSense_CsdHwBlockInit:
 210              	.LFB35:
 210:Generated_Source\PSoC4/CapSense.c **** 
 211:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 212:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_CsdHwBlockInit
 213:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 214:Generated_Source\PSoC4/CapSense.c **** *
 215:Generated_Source\PSoC4/CapSense.c **** * Summary:
 216:Generated_Source\PSoC4/CapSense.c **** *  Initialises the hardware parameters of the CSD block
 217:Generated_Source\PSoC4/CapSense.c **** *
 218:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 219:Generated_Source\PSoC4/CapSense.c **** *  None
 220:Generated_Source\PSoC4/CapSense.c **** *
 221:Generated_Source\PSoC4/CapSense.c **** * Return:
 222:Generated_Source\PSoC4/CapSense.c **** *  None
 223:Generated_Source\PSoC4/CapSense.c **** *
 224:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 225:Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdTrim1 - Contains IDAC trim register value for Sourcing Mode.
 226:Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdTrim2 - Contains IDAC trim register value for Sinking Mode.
 227:Generated_Source\PSoC4/CapSense.c **** *
 228:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 229:Generated_Source\PSoC4/CapSense.c **** *  None
 230:Generated_Source\PSoC4/CapSense.c **** *
 231:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 232:Generated_Source\PSoC4/CapSense.c **** void CapSense_CsdHwBlockInit(void)
 233:Generated_Source\PSoC4/CapSense.c **** {
 211              		.loc 1 233 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 8
 214              		@ frame_needed = 1, uses_anonymous_args = 0
 215 0000 80B5     		push	{r7, lr}
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 7, -8
 218              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 9


 219 0002 82B0     		sub	sp, sp, #8
 220              		.cfi_def_cfa_offset 16
 221 0004 00AF     		add	r7, sp, #0
 222              		.cfi_def_cfa_register 7
 234:Generated_Source\PSoC4/CapSense.c ****     uint32 newRegValue;
 235:Generated_Source\PSoC4/CapSense.c **** 
 236:Generated_Source\PSoC4/CapSense.c ****         /* Set trim registers for CSD Mode */
 237:Generated_Source\PSoC4/CapSense.c ****     #if (CapSense_IDAC1_POLARITY == CapSense__IDAC_SINK)
 238:Generated_Source\PSoC4/CapSense.c ****         /* iDAC1 Sinking Mode */
 239:Generated_Source\PSoC4/CapSense.c ****         CapSense_csdTrim2 = (uint8)CapSense_CSD_TRIM2_REG;
 240:Generated_Source\PSoC4/CapSense.c ****         newRegValue = CapSense_csdTrim2;
 241:Generated_Source\PSoC4/CapSense.c ****         newRegValue &= CapSense_CSD_IDAC1_TRIM_MASK;
 242:Generated_Source\PSoC4/CapSense.c ****         newRegValue |= (uint32)((uint32)CapSense_SFLASH_CSD_TRIM2_REG & (uint32)CapSense_CSFLASH_TR
 243:Generated_Source\PSoC4/CapSense.c **** 
 244:Generated_Source\PSoC4/CapSense.c ****         #if (CapSense_IDAC_CNT == 2u)
 245:Generated_Source\PSoC4/CapSense.c ****             /* iDAC2 Sinking Mode */
 246:Generated_Source\PSoC4/CapSense.c ****             newRegValue &= CapSense_CSD_IDAC2_TRIM_MASK;
 247:Generated_Source\PSoC4/CapSense.c ****             newRegValue |= (uint32)((uint32)CapSense_SFLASH_CSD_TRIM2_REG & (uint32)CapSense_CSFLAS
 248:Generated_Source\PSoC4/CapSense.c ****         #endif /* (CapSense_IDAC_CNT == 2u) */
 249:Generated_Source\PSoC4/CapSense.c ****         CapSense_CSD_TRIM2_REG = newRegValue;
 250:Generated_Source\PSoC4/CapSense.c ****     #else
 251:Generated_Source\PSoC4/CapSense.c ****         /* iDAC1 Sourcing Mode */
 252:Generated_Source\PSoC4/CapSense.c ****         CapSense_csdTrim1 = (uint8)CapSense_CSD_TRIM1_REG;
 223              		.loc 1 252 0
 224 0006 244B     		ldr	r3, .L5
 225 0008 1B68     		ldr	r3, [r3]
 226 000a DAB2     		uxtb	r2, r3
 227 000c 234B     		ldr	r3, .L5+4
 228 000e 1A70     		strb	r2, [r3]
 253:Generated_Source\PSoC4/CapSense.c ****         newRegValue = CapSense_csdTrim1;
 229              		.loc 1 253 0
 230 0010 224B     		ldr	r3, .L5+4
 231 0012 1B78     		ldrb	r3, [r3]
 232 0014 7B60     		str	r3, [r7, #4]
 254:Generated_Source\PSoC4/CapSense.c ****         newRegValue &= CapSense_CSD_IDAC1_TRIM_MASK;
 233              		.loc 1 254 0
 234 0016 7B68     		ldr	r3, [r7, #4]
 235 0018 0F22     		movs	r2, #15
 236 001a 9343     		bics	r3, r2
 237 001c 7B60     		str	r3, [r7, #4]
 255:Generated_Source\PSoC4/CapSense.c ****         newRegValue |= (uint32)((uint32)CapSense_SFLASH_CSD_TRIM1_REG & (uint32)CapSense_CSFLASH_TR
 238              		.loc 1 255 0
 239 001e 204B     		ldr	r3, .L5+8
 240 0020 1B78     		ldrb	r3, [r3]
 241 0022 DBB2     		uxtb	r3, r3
 242 0024 1A00     		movs	r2, r3
 243 0026 0F23     		movs	r3, #15
 244 0028 1340     		ands	r3, r2
 245 002a 7A68     		ldr	r2, [r7, #4]
 246 002c 1343     		orrs	r3, r2
 247 002e 7B60     		str	r3, [r7, #4]
 256:Generated_Source\PSoC4/CapSense.c ****         #if (CapSense_IDAC_CNT == 2u)
 257:Generated_Source\PSoC4/CapSense.c ****              /* iDAC2 Sourcing Mode */
 258:Generated_Source\PSoC4/CapSense.c ****             newRegValue &= CapSense_CSD_IDAC2_TRIM_MASK;
 248              		.loc 1 258 0
 249 0030 7B68     		ldr	r3, [r7, #4]
 250 0032 F022     		movs	r2, #240
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 10


 251 0034 9343     		bics	r3, r2
 252 0036 7B60     		str	r3, [r7, #4]
 259:Generated_Source\PSoC4/CapSense.c ****             newRegValue |= (uint32)((uint32)CapSense_SFLASH_CSD_TRIM1_REG & (uint32)CapSense_CSFLAS
 253              		.loc 1 259 0
 254 0038 194B     		ldr	r3, .L5+8
 255 003a 1B78     		ldrb	r3, [r3]
 256 003c DBB2     		uxtb	r3, r3
 257 003e 1A00     		movs	r2, r3
 258 0040 F023     		movs	r3, #240
 259 0042 1340     		ands	r3, r2
 260 0044 7A68     		ldr	r2, [r7, #4]
 261 0046 1343     		orrs	r3, r2
 262 0048 7B60     		str	r3, [r7, #4]
 260:Generated_Source\PSoC4/CapSense.c ****         #endif
 261:Generated_Source\PSoC4/CapSense.c ****         CapSense_CSD_TRIM1_REG = newRegValue;
 263              		.loc 1 261 0
 264 004a 134B     		ldr	r3, .L5
 265 004c 7A68     		ldr	r2, [r7, #4]
 266 004e 1A60     		str	r2, [r3]
 262:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_IDAC1_POLARITY == CapSense__IDAC_SINK) */
 263:Generated_Source\PSoC4/CapSense.c **** 
 264:Generated_Source\PSoC4/CapSense.c ****     /* Configure CSD and IDAC */
 265:Generated_Source\PSoC4/CapSense.c ****     #if (CapSense_IDAC_CNT > 1u)
 266:Generated_Source\PSoC4/CapSense.c ****         CapSense_CSD_IDAC_REG = CapSense_DEFAULT_CSD_IDAC_CONFIG;
 267              		.loc 1 266 0
 268 0050 144B     		ldr	r3, .L5+12
 269 0052 154A     		ldr	r2, .L5+16
 270 0054 1A60     		str	r2, [r3]
 267:Generated_Source\PSoC4/CapSense.c ****         CapSense_CSD_CFG_REG = CapSense_DEFAULT_CSD_CONFIG;
 271              		.loc 1 267 0
 272 0056 154B     		ldr	r3, .L5+20
 273 0058 154A     		ldr	r2, .L5+24
 274 005a 1A60     		str	r2, [r3]
 268:Generated_Source\PSoC4/CapSense.c ****     #else
 269:Generated_Source\PSoC4/CapSense.c ****         CapSense_CSD_IDAC_REG &= ~(CapSense_CSD_IDAC1_MODE_MASK  | CapSense_CSD_IDAC1_DATA_MASK);
 270:Generated_Source\PSoC4/CapSense.c ****         CapSense_CSD_IDAC_REG |= CapSense_DEFAULT_CSD_IDAC_CONFIG;
 271:Generated_Source\PSoC4/CapSense.c **** 
 272:Generated_Source\PSoC4/CapSense.c ****         CapSense_CSD_CFG_REG &= ~(CapSense_CSD_CONFIG_MASK);
 273:Generated_Source\PSoC4/CapSense.c ****         CapSense_CSD_CFG_REG |= (CapSense_DEFAULT_CSD_CONFIG);
 274:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_IDAC_CNT > 1u) */
 275:Generated_Source\PSoC4/CapSense.c **** 
 276:Generated_Source\PSoC4/CapSense.c **** 
 277:Generated_Source\PSoC4/CapSense.c ****     /* Connect Cmod to AMUX bus */
 278:Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CMOD_CONNECTION_REG;
 275              		.loc 1 278 0
 276 005c 154B     		ldr	r3, .L5+28
 277 005e 1B68     		ldr	r3, [r3]
 278 0060 7B60     		str	r3, [r7, #4]
 279:Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_CSD_CMOD_CONNECTION_MASK);
 279              		.loc 1 279 0
 280 0062 7B68     		ldr	r3, [r7, #4]
 281 0064 0F22     		movs	r2, #15
 282 0066 9343     		bics	r3, r2
 283 0068 7B60     		str	r3, [r7, #4]
 280:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= CapSense_CSD_CMOD_TO_AMUXBUS_A;
 284              		.loc 1 280 0
 285 006a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 11


 286 006c 0622     		movs	r2, #6
 287 006e 1343     		orrs	r3, r2
 288 0070 7B60     		str	r3, [r7, #4]
 281:Generated_Source\PSoC4/CapSense.c ****     CapSense_CMOD_CONNECTION_REG = newRegValue;
 289              		.loc 1 281 0
 290 0072 104B     		ldr	r3, .L5+28
 291 0074 7A68     		ldr	r2, [r7, #4]
 292 0076 1A60     		str	r2, [r3]
 282:Generated_Source\PSoC4/CapSense.c **** 
 283:Generated_Source\PSoC4/CapSense.c ****     /* Configure Dead Band PWM if it is enabled */
 284:Generated_Source\PSoC4/CapSense.c ****     #if(CapSense_CSD_4B_PWM_MODE != CapSense__PWM_OFF)
 285:Generated_Source\PSoC4/CapSense.c ****         CapSense_CSD_4B_PWM_REG = CapSense_DEFAULT_CSD_4B_PWM_CONFIG;
 286:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_CSD_4B_PWM_MODE != CapSense__PWM_OFF) */
 287:Generated_Source\PSoC4/CapSense.c **** 
 288:Generated_Source\PSoC4/CapSense.c ****     /* Setup ISR */
 289:Generated_Source\PSoC4/CapSense.c ****     CyIntDisable(CapSense_ISR_NUMBER);
 293              		.loc 1 289 0
 294 0078 1020     		movs	r0, #16
 295 007a FFF7FEFF 		bl	CyIntDisable
 290:Generated_Source\PSoC4/CapSense.c ****     #if !defined(CY_EXTERNAL_INTERRUPT_CONFIG)
 291:Generated_Source\PSoC4/CapSense.c ****         (void)CyIntSetVector(CapSense_ISR_NUMBER, &CapSense_ISR);
 296              		.loc 1 291 0
 297 007e 0E4B     		ldr	r3, .L5+32
 298 0080 1900     		movs	r1, r3
 299 0082 1020     		movs	r0, #16
 300 0084 FFF7FEFF 		bl	CyIntSetVector
 292:Generated_Source\PSoC4/CapSense.c ****         CyIntSetPriority(CapSense_ISR_NUMBER, CapSense_ISR_PRIORITY);
 301              		.loc 1 292 0
 302 0088 0321     		movs	r1, #3
 303 008a 1020     		movs	r0, #16
 304 008c FFF7FEFF 		bl	CyIntSetPriority
 293:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CY_EXTERNAL_INTERRUPT_CONFIG) */
 294:Generated_Source\PSoC4/CapSense.c **** }
 305              		.loc 1 294 0
 306 0090 C046     		nop
 307 0092 BD46     		mov	sp, r7
 308 0094 02B0     		add	sp, sp, #8
 309              		@ sp needed
 310 0096 80BD     		pop	{r7, pc}
 311              	.L6:
 312              		.align	2
 313              	.L5:
 314 0098 00FF2840 		.word	1076428544
 315 009c 00000000 		.word	CapSense_csdTrim1
 316 00a0 62F1FF0F 		.word	268431714
 317 00a4 08002840 		.word	1076363272
 318 00a8 00020001 		.word	16777728
 319 00ac 04002840 		.word	1076363268
 320 00b0 0008A001 		.word	27265024
 321 00b4 00040240 		.word	1073873920
 322 00b8 00000000 		.word	CapSense_ISR
 323              		.cfi_endproc
 324              	.LFE35:
 325              		.size	CapSense_CsdHwBlockInit, .-CapSense_CsdHwBlockInit
 326              		.section	.text.CapSense_Enable,"ax",%progbits
 327              		.align	2
 328              		.global	CapSense_Enable
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 12


 329              		.code	16
 330              		.thumb_func
 331              		.type	CapSense_Enable, %function
 332              	CapSense_Enable:
 333              	.LFB36:
 295:Generated_Source\PSoC4/CapSense.c **** 
 296:Generated_Source\PSoC4/CapSense.c **** 
 297:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 298:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_Enable
 299:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 300:Generated_Source\PSoC4/CapSense.c **** *
 301:Generated_Source\PSoC4/CapSense.c **** * Summary:
 302:Generated_Source\PSoC4/CapSense.c **** *  Enables the CSD block and related resources to an active mode.
 303:Generated_Source\PSoC4/CapSense.c **** *
 304:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 305:Generated_Source\PSoC4/CapSense.c **** *  None
 306:Generated_Source\PSoC4/CapSense.c **** *
 307:Generated_Source\PSoC4/CapSense.c **** * Return:
 308:Generated_Source\PSoC4/CapSense.c **** *  None
 309:Generated_Source\PSoC4/CapSense.c **** *
 310:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 311:Generated_Source\PSoC4/CapSense.c **** *  None.
 312:Generated_Source\PSoC4/CapSense.c **** *
 313:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 314:Generated_Source\PSoC4/CapSense.c **** *  None
 315:Generated_Source\PSoC4/CapSense.c **** *
 316:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 317:Generated_Source\PSoC4/CapSense.c **** void CapSense_Enable(void)
 318:Generated_Source\PSoC4/CapSense.c **** {
 334              		.loc 1 318 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 8
 337              		@ frame_needed = 1, uses_anonymous_args = 0
 338 0000 80B5     		push	{r7, lr}
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 7, -8
 341              		.cfi_offset 14, -4
 342 0002 82B0     		sub	sp, sp, #8
 343              		.cfi_def_cfa_offset 16
 344 0004 00AF     		add	r7, sp, #0
 345              		.cfi_def_cfa_register 7
 319:Generated_Source\PSoC4/CapSense.c ****     uint32 newRegValue;
 320:Generated_Source\PSoC4/CapSense.c **** 
 321:Generated_Source\PSoC4/CapSense.c ****     /* Enable Clocks */
 322:Generated_Source\PSoC4/CapSense.c ****     CapSense_SenseClk_Stop();
 346              		.loc 1 322 0
 347 0006 FFF7FEFF 		bl	CapSense_SenseClk_Stop
 323:Generated_Source\PSoC4/CapSense.c ****     CapSense_SampleClk_Stop();
 348              		.loc 1 323 0
 349 000a FFF7FEFF 		bl	CapSense_SampleClk_Stop
 324:Generated_Source\PSoC4/CapSense.c **** 
 325:Generated_Source\PSoC4/CapSense.c ****     CapSense_SampleClk_SetDividerValue((uint16)CapSense_INITIAL_CLK_DIVIDER);
 350              		.loc 1 325 0
 351 000e 0021     		movs	r1, #0
 352 0010 0020     		movs	r0, #0
 353 0012 FFF7FEFF 		bl	CapSense_SampleClk_SetFractionalDividerRegister
 326:Generated_Source\PSoC4/CapSense.c ****     CapSense_SenseClk_SetDividerValue((uint16)CapSense_INITIAL_CLK_DIVIDER);
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 13


 354              		.loc 1 326 0
 355 0016 0021     		movs	r1, #0
 356 0018 0020     		movs	r0, #0
 357 001a FFF7FEFF 		bl	CapSense_SenseClk_SetFractionalDividerRegister
 327:Generated_Source\PSoC4/CapSense.c **** 
 328:Generated_Source\PSoC4/CapSense.c ****     #if (0u == CapSense_IS_M0S8PERI_BLOCK)
 329:Generated_Source\PSoC4/CapSense.c ****         CapSense_SenseClk_Start();
 330:Generated_Source\PSoC4/CapSense.c ****         CapSense_SampleClk_Start();
 331:Generated_Source\PSoC4/CapSense.c ****     #else
 332:Generated_Source\PSoC4/CapSense.c ****         CapSense_SampleClk_Start();
 358              		.loc 1 332 0
 359 001e FF20     		movs	r0, #255
 360 0020 FFF7FEFF 		bl	CapSense_SampleClk_StartEx
 333:Generated_Source\PSoC4/CapSense.c ****         CapSense_SenseClk_StartEx(CapSense_SampleClk__DIV_ID);
 361              		.loc 1 333 0
 362 0024 4020     		movs	r0, #64
 363 0026 FFF7FEFF 		bl	CapSense_SenseClk_StartEx
 334:Generated_Source\PSoC4/CapSense.c ****     #endif /* (0u == CapSense_IS_M0S8PERI_BLOCK) */
 335:Generated_Source\PSoC4/CapSense.c **** 
 336:Generated_Source\PSoC4/CapSense.c ****     /* Enable the CSD block */
 337:Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CSD_CFG_REG;
 364              		.loc 1 337 0
 365 002a 084B     		ldr	r3, .L8
 366 002c 1B68     		ldr	r3, [r3]
 367 002e 7B60     		str	r3, [r7, #4]
 338:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= (CapSense_CSD_CFG_ENABLE | CapSense_CSD_CFG_SENSE_COMP_EN
 368              		.loc 1 338 0
 369 0030 7B68     		ldr	r3, [r7, #4]
 370 0032 074A     		ldr	r2, .L8+4
 371 0034 1343     		orrs	r3, r2
 372 0036 7B60     		str	r3, [r7, #4]
 339:Generated_Source\PSoC4/CapSense.c ****                                                    | CapSense_CSD_CFG_SENSE_EN);
 340:Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_CFG_REG = newRegValue;
 373              		.loc 1 340 0
 374 0038 044B     		ldr	r3, .L8
 375 003a 7A68     		ldr	r2, [r7, #4]
 376 003c 1A60     		str	r2, [r3]
 341:Generated_Source\PSoC4/CapSense.c **** 
 342:Generated_Source\PSoC4/CapSense.c ****     /* Enable interrupt */
 343:Generated_Source\PSoC4/CapSense.c ****     CyIntEnable(CapSense_ISR_NUMBER);
 377              		.loc 1 343 0
 378 003e 1020     		movs	r0, #16
 379 0040 FFF7FEFF 		bl	CyIntEnable
 344:Generated_Source\PSoC4/CapSense.c **** }
 380              		.loc 1 344 0
 381 0044 C046     		nop
 382 0046 BD46     		mov	sp, r7
 383 0048 02B0     		add	sp, sp, #8
 384              		@ sp needed
 385 004a 80BD     		pop	{r7, pc}
 386              	.L9:
 387              		.align	2
 388              	.L8:
 389 004c 04002840 		.word	1076363268
 390 0050 00100880 		.word	-2146955264
 391              		.cfi_endproc
 392              	.LFE36:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 14


 393              		.size	CapSense_Enable, .-CapSense_Enable
 394              		.section	.text.CapSense_Start,"ax",%progbits
 395              		.align	2
 396              		.global	CapSense_Start
 397              		.code	16
 398              		.thumb_func
 399              		.type	CapSense_Start, %function
 400              	CapSense_Start:
 401              	.LFB37:
 345:Generated_Source\PSoC4/CapSense.c **** 
 346:Generated_Source\PSoC4/CapSense.c **** 
 347:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 348:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_Start
 349:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 350:Generated_Source\PSoC4/CapSense.c **** *
 351:Generated_Source\PSoC4/CapSense.c **** * Summary:
 352:Generated_Source\PSoC4/CapSense.c **** *  This is the preferred method to begin the component operation. CapSense_Start()
 353:Generated_Source\PSoC4/CapSense.c **** *  calls the CapSense_Init() function, and then calls the CapSense_Enable()
 354:Generated_Source\PSoC4/CapSense.c **** *  function. Initializes the registers and starts the CSD method of the CapSense
 355:Generated_Source\PSoC4/CapSense.c **** *  component. Resets all the sensors to an inactive state. Enables interrupts for
 356:Generated_Source\PSoC4/CapSense.c **** *  sensors scanning. When the SmartSense tuning mode is selected, the tuning procedure
 357:Generated_Source\PSoC4/CapSense.c **** *  is applied for all the sensors. The CapSense_Start() routine must be called before
 358:Generated_Source\PSoC4/CapSense.c **** *  any other API routines.
 359:Generated_Source\PSoC4/CapSense.c **** *
 360:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 361:Generated_Source\PSoC4/CapSense.c **** *  None
 362:Generated_Source\PSoC4/CapSense.c **** *
 363:Generated_Source\PSoC4/CapSense.c **** * Return:
 364:Generated_Source\PSoC4/CapSense.c **** *  None
 365:Generated_Source\PSoC4/CapSense.c **** *
 366:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 367:Generated_Source\PSoC4/CapSense.c **** *   CapSense_initVar - used to check the initial configuration,
 368:Generated_Source\PSoC4/CapSense.c **** *   modified on the first function call.
 369:Generated_Source\PSoC4/CapSense.c **** *  CapSense_lowLevelTuningDone - Used to notify the Tuner GUI that
 370:Generated_Source\PSoC4/CapSense.c **** *   tuning of the scanning parameters is done.
 371:Generated_Source\PSoC4/CapSense.c **** *
 372:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 373:Generated_Source\PSoC4/CapSense.c **** *  None
 374:Generated_Source\PSoC4/CapSense.c **** *
 375:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 376:Generated_Source\PSoC4/CapSense.c **** void CapSense_Start(void)
 377:Generated_Source\PSoC4/CapSense.c **** {
 402              		.loc 1 377 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406 0000 80B5     		push	{r7, lr}
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 7, -8
 409              		.cfi_offset 14, -4
 410 0002 00AF     		add	r7, sp, #0
 411              		.cfi_def_cfa_register 7
 378:Generated_Source\PSoC4/CapSense.c **** 
 379:Generated_Source\PSoC4/CapSense.c ****     static uint8 CapSense_initVar = 0u;
 380:Generated_Source\PSoC4/CapSense.c **** 
 381:Generated_Source\PSoC4/CapSense.c ****     #if((0u != CapSense_AUTOCALIBRATION_ENABLE) && (CapSense_TUNING_METHOD != CapSense__TUNING_AUTO
 382:Generated_Source\PSoC4/CapSense.c ****         uint32 curSensor;
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 15


 383:Generated_Source\PSoC4/CapSense.c ****         uint32 rawLevel;
 384:Generated_Source\PSoC4/CapSense.c ****         uint32 widget;
 385:Generated_Source\PSoC4/CapSense.c ****     #endif /* ((0u != CapSense_AUTOCALIBRATION_ENABLE) && (CapSense_TUNING_METHOD != CapSense__TUNI
 386:Generated_Source\PSoC4/CapSense.c **** 
 387:Generated_Source\PSoC4/CapSense.c ****     if (CapSense_initVar == 0u)
 412              		.loc 1 387 0
 413 0004 0C4B     		ldr	r3, .L12
 414 0006 1B78     		ldrb	r3, [r3]
 415 0008 002B     		cmp	r3, #0
 416 000a 04D1     		bne	.L11
 388:Generated_Source\PSoC4/CapSense.c ****     {
 389:Generated_Source\PSoC4/CapSense.c ****         CapSense_Init();
 417              		.loc 1 389 0
 418 000c FFF7FEFF 		bl	CapSense_Init
 390:Generated_Source\PSoC4/CapSense.c ****         CapSense_initVar = 1u;
 419              		.loc 1 390 0
 420 0010 094B     		ldr	r3, .L12
 421 0012 0122     		movs	r2, #1
 422 0014 1A70     		strb	r2, [r3]
 423              	.L11:
 391:Generated_Source\PSoC4/CapSense.c ****     }
 392:Generated_Source\PSoC4/CapSense.c ****     CapSense_Enable();
 424              		.loc 1 392 0
 425 0016 FFF7FEFF 		bl	CapSense_Enable
 393:Generated_Source\PSoC4/CapSense.c **** 
 394:Generated_Source\PSoC4/CapSense.c ****     /* AutoTunning start */
 395:Generated_Source\PSoC4/CapSense.c ****     #if(CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 396:Generated_Source\PSoC4/CapSense.c ****         #if(0u != CapSense_CSHL_API_GENERATE)
 397:Generated_Source\PSoC4/CapSense.c ****             CapSense_AutoTune();
 426              		.loc 1 397 0
 427 001a FFF7FEFF 		bl	CapSense_AutoTune
 398:Generated_Source\PSoC4/CapSense.c ****             CapSense_lowLevelTuningDone = 1u;
 428              		.loc 1 398 0
 429 001e 074B     		ldr	r3, .L12+4
 430 0020 0122     		movs	r2, #1
 431 0022 1A70     		strb	r2, [r3]
 399:Generated_Source\PSoC4/CapSense.c ****         #endif /* (0u != CapSense_CSHL_API_GENERATE) */
 400:Generated_Source\PSoC4/CapSense.c ****     #else
 401:Generated_Source\PSoC4/CapSense.c ****         #if(0u != CapSense_AUTOCALIBRATION_ENABLE)
 402:Generated_Source\PSoC4/CapSense.c **** 
 403:Generated_Source\PSoC4/CapSense.c ****             #if(CapSense_IDAC_CNT > 1u)
 404:Generated_Source\PSoC4/CapSense.c ****                 CapSense_CSD_IDAC_REG &= ~(CapSense_CSD_IDAC2_MODE_MASK);
 405:Generated_Source\PSoC4/CapSense.c ****             #endif /* (CapSense_IDAC_CNT > 1u) */
 406:Generated_Source\PSoC4/CapSense.c **** 
 407:Generated_Source\PSoC4/CapSense.c ****             for(curSensor = 0u; curSensor < CapSense_TOTAL_SCANSLOT_COUNT; curSensor++)
 408:Generated_Source\PSoC4/CapSense.c ****             {
 409:Generated_Source\PSoC4/CapSense.c ****                 widget = CapSense_widgetNumber[curSensor];
 410:Generated_Source\PSoC4/CapSense.c ****                 rawLevel = CapSense_widgetResolution[widget] >> CapSense_RESOLUTION_OFFSET;
 411:Generated_Source\PSoC4/CapSense.c **** 
 412:Generated_Source\PSoC4/CapSense.c ****                 /* Calibration level should be equal to 85% from scanning resolution */
 413:Generated_Source\PSoC4/CapSense.c ****                 rawLevel = (rawLevel * 85u) / 100u;
 414:Generated_Source\PSoC4/CapSense.c **** 
 415:Generated_Source\PSoC4/CapSense.c ****                 CapSense_CalibrateSensor(curSensor, rawLevel, CapSense_modulationIDAC);
 416:Generated_Source\PSoC4/CapSense.c ****             }
 417:Generated_Source\PSoC4/CapSense.c **** 
 418:Generated_Source\PSoC4/CapSense.c ****             #if(0u != CapSense_TOTAL_CENTROIDS_COUNT)
 419:Generated_Source\PSoC4/CapSense.c ****                 CapSense_NormalizeWidgets(CapSense_END_OF_WIDGETS_INDEX, CapSense_modulationIDAC);
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 16


 420:Generated_Source\PSoC4/CapSense.c ****             #endif /* (0u != CapSense_TOTAL_CENTROIDS_COUNT)  */
 421:Generated_Source\PSoC4/CapSense.c **** 
 422:Generated_Source\PSoC4/CapSense.c ****             #if(CapSense_IDAC_CNT > 1u)
 423:Generated_Source\PSoC4/CapSense.c ****                 for(curSensor = 0u; curSensor < CapSense_TOTAL_SCANSLOT_COUNT; curSensor++)
 424:Generated_Source\PSoC4/CapSense.c ****                 {
 425:Generated_Source\PSoC4/CapSense.c ****                     CapSense_compensationIDAC[curSensor] = CapSense_modulationIDAC[curSensor] / 2u;
 426:Generated_Source\PSoC4/CapSense.c ****                     CapSense_modulationIDAC[curSensor] = (CapSense_modulationIDAC[curSensor] + 1u) 
 427:Generated_Source\PSoC4/CapSense.c ****                 }
 428:Generated_Source\PSoC4/CapSense.c ****                 CapSense_CSD_IDAC_REG |= CapSense_CSD_IDAC2_MODE_FIXED;
 429:Generated_Source\PSoC4/CapSense.c ****             #endif /* (CapSense_IDAC_CNT > 1u) */
 430:Generated_Source\PSoC4/CapSense.c **** 
 431:Generated_Source\PSoC4/CapSense.c ****         #endif /* (0u != CapSense_AUTOCALIBRATION_ENABLE) */
 432:Generated_Source\PSoC4/CapSense.c **** 
 433:Generated_Source\PSoC4/CapSense.c ****     #endif /* ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 434:Generated_Source\PSoC4/CapSense.c **** 
 435:Generated_Source\PSoC4/CapSense.c ****     /* Initialize Advanced Centroid */
 436:Generated_Source\PSoC4/CapSense.c ****     #if(CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
 437:Generated_Source\PSoC4/CapSense.c ****         CapSense_AdvancedCentroidInit();
 438:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
 439:Generated_Source\PSoC4/CapSense.c **** 
 440:Generated_Source\PSoC4/CapSense.c ****     /* Connect sense comparator input to AMUXA */
 441:Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_CFG_REG |= CapSense_CSD_CFG_SENSE_INSEL;
 432              		.loc 1 441 0
 433 0024 064B     		ldr	r3, .L12+8
 434 0026 064A     		ldr	r2, .L12+8
 435 0028 1268     		ldr	r2, [r2]
 436 002a 8021     		movs	r1, #128
 437 002c C903     		lsls	r1, r1, #15
 438 002e 0A43     		orrs	r2, r1
 439 0030 1A60     		str	r2, [r3]
 442:Generated_Source\PSoC4/CapSense.c **** }
 440              		.loc 1 442 0
 441 0032 C046     		nop
 442 0034 BD46     		mov	sp, r7
 443              		@ sp needed
 444 0036 80BD     		pop	{r7, pc}
 445              	.L13:
 446              		.align	2
 447              	.L12:
 448 0038 0E000000 		.word	CapSense_initVar.5426
 449 003c 00000000 		.word	CapSense_lowLevelTuningDone
 450 0040 04002840 		.word	1076363268
 451              		.cfi_endproc
 452              	.LFE37:
 453              		.size	CapSense_Start, .-CapSense_Start
 454              		.section	.text.CapSense_Stop,"ax",%progbits
 455              		.align	2
 456              		.global	CapSense_Stop
 457              		.code	16
 458              		.thumb_func
 459              		.type	CapSense_Stop, %function
 460              	CapSense_Stop:
 461              	.LFB38:
 443:Generated_Source\PSoC4/CapSense.c **** 
 444:Generated_Source\PSoC4/CapSense.c **** 
 445:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 446:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_Stop
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 17


 447:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 448:Generated_Source\PSoC4/CapSense.c **** *
 449:Generated_Source\PSoC4/CapSense.c **** * Summary:
 450:Generated_Source\PSoC4/CapSense.c **** *  Stops the sensor scanning, disables component interrupts, and resets all the
 451:Generated_Source\PSoC4/CapSense.c **** *  sensors to an inactive state. Disables the Active mode power template bits for
 452:Generated_Source\PSoC4/CapSense.c **** *  the subcomponents used within CapSense.
 453:Generated_Source\PSoC4/CapSense.c **** *
 454:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 455:Generated_Source\PSoC4/CapSense.c **** *  None
 456:Generated_Source\PSoC4/CapSense.c **** *
 457:Generated_Source\PSoC4/CapSense.c **** * Return:
 458:Generated_Source\PSoC4/CapSense.c **** *  None
 459:Generated_Source\PSoC4/CapSense.c **** *
 460:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 461:Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdTrim1 - Contains the IDAC trim register value for the Sourcing Mode.
 462:Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdTrim2 - Contains the IDAC trim register value for vSinking Mode.
 463:Generated_Source\PSoC4/CapSense.c **** *
 464:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 465:Generated_Source\PSoC4/CapSense.c **** *  This function should be called after scans are completed.
 466:Generated_Source\PSoC4/CapSense.c **** *
 467:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 468:Generated_Source\PSoC4/CapSense.c **** void CapSense_Stop(void)
 469:Generated_Source\PSoC4/CapSense.c **** {
 462              		.loc 1 469 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 1, uses_anonymous_args = 0
 466 0000 80B5     		push	{r7, lr}
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 7, -8
 469              		.cfi_offset 14, -4
 470 0002 00AF     		add	r7, sp, #0
 471              		.cfi_def_cfa_register 7
 470:Generated_Source\PSoC4/CapSense.c ****     /* Disable interrupt */
 471:Generated_Source\PSoC4/CapSense.c ****     CyIntDisable(CapSense_ISR_NUMBER);
 472              		.loc 1 471 0
 473 0004 1020     		movs	r0, #16
 474 0006 FFF7FEFF 		bl	CyIntDisable
 472:Generated_Source\PSoC4/CapSense.c **** 
 473:Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_CFG_REG &= ~(CapSense_CSD_CFG_SENSE_COMP_EN | CapSense_CSD_CFG_SENSE_EN);
 475              		.loc 1 473 0
 476 000a 094B     		ldr	r3, .L15
 477 000c 084A     		ldr	r2, .L15
 478 000e 1268     		ldr	r2, [r2]
 479 0010 0849     		ldr	r1, .L15+4
 480 0012 0A40     		ands	r2, r1
 481 0014 1A60     		str	r2, [r3]
 474:Generated_Source\PSoC4/CapSense.c **** 
 475:Generated_Source\PSoC4/CapSense.c ****     #if(CapSense_IDAC_CNT == 2u)
 476:Generated_Source\PSoC4/CapSense.c ****         CapSense_CSD_CFG_REG &= ~(CapSense_CSD_CFG_ENABLE);
 482              		.loc 1 476 0
 483 0016 064B     		ldr	r3, .L15
 484 0018 054A     		ldr	r2, .L15
 485 001a 1268     		ldr	r2, [r2]
 486 001c 5200     		lsls	r2, r2, #1
 487 001e 5208     		lsrs	r2, r2, #1
 488 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 18


 477:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_IDAC_CNT == 2u) */
 478:Generated_Source\PSoC4/CapSense.c **** 
 479:Generated_Source\PSoC4/CapSense.c ****     /* Disable the Clocks */
 480:Generated_Source\PSoC4/CapSense.c ****     CapSense_SenseClk_Stop();
 489              		.loc 1 480 0
 490 0022 FFF7FEFF 		bl	CapSense_SenseClk_Stop
 481:Generated_Source\PSoC4/CapSense.c ****     CapSense_SampleClk_Stop();
 491              		.loc 1 481 0
 492 0026 FFF7FEFF 		bl	CapSense_SampleClk_Stop
 482:Generated_Source\PSoC4/CapSense.c **** }
 493              		.loc 1 482 0
 494 002a C046     		nop
 495 002c BD46     		mov	sp, r7
 496              		@ sp needed
 497 002e 80BD     		pop	{r7, pc}
 498              	.L16:
 499              		.align	2
 500              	.L15:
 501 0030 04002840 		.word	1076363268
 502 0034 FFEFF7FF 		.word	-528385
 503              		.cfi_endproc
 504              	.LFE38:
 505              		.size	CapSense_Stop, .-CapSense_Stop
 506              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
 507              		.align	2
 508              		.global	CapSense_FindNextSensor
 509              		.code	16
 510              		.thumb_func
 511              		.type	CapSense_FindNextSensor, %function
 512              	CapSense_FindNextSensor:
 513              	.LFB39:
 483:Generated_Source\PSoC4/CapSense.c **** 
 484:Generated_Source\PSoC4/CapSense.c **** 
 485:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 486:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_FindNextSensor
 487:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 488:Generated_Source\PSoC4/CapSense.c **** *
 489:Generated_Source\PSoC4/CapSense.c **** * Summary:
 490:Generated_Source\PSoC4/CapSense.c **** *  Finds the next sensor to scan.
 491:Generated_Source\PSoC4/CapSense.c **** *
 492:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 493:Generated_Source\PSoC4/CapSense.c **** *  snsIndex:  Current index of sensor.
 494:Generated_Source\PSoC4/CapSense.c **** *
 495:Generated_Source\PSoC4/CapSense.c **** * Return:
 496:Generated_Source\PSoC4/CapSense.c **** *  Returns the next sensor index to scan.
 497:Generated_Source\PSoC4/CapSense.c **** *
 498:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 499:Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorEnableMask[] - used to store bit masks of the enabled sensors.
 500:Generated_Source\PSoC4/CapSense.c **** *
 501:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 502:Generated_Source\PSoC4/CapSense.c **** *  This function affects the  current scanning and should not
 503:Generated_Source\PSoC4/CapSense.c **** *  be used outside the component.
 504:Generated_Source\PSoC4/CapSense.c **** *
 505:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 506:Generated_Source\PSoC4/CapSense.c **** uint8 CapSense_FindNextSensor(uint8 snsIndex)
 507:Generated_Source\PSoC4/CapSense.c **** {
 514              		.loc 1 507 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 19


 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 16
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518 0000 80B5     		push	{r7, lr}
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 84B0     		sub	sp, sp, #16
 523              		.cfi_def_cfa_offset 24
 524 0004 00AF     		add	r7, sp, #0
 525              		.cfi_def_cfa_register 7
 526 0006 0200     		movs	r2, r0
 527 0008 FB1D     		adds	r3, r7, #7
 528 000a 1A70     		strb	r2, [r3]
 529              	.L20:
 508:Generated_Source\PSoC4/CapSense.c ****     uint32 enableFlag;
 509:Generated_Source\PSoC4/CapSense.c **** 
 510:Generated_Source\PSoC4/CapSense.c ****     /* Check if sensor enabled */
 511:Generated_Source\PSoC4/CapSense.c ****     do
 512:Generated_Source\PSoC4/CapSense.c ****     {
 513:Generated_Source\PSoC4/CapSense.c ****         /* Proceed with next sensor */
 514:Generated_Source\PSoC4/CapSense.c ****         snsIndex++;
 530              		.loc 1 514 0
 531 000c FB1D     		adds	r3, r7, #7
 532 000e 1A78     		ldrb	r2, [r3]
 533 0010 FB1D     		adds	r3, r7, #7
 534 0012 0132     		adds	r2, r2, #1
 535 0014 1A70     		strb	r2, [r3]
 515:Generated_Source\PSoC4/CapSense.c ****         if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 536              		.loc 1 515 0
 537 0016 FB1D     		adds	r3, r7, #7
 538 0018 1B78     		ldrb	r3, [r3]
 539 001a 052B     		cmp	r3, #5
 540 001c 0CD0     		beq	.L22
 516:Generated_Source\PSoC4/CapSense.c ****         {
 517:Generated_Source\PSoC4/CapSense.c ****             break;
 518:Generated_Source\PSoC4/CapSense.c ****         }
 519:Generated_Source\PSoC4/CapSense.c ****         enableFlag = CapSense_GetBitValue(CapSense_sensorEnableMask, (uint32)snsIndex);
 541              		.loc 1 519 0
 542 001e FB1D     		adds	r3, r7, #7
 543 0020 1A78     		ldrb	r2, [r3]
 544 0022 094B     		ldr	r3, .L23
 545 0024 1100     		movs	r1, r2
 546 0026 1800     		movs	r0, r3
 547 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 548 002c 0300     		movs	r3, r0
 549 002e FB60     		str	r3, [r7, #12]
 520:Generated_Source\PSoC4/CapSense.c ****     }
 521:Generated_Source\PSoC4/CapSense.c ****     while(enableFlag == 0u);
 550              		.loc 1 521 0
 551 0030 FB68     		ldr	r3, [r7, #12]
 552 0032 002B     		cmp	r3, #0
 553 0034 EAD0     		beq	.L20
 554 0036 00E0     		b	.L19
 555              	.L22:
 517:Generated_Source\PSoC4/CapSense.c ****         }
 556              		.loc 1 517 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 20


 557 0038 C046     		nop
 558              	.L19:
 522:Generated_Source\PSoC4/CapSense.c **** 
 523:Generated_Source\PSoC4/CapSense.c ****     return ((uint8)snsIndex);
 559              		.loc 1 523 0
 560 003a FB1D     		adds	r3, r7, #7
 561 003c 1B78     		ldrb	r3, [r3]
 524:Generated_Source\PSoC4/CapSense.c **** }
 562              		.loc 1 524 0
 563 003e 1800     		movs	r0, r3
 564 0040 BD46     		mov	sp, r7
 565 0042 04B0     		add	sp, sp, #16
 566              		@ sp needed
 567 0044 80BD     		pop	{r7, pc}
 568              	.L24:
 569 0046 C046     		.align	2
 570              	.L23:
 571 0048 00000000 		.word	CapSense_sensorEnableMask
 572              		.cfi_endproc
 573              	.LFE39:
 574              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 575              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 576              		.align	2
 577              		.global	CapSense_ScanSensor
 578              		.code	16
 579              		.thumb_func
 580              		.type	CapSense_ScanSensor, %function
 581              	CapSense_ScanSensor:
 582              	.LFB40:
 525:Generated_Source\PSoC4/CapSense.c **** 
 526:Generated_Source\PSoC4/CapSense.c **** 
 527:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 528:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_ScanSensor
 529:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 530:Generated_Source\PSoC4/CapSense.c **** *
 531:Generated_Source\PSoC4/CapSense.c **** * Summary:
 532:Generated_Source\PSoC4/CapSense.c **** *  Sets the scan settings and starts scanning a sensor. After scanning is complete,
 533:Generated_Source\PSoC4/CapSense.c **** *  the ISR copies the measured sensor raw data to the global raw sensor array.
 534:Generated_Source\PSoC4/CapSense.c **** *  Use of the ISR ensures this function is non-blocking.
 535:Generated_Source\PSoC4/CapSense.c **** *  Each sensor has a unique number within the sensor array.
 536:Generated_Source\PSoC4/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 537:Generated_Source\PSoC4/CapSense.c **** *
 538:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 539:Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number.
 540:Generated_Source\PSoC4/CapSense.c **** *
 541:Generated_Source\PSoC4/CapSense.c **** * Return:
 542:Generated_Source\PSoC4/CapSense.c **** *  None
 543:Generated_Source\PSoC4/CapSense.c **** *
 544:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 545:Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdStatusVar - used to provide the status and mode of the scanning process.
 546:Generated_Source\PSoC4/CapSense.c **** *  Sets the busy status(scan in progress) and mode of scan as single scan.
 547:Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorIndex - used to store a sensor scanning sensor number.
 548:Generated_Source\PSoC4/CapSense.c **** *  Sets to the provided sensor argument.
 549:Generated_Source\PSoC4/CapSense.c **** *
 550:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 551:Generated_Source\PSoC4/CapSense.c **** *  None
 552:Generated_Source\PSoC4/CapSense.c **** *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 21


 553:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 554:Generated_Source\PSoC4/CapSense.c **** void CapSense_ScanSensor(uint32 sensor)
 555:Generated_Source\PSoC4/CapSense.c **** {
 583              		.loc 1 555 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 8
 586              		@ frame_needed = 1, uses_anonymous_args = 0
 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 82B0     		sub	sp, sp, #8
 592              		.cfi_def_cfa_offset 16
 593 0004 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
 595 0006 7860     		str	r0, [r7, #4]
 556:Generated_Source\PSoC4/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 557:Generated_Source\PSoC4/CapSense.c ****     CapSense_csdStatusVar = 0u;
 596              		.loc 1 557 0
 597 0008 084B     		ldr	r3, .L26
 598 000a 0022     		movs	r2, #0
 599 000c 1A70     		strb	r2, [r3]
 558:Generated_Source\PSoC4/CapSense.c ****     CapSense_sensorIndex = (uint8)sensor;
 600              		.loc 1 558 0
 601 000e 7B68     		ldr	r3, [r7, #4]
 602 0010 DAB2     		uxtb	r2, r3
 603 0012 074B     		ldr	r3, .L26+4
 604 0014 1A70     		strb	r2, [r3]
 559:Generated_Source\PSoC4/CapSense.c **** 
 560:Generated_Source\PSoC4/CapSense.c ****     /* Start of sensor scan */
 561:Generated_Source\PSoC4/CapSense.c ****     CapSense_csdStatusVar = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 605              		.loc 1 561 0
 606 0016 054B     		ldr	r3, .L26
 607 0018 8122     		movs	r2, #129
 608 001a 1A70     		strb	r2, [r3]
 562:Generated_Source\PSoC4/CapSense.c ****     CapSense_PreScan(sensor);
 609              		.loc 1 562 0
 610 001c 7B68     		ldr	r3, [r7, #4]
 611 001e 1800     		movs	r0, r3
 612 0020 FFF7FEFF 		bl	CapSense_PreScan
 563:Generated_Source\PSoC4/CapSense.c **** }
 613              		.loc 1 563 0
 614 0024 C046     		nop
 615 0026 BD46     		mov	sp, r7
 616 0028 02B0     		add	sp, sp, #8
 617              		@ sp needed
 618 002a 80BD     		pop	{r7, pc}
 619              	.L27:
 620              		.align	2
 621              	.L26:
 622 002c 00000000 		.word	CapSense_csdStatusVar
 623 0030 00000000 		.word	CapSense_sensorIndex
 624              		.cfi_endproc
 625              	.LFE40:
 626              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 627              		.section	.text.CapSense_ScanWidget,"ax",%progbits
 628              		.align	2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 22


 629              		.global	CapSense_ScanWidget
 630              		.code	16
 631              		.thumb_func
 632              		.type	CapSense_ScanWidget, %function
 633              	CapSense_ScanWidget:
 634              	.LFB41:
 564:Generated_Source\PSoC4/CapSense.c **** 
 565:Generated_Source\PSoC4/CapSense.c **** 
 566:Generated_Source\PSoC4/CapSense.c **** #if(0u != CapSense_CSHL_API_GENERATE)
 567:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 568:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_ScanWidget
 569:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 570:Generated_Source\PSoC4/CapSense.c **** *
 571:Generated_Source\PSoC4/CapSense.c **** * Summary:
 572:Generated_Source\PSoC4/CapSense.c **** *  Sets the scan settings and starts scanning a widget.
 573:Generated_Source\PSoC4/CapSense.c **** *
 574:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 575:Generated_Source\PSoC4/CapSense.c **** *  uint32 widget: Widget number.
 576:Generated_Source\PSoC4/CapSense.c **** *
 577:Generated_Source\PSoC4/CapSense.c **** * Return:
 578:Generated_Source\PSoC4/CapSense.c **** *  None
 579:Generated_Source\PSoC4/CapSense.c **** *
 580:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 581:Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdStatusVar - used to provide the status and mode of the scanning process.
 582:Generated_Source\PSoC4/CapSense.c **** *  Sets the busy status(scan in progress) and clears the single scan mode.
 583:Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorIndex - used to store a sensor scanning sensor number.
 584:Generated_Source\PSoC4/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
 585:Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorEnableMask[] - used to store bit masks of the enabled sensors.
 586:Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorEnableMaskBackup[] - used to backup bit masks of the enabled
 587:Generated_Source\PSoC4/CapSense.c **** *   sensors.
 588:Generated_Source\PSoC4/CapSense.c **** *
 589:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 590:Generated_Source\PSoC4/CapSense.c **** *  None
 591:Generated_Source\PSoC4/CapSense.c **** *
 592:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/CapSense.c **** void CapSense_ScanWidget(uint32 widget)
 594:Generated_Source\PSoC4/CapSense.c **** {
 635              		.loc 1 594 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 24
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639 0000 80B5     		push	{r7, lr}
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 7, -8
 642              		.cfi_offset 14, -4
 643 0002 86B0     		sub	sp, sp, #24
 644              		.cfi_def_cfa_offset 32
 645 0004 00AF     		add	r7, sp, #0
 646              		.cfi_def_cfa_register 7
 647 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/CapSense.c ****     uint32 sensorsPerWidget;
 596:Generated_Source\PSoC4/CapSense.c ****     uint32 lastSensor;
 597:Generated_Source\PSoC4/CapSense.c ****     uint32 snsIndex;
 598:Generated_Source\PSoC4/CapSense.c **** 
 599:Generated_Source\PSoC4/CapSense.c ****     /* Get first sensor in widget */
 600:Generated_Source\PSoC4/CapSense.c ****     CapSense_sensorIndex = CapSense_rawDataIndex[widget];
 648              		.loc 1 600 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 23


 649 0008 2E4A     		ldr	r2, .L38
 650 000a 7B68     		ldr	r3, [r7, #4]
 651 000c D318     		adds	r3, r2, r3
 652 000e 1A78     		ldrb	r2, [r3]
 653 0010 2D4B     		ldr	r3, .L38+4
 654 0012 1A70     		strb	r2, [r3]
 601:Generated_Source\PSoC4/CapSense.c **** 
 602:Generated_Source\PSoC4/CapSense.c ****     /* Get number of sensors in widget */
 603:Generated_Source\PSoC4/CapSense.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 655              		.loc 1 603 0
 656 0014 2D4A     		ldr	r2, .L38+8
 657 0016 7B68     		ldr	r3, [r7, #4]
 658 0018 D318     		adds	r3, r2, r3
 659 001a 1B78     		ldrb	r3, [r3]
 660 001c 7B61     		str	r3, [r7, #20]
 604:Generated_Source\PSoC4/CapSense.c **** 
 605:Generated_Source\PSoC4/CapSense.c ****     /* Check if generic Sensor */
 606:Generated_Source\PSoC4/CapSense.c ****     if(sensorsPerWidget == 0u)
 661              		.loc 1 606 0
 662 001e 7B69     		ldr	r3, [r7, #20]
 663 0020 002B     		cmp	r3, #0
 664 0022 01D1     		bne	.L29
 607:Generated_Source\PSoC4/CapSense.c ****     {
 608:Generated_Source\PSoC4/CapSense.c ****         sensorsPerWidget = 1u;
 665              		.loc 1 608 0
 666 0024 0123     		movs	r3, #1
 667 0026 7B61     		str	r3, [r7, #20]
 668              	.L29:
 609:Generated_Source\PSoC4/CapSense.c ****     }
 610:Generated_Source\PSoC4/CapSense.c **** 
 611:Generated_Source\PSoC4/CapSense.c ****     /* Get last sensor in widget */
 612:Generated_Source\PSoC4/CapSense.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget) - 1u;
 669              		.loc 1 612 0
 670 0028 264A     		ldr	r2, .L38
 671 002a 7B68     		ldr	r3, [r7, #4]
 672 002c D318     		adds	r3, r2, r3
 673 002e 1B78     		ldrb	r3, [r3]
 674 0030 1A00     		movs	r2, r3
 675 0032 7B69     		ldr	r3, [r7, #20]
 676 0034 D318     		adds	r3, r2, r3
 677 0036 013B     		subs	r3, r3, #1
 678 0038 FB60     		str	r3, [r7, #12]
 613:Generated_Source\PSoC4/CapSense.c **** 
 614:Generated_Source\PSoC4/CapSense.c ****     /* Backup sensorEnableMask array */
 615:Generated_Source\PSoC4/CapSense.c ****     for(snsIndex = 0u; snsIndex < CapSense_TOTAL_SENSOR_MASK; snsIndex++)
 679              		.loc 1 615 0
 680 003a 0023     		movs	r3, #0
 681 003c 3B61     		str	r3, [r7, #16]
 682 003e 0BE0     		b	.L30
 683              	.L31:
 616:Generated_Source\PSoC4/CapSense.c ****     {
 617:Generated_Source\PSoC4/CapSense.c ****         /* Backup sensorEnableMask array */
 618:Generated_Source\PSoC4/CapSense.c ****         CapSense_sensorEnableMaskBackup[snsIndex] = CapSense_sensorEnableMask[snsIndex];
 684              		.loc 1 618 0 discriminator 3
 685 0040 234A     		ldr	r2, .L38+12
 686 0042 3B69     		ldr	r3, [r7, #16]
 687 0044 D318     		adds	r3, r2, r3
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 24


 688 0046 1978     		ldrb	r1, [r3]
 689 0048 224A     		ldr	r2, .L38+16
 690 004a 3B69     		ldr	r3, [r7, #16]
 691 004c D318     		adds	r3, r2, r3
 692 004e 0A1C     		adds	r2, r1, #0
 693 0050 1A70     		strb	r2, [r3]
 615:Generated_Source\PSoC4/CapSense.c ****     {
 694              		.loc 1 615 0 discriminator 3
 695 0052 3B69     		ldr	r3, [r7, #16]
 696 0054 0133     		adds	r3, r3, #1
 697 0056 3B61     		str	r3, [r7, #16]
 698              	.L30:
 615:Generated_Source\PSoC4/CapSense.c ****     {
 699              		.loc 1 615 0 is_stmt 0 discriminator 1
 700 0058 3B69     		ldr	r3, [r7, #16]
 701 005a 002B     		cmp	r3, #0
 702 005c F0D0     		beq	.L31
 619:Generated_Source\PSoC4/CapSense.c ****     }
 620:Generated_Source\PSoC4/CapSense.c **** 
 621:Generated_Source\PSoC4/CapSense.c ****     /* Update sensorEnableMask to scan the sensors that belong to widget */
 622:Generated_Source\PSoC4/CapSense.c ****     for(snsIndex = 0u; snsIndex < CapSense_TOTAL_SENSOR_COUNT; snsIndex++)
 703              		.loc 1 622 0 is_stmt 1
 704 005e 0023     		movs	r3, #0
 705 0060 3B61     		str	r3, [r7, #16]
 706 0062 1AE0     		b	.L32
 707              	.L35:
 623:Generated_Source\PSoC4/CapSense.c ****     {
 624:Generated_Source\PSoC4/CapSense.c ****         /* Update sensorEnableMask array bits to scan the widget only */
 625:Generated_Source\PSoC4/CapSense.c ****         if((snsIndex >= CapSense_sensorIndex) && (snsIndex <= lastSensor))
 708              		.loc 1 625 0
 709 0064 184B     		ldr	r3, .L38+4
 710 0066 1B78     		ldrb	r3, [r3]
 711 0068 DBB2     		uxtb	r3, r3
 712 006a 1A00     		movs	r2, r3
 713 006c 3B69     		ldr	r3, [r7, #16]
 714 006e 9A42     		cmp	r2, r3
 715 0070 0AD8     		bhi	.L33
 716              		.loc 1 625 0 is_stmt 0 discriminator 1
 717 0072 3A69     		ldr	r2, [r7, #16]
 718 0074 FB68     		ldr	r3, [r7, #12]
 719 0076 9A42     		cmp	r2, r3
 720 0078 06D8     		bhi	.L33
 626:Generated_Source\PSoC4/CapSense.c ****         {
 627:Generated_Source\PSoC4/CapSense.c ****             /* Set sensor bit to scan */
 628:Generated_Source\PSoC4/CapSense.c ****             CapSense_SetBitValue(CapSense_sensorEnableMask, snsIndex, 1u);
 721              		.loc 1 628 0 is_stmt 1
 722 007a 3969     		ldr	r1, [r7, #16]
 723 007c 144B     		ldr	r3, .L38+12
 724 007e 0122     		movs	r2, #1
 725 0080 1800     		movs	r0, r3
 726 0082 FFF7FEFF 		bl	CapSense_SetBitValue
 727 0086 05E0     		b	.L34
 728              	.L33:
 629:Generated_Source\PSoC4/CapSense.c ****         }
 630:Generated_Source\PSoC4/CapSense.c ****         else
 631:Generated_Source\PSoC4/CapSense.c ****         {
 632:Generated_Source\PSoC4/CapSense.c ****             /* Reset sensor bit to do not scan */
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 25


 633:Generated_Source\PSoC4/CapSense.c ****             CapSense_SetBitValue(CapSense_sensorEnableMask, snsIndex, 0u);
 729              		.loc 1 633 0
 730 0088 3969     		ldr	r1, [r7, #16]
 731 008a 114B     		ldr	r3, .L38+12
 732 008c 0022     		movs	r2, #0
 733 008e 1800     		movs	r0, r3
 734 0090 FFF7FEFF 		bl	CapSense_SetBitValue
 735              	.L34:
 622:Generated_Source\PSoC4/CapSense.c ****     {
 736              		.loc 1 622 0 discriminator 2
 737 0094 3B69     		ldr	r3, [r7, #16]
 738 0096 0133     		adds	r3, r3, #1
 739 0098 3B61     		str	r3, [r7, #16]
 740              	.L32:
 622:Generated_Source\PSoC4/CapSense.c ****     {
 741              		.loc 1 622 0 is_stmt 0 discriminator 1
 742 009a 3B69     		ldr	r3, [r7, #16]
 743 009c 042B     		cmp	r3, #4
 744 009e E1D9     		bls	.L35
 634:Generated_Source\PSoC4/CapSense.c ****         }
 635:Generated_Source\PSoC4/CapSense.c ****     }
 636:Generated_Source\PSoC4/CapSense.c **** 
 637:Generated_Source\PSoC4/CapSense.c ****     /* Check end of scan condition */
 638:Generated_Source\PSoC4/CapSense.c ****     if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
 745              		.loc 1 638 0 is_stmt 1
 746 00a0 094B     		ldr	r3, .L38+4
 747 00a2 1B78     		ldrb	r3, [r3]
 748 00a4 DBB2     		uxtb	r3, r3
 749 00a6 042B     		cmp	r3, #4
 750 00a8 08D8     		bhi	.L37
 639:Generated_Source\PSoC4/CapSense.c ****     {
 640:Generated_Source\PSoC4/CapSense.c ****         /* Set widget busy bit in status/control variable*/
 641:Generated_Source\PSoC4/CapSense.c ****         CapSense_csdStatusVar = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_WIDGET_SCAN);
 751              		.loc 1 641 0
 752 00aa 0B4B     		ldr	r3, .L38+20
 753 00ac 4122     		movs	r2, #65
 754 00ae 1A70     		strb	r2, [r3]
 642:Generated_Source\PSoC4/CapSense.c ****         /* Scan first sensor of widget*/
 643:Generated_Source\PSoC4/CapSense.c ****         CapSense_PreScan((uint32)CapSense_sensorIndex);
 755              		.loc 1 643 0
 756 00b0 054B     		ldr	r3, .L38+4
 757 00b2 1B78     		ldrb	r3, [r3]
 758 00b4 DBB2     		uxtb	r3, r3
 759 00b6 1800     		movs	r0, r3
 760 00b8 FFF7FEFF 		bl	CapSense_PreScan
 761              	.L37:
 644:Generated_Source\PSoC4/CapSense.c ****     }
 645:Generated_Source\PSoC4/CapSense.c **** }
 762              		.loc 1 645 0
 763 00bc C046     		nop
 764 00be BD46     		mov	sp, r7
 765 00c0 06B0     		add	sp, sp, #24
 766              		@ sp needed
 767 00c2 80BD     		pop	{r7, pc}
 768              	.L39:
 769              		.align	2
 770              	.L38:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 26


 771 00c4 00000000 		.word	CapSense_rawDataIndex
 772 00c8 00000000 		.word	CapSense_sensorIndex
 773 00cc 00000000 		.word	CapSense_numberOfSensors
 774 00d0 00000000 		.word	CapSense_sensorEnableMask
 775 00d4 00000000 		.word	CapSense_sensorEnableMaskBackup
 776 00d8 00000000 		.word	CapSense_csdStatusVar
 777              		.cfi_endproc
 778              	.LFE41:
 779              		.size	CapSense_ScanWidget, .-CapSense_ScanWidget
 780              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 781              		.align	2
 782              		.global	CapSense_ScanEnabledWidgets
 783              		.code	16
 784              		.thumb_func
 785              		.type	CapSense_ScanEnabledWidgets, %function
 786              	CapSense_ScanEnabledWidgets:
 787              	.LFB42:
 646:Generated_Source\PSoC4/CapSense.c **** #endif /* (0u != CapSense_CSHL_API_GENERATE) */
 647:Generated_Source\PSoC4/CapSense.c **** 
 648:Generated_Source\PSoC4/CapSense.c **** 
 649:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 650:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 651:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 652:Generated_Source\PSoC4/CapSense.c **** *
 653:Generated_Source\PSoC4/CapSense.c **** * Summary:
 654:Generated_Source\PSoC4/CapSense.c **** *  This is the preferred method to scan all of the enabled widgets.
 655:Generated_Source\PSoC4/CapSense.c **** *  The API starts scanning a sensor within the enabled widgets.
 656:Generated_Source\PSoC4/CapSense.c **** *  The ISR continues scanning the sensors until all the enabled widgets are scanned.
 657:Generated_Source\PSoC4/CapSense.c **** *  Use of the ISR ensures this function is non-blocking.
 658:Generated_Source\PSoC4/CapSense.c **** *  All the widgets are enabled by default except proximity widgets.
 659:Generated_Source\PSoC4/CapSense.c **** *  The proximity widgets must be manually enabled as their long scan time
 660:Generated_Source\PSoC4/CapSense.c **** *  is incompatible with a fast response required of other widget types.
 661:Generated_Source\PSoC4/CapSense.c **** *
 662:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 663:Generated_Source\PSoC4/CapSense.c **** *  None
 664:Generated_Source\PSoC4/CapSense.c **** *
 665:Generated_Source\PSoC4/CapSense.c **** * Return:
 666:Generated_Source\PSoC4/CapSense.c **** *  None
 667:Generated_Source\PSoC4/CapSense.c **** *
 668:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 669:Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdStatusVar - used to provide the status and mode of the scanning process.
 670:Generated_Source\PSoC4/CapSense.c **** *  Sets the busy status(scan in progress) and clears the single scan mode.
 671:Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorIndex - used to store a sensor scanning sensor number.
 672:Generated_Source\PSoC4/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
 673:Generated_Source\PSoC4/CapSense.c **** *
 674:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 675:Generated_Source\PSoC4/CapSense.c **** *  None
 676:Generated_Source\PSoC4/CapSense.c **** *
 677:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 678:Generated_Source\PSoC4/CapSense.c **** void CapSense_ScanEnabledWidgets(void)
 679:Generated_Source\PSoC4/CapSense.c **** {
 788              		.loc 1 679 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 1, uses_anonymous_args = 0
 792 0000 80B5     		push	{r7, lr}
 793              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 27


 794              		.cfi_offset 7, -8
 795              		.cfi_offset 14, -4
 796 0002 00AF     		add	r7, sp, #0
 797              		.cfi_def_cfa_register 7
 680:Generated_Source\PSoC4/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 681:Generated_Source\PSoC4/CapSense.c ****     CapSense_csdStatusVar = 0u;
 798              		.loc 1 681 0
 799 0004 124B     		ldr	r3, .L43
 800 0006 0022     		movs	r2, #0
 801 0008 1A70     		strb	r2, [r3]
 682:Generated_Source\PSoC4/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 802              		.loc 1 682 0
 803 000a 124B     		ldr	r3, .L43+4
 804 000c FF22     		movs	r2, #255
 805 000e 1A70     		strb	r2, [r3]
 683:Generated_Source\PSoC4/CapSense.c **** 
 684:Generated_Source\PSoC4/CapSense.c ****     /* Find next sensor */
 685:Generated_Source\PSoC4/CapSense.c ****     CapSense_sensorIndex = (uint8)CapSense_FindNextSensor(CapSense_sensorIndex);
 806              		.loc 1 685 0
 807 0010 104B     		ldr	r3, .L43+4
 808 0012 1B78     		ldrb	r3, [r3]
 809 0014 DBB2     		uxtb	r3, r3
 810 0016 1800     		movs	r0, r3
 811 0018 FFF7FEFF 		bl	CapSense_FindNextSensor
 812 001c 0300     		movs	r3, r0
 813 001e 1A00     		movs	r2, r3
 814 0020 0C4B     		ldr	r3, .L43+4
 815 0022 1A70     		strb	r2, [r3]
 686:Generated_Source\PSoC4/CapSense.c **** 
 687:Generated_Source\PSoC4/CapSense.c ****     /* Check end of scan condition */
 688:Generated_Source\PSoC4/CapSense.c ****     if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
 816              		.loc 1 688 0
 817 0024 0B4B     		ldr	r3, .L43+4
 818 0026 1B78     		ldrb	r3, [r3]
 819 0028 DBB2     		uxtb	r3, r3
 820 002a 042B     		cmp	r3, #4
 821 002c 0DD8     		bhi	.L42
 689:Generated_Source\PSoC4/CapSense.c ****     {
 690:Generated_Source\PSoC4/CapSense.c ****         CapSense_csdStatusVar |= CapSense_SW_STS_BUSY;
 822              		.loc 1 690 0
 823 002e 084B     		ldr	r3, .L43
 824 0030 1B78     		ldrb	r3, [r3]
 825 0032 DBB2     		uxtb	r3, r3
 826 0034 0122     		movs	r2, #1
 827 0036 1343     		orrs	r3, r2
 828 0038 DAB2     		uxtb	r2, r3
 829 003a 054B     		ldr	r3, .L43
 830 003c 1A70     		strb	r2, [r3]
 691:Generated_Source\PSoC4/CapSense.c ****         CapSense_PreScan((uint32)CapSense_sensorIndex);
 831              		.loc 1 691 0
 832 003e 054B     		ldr	r3, .L43+4
 833 0040 1B78     		ldrb	r3, [r3]
 834 0042 DBB2     		uxtb	r3, r3
 835 0044 1800     		movs	r0, r3
 836 0046 FFF7FEFF 		bl	CapSense_PreScan
 837              	.L42:
 692:Generated_Source\PSoC4/CapSense.c ****     }
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 28


 693:Generated_Source\PSoC4/CapSense.c **** }
 838              		.loc 1 693 0
 839 004a C046     		nop
 840 004c BD46     		mov	sp, r7
 841              		@ sp needed
 842 004e 80BD     		pop	{r7, pc}
 843              	.L44:
 844              		.align	2
 845              	.L43:
 846 0050 00000000 		.word	CapSense_csdStatusVar
 847 0054 00000000 		.word	CapSense_sensorIndex
 848              		.cfi_endproc
 849              	.LFE42:
 850              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 851              		.section	.text.CapSense_IsBusy,"ax",%progbits
 852              		.align	2
 853              		.global	CapSense_IsBusy
 854              		.code	16
 855              		.thumb_func
 856              		.type	CapSense_IsBusy, %function
 857              	CapSense_IsBusy:
 858              	.LFB43:
 694:Generated_Source\PSoC4/CapSense.c **** 
 695:Generated_Source\PSoC4/CapSense.c **** 
 696:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 697:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_IsBusy
 698:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 699:Generated_Source\PSoC4/CapSense.c **** *
 700:Generated_Source\PSoC4/CapSense.c **** * Summary:
 701:Generated_Source\PSoC4/CapSense.c **** *  Returns the state of the CapSense component. 1 means that scanning in
 702:Generated_Source\PSoC4/CapSense.c **** *  progress and 0 means that scanning is complete.
 703:Generated_Source\PSoC4/CapSense.c **** *
 704:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 705:Generated_Source\PSoC4/CapSense.c **** *  None
 706:Generated_Source\PSoC4/CapSense.c **** *
 707:Generated_Source\PSoC4/CapSense.c **** * Return:
 708:Generated_Source\PSoC4/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning
 709:Generated_Source\PSoC4/CapSense.c **** *  completed.
 710:Generated_Source\PSoC4/CapSense.c **** *
 711:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 712:Generated_Source\PSoC4/CapSense.c **** *  CapSense_csdStatusVar - used to provide the status and mode of the scanning process.
 713:Generated_Source\PSoC4/CapSense.c **** *  Checks the busy status.
 714:Generated_Source\PSoC4/CapSense.c **** *
 715:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 716:Generated_Source\PSoC4/CapSense.c **** *  None
 717:Generated_Source\PSoC4/CapSense.c **** *
 718:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 719:Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_IsBusy(void)
 720:Generated_Source\PSoC4/CapSense.c **** {
 859              		.loc 1 720 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 1, uses_anonymous_args = 0
 863 0000 80B5     		push	{r7, lr}
 864              		.cfi_def_cfa_offset 8
 865              		.cfi_offset 7, -8
 866              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 29


 867 0002 00AF     		add	r7, sp, #0
 868              		.cfi_def_cfa_register 7
 721:Generated_Source\PSoC4/CapSense.c ****     return ((uint32)((0u != (CapSense_csdStatusVar & CapSense_SW_STS_BUSY)) ? 1u : 0u));
 869              		.loc 1 721 0
 870 0004 044B     		ldr	r3, .L47
 871 0006 1B78     		ldrb	r3, [r3]
 872 0008 DBB2     		uxtb	r3, r3
 873 000a 1A00     		movs	r2, r3
 874 000c 0123     		movs	r3, #1
 875 000e 1340     		ands	r3, r2
 722:Generated_Source\PSoC4/CapSense.c **** }
 876              		.loc 1 722 0
 877 0010 1800     		movs	r0, r3
 878 0012 BD46     		mov	sp, r7
 879              		@ sp needed
 880 0014 80BD     		pop	{r7, pc}
 881              	.L48:
 882 0016 C046     		.align	2
 883              	.L47:
 884 0018 00000000 		.word	CapSense_csdStatusVar
 885              		.cfi_endproc
 886              	.LFE43:
 887              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 888              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 889              		.align	2
 890              		.global	CapSense_ReadSensorRaw
 891              		.code	16
 892              		.thumb_func
 893              		.type	CapSense_ReadSensorRaw, %function
 894              	CapSense_ReadSensorRaw:
 895              	.LFB44:
 723:Generated_Source\PSoC4/CapSense.c **** 
 724:Generated_Source\PSoC4/CapSense.c **** 
 725:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 726:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
 727:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 728:Generated_Source\PSoC4/CapSense.c **** *
 729:Generated_Source\PSoC4/CapSense.c **** * Summary:
 730:Generated_Source\PSoC4/CapSense.c **** *  Returns sensor raw data from the global CapSense_sensorRaw[ ] array.
 731:Generated_Source\PSoC4/CapSense.c **** *  Each scan sensor has a unique number within the sensor array.
 732:Generated_Source\PSoC4/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 733:Generated_Source\PSoC4/CapSense.c **** *  Raw data can be used to perform calculations outside of the CapSense
 734:Generated_Source\PSoC4/CapSense.c **** *  provided framework.
 735:Generated_Source\PSoC4/CapSense.c **** *
 736:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 737:Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number.
 738:Generated_Source\PSoC4/CapSense.c **** *
 739:Generated_Source\PSoC4/CapSense.c **** * Return:
 740:Generated_Source\PSoC4/CapSense.c **** *  Returns the current raw data value for a defined sensor number.
 741:Generated_Source\PSoC4/CapSense.c **** *
 742:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 743:Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
 744:Generated_Source\PSoC4/CapSense.c **** *
 745:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 746:Generated_Source\PSoC4/CapSense.c **** *  None
 747:Generated_Source\PSoC4/CapSense.c **** *
 748:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 30


 749:Generated_Source\PSoC4/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint32 sensor)
 750:Generated_Source\PSoC4/CapSense.c **** {
 896              		.loc 1 750 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 8
 899              		@ frame_needed = 1, uses_anonymous_args = 0
 900 0000 80B5     		push	{r7, lr}
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 7, -8
 903              		.cfi_offset 14, -4
 904 0002 82B0     		sub	sp, sp, #8
 905              		.cfi_def_cfa_offset 16
 906 0004 00AF     		add	r7, sp, #0
 907              		.cfi_def_cfa_register 7
 908 0006 7860     		str	r0, [r7, #4]
 751:Generated_Source\PSoC4/CapSense.c ****     return CapSense_sensorRaw[sensor];
 909              		.loc 1 751 0
 910 0008 034B     		ldr	r3, .L51
 911 000a 7A68     		ldr	r2, [r7, #4]
 912 000c 5200     		lsls	r2, r2, #1
 913 000e D35A     		ldrh	r3, [r2, r3]
 752:Generated_Source\PSoC4/CapSense.c **** }
 914              		.loc 1 752 0
 915 0010 1800     		movs	r0, r3
 916 0012 BD46     		mov	sp, r7
 917 0014 02B0     		add	sp, sp, #8
 918              		@ sp needed
 919 0016 80BD     		pop	{r7, pc}
 920              	.L52:
 921              		.align	2
 922              	.L51:
 923 0018 00000000 		.word	CapSense_sensorRaw
 924              		.cfi_endproc
 925              	.LFE44:
 926              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 927              		.section	.text.CapSense_WriteSensorRaw,"ax",%progbits
 928              		.align	2
 929              		.global	CapSense_WriteSensorRaw
 930              		.code	16
 931              		.thumb_func
 932              		.type	CapSense_WriteSensorRaw, %function
 933              	CapSense_WriteSensorRaw:
 934              	.LFB45:
 753:Generated_Source\PSoC4/CapSense.c **** 
 754:Generated_Source\PSoC4/CapSense.c **** 
 755:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 756:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_WriteSensorRaw
 757:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 758:Generated_Source\PSoC4/CapSense.c **** *
 759:Generated_Source\PSoC4/CapSense.c **** * Summary:
 760:Generated_Source\PSoC4/CapSense.c **** *  This API writes the raw count value passed as an argument to the sensor Raw count array.
 761:Generated_Source\PSoC4/CapSense.c **** *
 762:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 763:Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number.
 764:Generated_Source\PSoC4/CapSense.c **** *  value: Raw count value.
 765:Generated_Source\PSoC4/CapSense.c **** *
 766:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 31


 767:Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
 768:Generated_Source\PSoC4/CapSense.c **** *
 769:Generated_Source\PSoC4/CapSense.c **** * Return:
 770:Generated_Source\PSoC4/CapSense.c **** *  None
 771:Generated_Source\PSoC4/CapSense.c **** *
 772:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 773:Generated_Source\PSoC4/CapSense.c **** *  None
 774:Generated_Source\PSoC4/CapSense.c **** *
 775:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 776:Generated_Source\PSoC4/CapSense.c **** void CapSense_WriteSensorRaw(uint32 sensor, uint16 value)
 777:Generated_Source\PSoC4/CapSense.c **** {
 935              		.loc 1 777 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 8
 938              		@ frame_needed = 1, uses_anonymous_args = 0
 939 0000 80B5     		push	{r7, lr}
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 7, -8
 942              		.cfi_offset 14, -4
 943 0002 82B0     		sub	sp, sp, #8
 944              		.cfi_def_cfa_offset 16
 945 0004 00AF     		add	r7, sp, #0
 946              		.cfi_def_cfa_register 7
 947 0006 7860     		str	r0, [r7, #4]
 948 0008 0A00     		movs	r2, r1
 949 000a BB1C     		adds	r3, r7, #2
 950 000c 1A80     		strh	r2, [r3]
 778:Generated_Source\PSoC4/CapSense.c ****     CapSense_sensorRaw[sensor] = value;
 951              		.loc 1 778 0
 952 000e 054B     		ldr	r3, .L54
 953 0010 7A68     		ldr	r2, [r7, #4]
 954 0012 5200     		lsls	r2, r2, #1
 955 0014 B91C     		adds	r1, r7, #2
 956 0016 0988     		ldrh	r1, [r1]
 957 0018 D152     		strh	r1, [r2, r3]
 779:Generated_Source\PSoC4/CapSense.c **** }
 958              		.loc 1 779 0
 959 001a C046     		nop
 960 001c BD46     		mov	sp, r7
 961 001e 02B0     		add	sp, sp, #8
 962              		@ sp needed
 963 0020 80BD     		pop	{r7, pc}
 964              	.L55:
 965 0022 C046     		.align	2
 966              	.L54:
 967 0024 00000000 		.word	CapSense_sensorRaw
 968              		.cfi_endproc
 969              	.LFE45:
 970              		.size	CapSense_WriteSensorRaw, .-CapSense_WriteSensorRaw
 971              		.section	.text.CapSense_SetScanResolution,"ax",%progbits
 972              		.align	2
 973              		.global	CapSense_SetScanResolution
 974              		.code	16
 975              		.thumb_func
 976              		.type	CapSense_SetScanResolution, %function
 977              	CapSense_SetScanResolution:
 978              	.LFB46:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 32


 780:Generated_Source\PSoC4/CapSense.c **** 
 781:Generated_Source\PSoC4/CapSense.c **** 
 782:Generated_Source\PSoC4/CapSense.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 783:Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
 784:Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_SetScanResolution
 785:Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
 786:Generated_Source\PSoC4/CapSense.c ****     *
 787:Generated_Source\PSoC4/CapSense.c ****     * Summary:
 788:Generated_Source\PSoC4/CapSense.c ****     *  Sets a value of the sensor scan resolution for a widget.
 789:Generated_Source\PSoC4/CapSense.c ****     *  The MIN resolution can be set 8-bit. The MAX Resolution can be set 16 bit.
 790:Generated_Source\PSoC4/CapSense.c ****     *  This function is not available for the tuning mode "None".
 791:Generated_Source\PSoC4/CapSense.c ****     *
 792:Generated_Source\PSoC4/CapSense.c ****     * Parameters:
 793:Generated_Source\PSoC4/CapSense.c ****     *  widget:     Widget index.
 794:Generated_Source\PSoC4/CapSense.c ****     *  resolution: Represents the resolution value. The following defines which are available in th
 795:Generated_Source\PSoC4/CapSense.c ****     *              CapSense.h file should be used:
 796:Generated_Source\PSoC4/CapSense.c ****     *              CapSense_RESOLUTION_6_BITS
 797:Generated_Source\PSoC4/CapSense.c ****     *              CapSense_RESOLUTION_7_BITS
 798:Generated_Source\PSoC4/CapSense.c ****     *              CapSense_RESOLUTION_8_BITS
 799:Generated_Source\PSoC4/CapSense.c ****     *              CapSense_RESOLUTION_9_BITS
 800:Generated_Source\PSoC4/CapSense.c ****     *              CapSense_RESOLUTION_10_BITS
 801:Generated_Source\PSoC4/CapSense.c ****     *              CapSense_RESOLUTION_11_BITS
 802:Generated_Source\PSoC4/CapSense.c ****     *              CapSense_RESOLUTION_12_BITS
 803:Generated_Source\PSoC4/CapSense.c ****     *              CapSense_RESOLUTION_13_BITS
 804:Generated_Source\PSoC4/CapSense.c ****     *              CapSense_RESOLUTION_14_BITS
 805:Generated_Source\PSoC4/CapSense.c ****     *              CapSense_RESOLUTION_15_BITS
 806:Generated_Source\PSoC4/CapSense.c ****     *              CapSense_RESOLUTION_16_BITS
 807:Generated_Source\PSoC4/CapSense.c ****     *
 808:Generated_Source\PSoC4/CapSense.c ****     * Return:
 809:Generated_Source\PSoC4/CapSense.c ****     *  None
 810:Generated_Source\PSoC4/CapSense.c ****     *
 811:Generated_Source\PSoC4/CapSense.c ****     * Global Variables:
 812:Generated_Source\PSoC4/CapSense.c ****     *  CapSense_widgetResolution[] - used to store scan resolution of each widget.
 813:Generated_Source\PSoC4/CapSense.c ****     *
 814:Generated_Source\PSoC4/CapSense.c ****     * Side Effects:
 815:Generated_Source\PSoC4/CapSense.c ****     *  None
 816:Generated_Source\PSoC4/CapSense.c ****     *
 817:Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
 818:Generated_Source\PSoC4/CapSense.c ****     void CapSense_SetScanResolution(uint32 widget, uint32 resolution)
 819:Generated_Source\PSoC4/CapSense.c ****     {
 979              		.loc 1 819 0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 8
 982              		@ frame_needed = 1, uses_anonymous_args = 0
 983 0000 80B5     		push	{r7, lr}
 984              		.cfi_def_cfa_offset 8
 985              		.cfi_offset 7, -8
 986              		.cfi_offset 14, -4
 987 0002 82B0     		sub	sp, sp, #8
 988              		.cfi_def_cfa_offset 16
 989 0004 00AF     		add	r7, sp, #0
 990              		.cfi_def_cfa_register 7
 991 0006 7860     		str	r0, [r7, #4]
 992 0008 3960     		str	r1, [r7]
 820:Generated_Source\PSoC4/CapSense.c ****         CapSense_widgetResolution[widget] = resolution;
 993              		.loc 1 820 0
 994 000a 044B     		ldr	r3, .L57
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 33


 995 000c 7A68     		ldr	r2, [r7, #4]
 996 000e 9200     		lsls	r2, r2, #2
 997 0010 3968     		ldr	r1, [r7]
 998 0012 D150     		str	r1, [r2, r3]
 821:Generated_Source\PSoC4/CapSense.c ****     }
 999              		.loc 1 821 0
 1000 0014 C046     		nop
 1001 0016 BD46     		mov	sp, r7
 1002 0018 02B0     		add	sp, sp, #8
 1003              		@ sp needed
 1004 001a 80BD     		pop	{r7, pc}
 1005              	.L58:
 1006              		.align	2
 1007              	.L57:
 1008 001c 00000000 		.word	CapSense_widgetResolution
 1009              		.cfi_endproc
 1010              	.LFE46:
 1011              		.size	CapSense_SetScanResolution, .-CapSense_SetScanResolution
 1012              		.section	.text.CapSense_GetScanResolution,"ax",%progbits
 1013              		.align	2
 1014              		.global	CapSense_GetScanResolution
 1015              		.code	16
 1016              		.thumb_func
 1017              		.type	CapSense_GetScanResolution, %function
 1018              	CapSense_GetScanResolution:
 1019              	.LFB47:
 822:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 823:Generated_Source\PSoC4/CapSense.c **** 
 824:Generated_Source\PSoC4/CapSense.c **** 
 825:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 826:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_GetScanResolution
 827:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 828:Generated_Source\PSoC4/CapSense.c **** *
 829:Generated_Source\PSoC4/CapSense.c **** * Summary:
 830:Generated_Source\PSoC4/CapSense.c **** *  Returns the resolution value for the appropriate sensor.
 831:Generated_Source\PSoC4/CapSense.c **** *  This function is not available for tuning mode "None".
 832:Generated_Source\PSoC4/CapSense.c **** *
 833:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 834:Generated_Source\PSoC4/CapSense.c **** *  widget:     Widget index.
 835:Generated_Source\PSoC4/CapSense.c **** *
 836:Generated_Source\PSoC4/CapSense.c **** * Return:
 837:Generated_Source\PSoC4/CapSense.c **** *  resolution: Returns the resolution value for the appropriate sensor.
 838:Generated_Source\PSoC4/CapSense.c **** *              The resolution values are defined in the CapSense.h file
 839:Generated_Source\PSoC4/CapSense.c **** *              The defines are encountered below:
 840:Generated_Source\PSoC4/CapSense.c **** *              CapSense_RESOLUTION_6_BITS
 841:Generated_Source\PSoC4/CapSense.c **** *              CapSense_RESOLUTION_7_BITS
 842:Generated_Source\PSoC4/CapSense.c **** *              CapSense_RESOLUTION_8_BITS
 843:Generated_Source\PSoC4/CapSense.c **** *              CapSense_RESOLUTION_9_BITS
 844:Generated_Source\PSoC4/CapSense.c **** *              CapSense_RESOLUTION_10_BITS
 845:Generated_Source\PSoC4/CapSense.c **** *              CapSense_RESOLUTION_11_BITS
 846:Generated_Source\PSoC4/CapSense.c **** *              CapSense_RESOLUTION_12_BITS
 847:Generated_Source\PSoC4/CapSense.c **** *              CapSense_RESOLUTION_13_BITS
 848:Generated_Source\PSoC4/CapSense.c **** *              CapSense_RESOLUTION_14_BITS
 849:Generated_Source\PSoC4/CapSense.c **** *              CapSense_RESOLUTION_15_BITS
 850:Generated_Source\PSoC4/CapSense.c **** *              CapSense_RESOLUTION_16_BITS
 851:Generated_Source\PSoC4/CapSense.c **** *
 852:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 34


 853:Generated_Source\PSoC4/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every widget.
 854:Generated_Source\PSoC4/CapSense.c **** *
 855:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 856:Generated_Source\PSoC4/CapSense.c **** *  None
 857:Generated_Source\PSoC4/CapSense.c **** *
 858:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 859:Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_GetScanResolution(uint32 widget)
 860:Generated_Source\PSoC4/CapSense.c **** {
 1020              		.loc 1 860 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 8
 1023              		@ frame_needed = 1, uses_anonymous_args = 0
 1024 0000 80B5     		push	{r7, lr}
 1025              		.cfi_def_cfa_offset 8
 1026              		.cfi_offset 7, -8
 1027              		.cfi_offset 14, -4
 1028 0002 82B0     		sub	sp, sp, #8
 1029              		.cfi_def_cfa_offset 16
 1030 0004 00AF     		add	r7, sp, #0
 1031              		.cfi_def_cfa_register 7
 1032 0006 7860     		str	r0, [r7, #4]
 861:Generated_Source\PSoC4/CapSense.c ****     return(CapSense_widgetResolution[widget]);
 1033              		.loc 1 861 0
 1034 0008 034B     		ldr	r3, .L61
 1035 000a 7A68     		ldr	r2, [r7, #4]
 1036 000c 9200     		lsls	r2, r2, #2
 1037 000e D358     		ldr	r3, [r2, r3]
 862:Generated_Source\PSoC4/CapSense.c **** }
 1038              		.loc 1 862 0
 1039 0010 1800     		movs	r0, r3
 1040 0012 BD46     		mov	sp, r7
 1041 0014 02B0     		add	sp, sp, #8
 1042              		@ sp needed
 1043 0016 80BD     		pop	{r7, pc}
 1044              	.L62:
 1045              		.align	2
 1046              	.L61:
 1047 0018 00000000 		.word	CapSense_widgetResolution
 1048              		.cfi_endproc
 1049              	.LFE47:
 1050              		.size	CapSense_GetScanResolution, .-CapSense_GetScanResolution
 1051              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 1052              		.align	2
 1053              		.global	CapSense_ClearSensors
 1054              		.code	16
 1055              		.thumb_func
 1056              		.type	CapSense_ClearSensors, %function
 1057              	CapSense_ClearSensors:
 1058              	.LFB48:
 863:Generated_Source\PSoC4/CapSense.c **** 
 864:Generated_Source\PSoC4/CapSense.c **** 
 865:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
 866:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_ClearSensors
 867:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
 868:Generated_Source\PSoC4/CapSense.c **** *
 869:Generated_Source\PSoC4/CapSense.c **** * Summary:
 870:Generated_Source\PSoC4/CapSense.c **** *  Resets all the sensors to the non-sampling state by sequentially disconnecting
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 35


 871:Generated_Source\PSoC4/CapSense.c **** *  all the sensors from Analog MUX Bus and putting them to an inactive state.
 872:Generated_Source\PSoC4/CapSense.c **** *
 873:Generated_Source\PSoC4/CapSense.c **** * Parameters:
 874:Generated_Source\PSoC4/CapSense.c **** *  None
 875:Generated_Source\PSoC4/CapSense.c **** *
 876:Generated_Source\PSoC4/CapSense.c **** * Return:
 877:Generated_Source\PSoC4/CapSense.c **** *  None
 878:Generated_Source\PSoC4/CapSense.c **** *
 879:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
 880:Generated_Source\PSoC4/CapSense.c **** *  None
 881:Generated_Source\PSoC4/CapSense.c **** *
 882:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
 883:Generated_Source\PSoC4/CapSense.c **** *  None
 884:Generated_Source\PSoC4/CapSense.c **** *
 885:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
 886:Generated_Source\PSoC4/CapSense.c **** void CapSense_ClearSensors(void)
 887:Generated_Source\PSoC4/CapSense.c **** {
 1059              		.loc 1 887 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 8
 1062              		@ frame_needed = 1, uses_anonymous_args = 0
 1063 0000 80B5     		push	{r7, lr}
 1064              		.cfi_def_cfa_offset 8
 1065              		.cfi_offset 7, -8
 1066              		.cfi_offset 14, -4
 1067 0002 82B0     		sub	sp, sp, #8
 1068              		.cfi_def_cfa_offset 16
 1069 0004 00AF     		add	r7, sp, #0
 1070              		.cfi_def_cfa_register 7
 888:Generated_Source\PSoC4/CapSense.c ****     uint32 snsIndex;
 889:Generated_Source\PSoC4/CapSense.c **** 
 890:Generated_Source\PSoC4/CapSense.c ****     for (snsIndex = 0u; snsIndex < CapSense_TOTAL_SENSOR_COUNT; snsIndex++)
 1071              		.loc 1 890 0
 1072 0006 0023     		movs	r3, #0
 1073 0008 7B60     		str	r3, [r7, #4]
 1074 000a 06E0     		b	.L64
 1075              	.L65:
 891:Generated_Source\PSoC4/CapSense.c ****     {
 892:Generated_Source\PSoC4/CapSense.c ****         CapSense_DisableScanSlot(snsIndex);
 1076              		.loc 1 892 0 discriminator 3
 1077 000c 7B68     		ldr	r3, [r7, #4]
 1078 000e 1800     		movs	r0, r3
 1079 0010 FFF7FEFF 		bl	CapSense_DisableSensor
 890:Generated_Source\PSoC4/CapSense.c ****     {
 1080              		.loc 1 890 0 discriminator 3
 1081 0014 7B68     		ldr	r3, [r7, #4]
 1082 0016 0133     		adds	r3, r3, #1
 1083 0018 7B60     		str	r3, [r7, #4]
 1084              	.L64:
 890:Generated_Source\PSoC4/CapSense.c ****     {
 1085              		.loc 1 890 0 is_stmt 0 discriminator 1
 1086 001a 7B68     		ldr	r3, [r7, #4]
 1087 001c 042B     		cmp	r3, #4
 1088 001e F5D9     		bls	.L65
 893:Generated_Source\PSoC4/CapSense.c ****     }
 894:Generated_Source\PSoC4/CapSense.c **** }
 1089              		.loc 1 894 0 is_stmt 1
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 36


 1090 0020 C046     		nop
 1091 0022 BD46     		mov	sp, r7
 1092 0024 02B0     		add	sp, sp, #8
 1093              		@ sp needed
 1094 0026 80BD     		pop	{r7, pc}
 1095              		.cfi_endproc
 1096              	.LFE48:
 1097              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 1098              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 1099              		.align	2
 1100              		.global	CapSense_EnableSensor
 1101              		.code	16
 1102              		.thumb_func
 1103              		.type	CapSense_EnableSensor, %function
 1104              	CapSense_EnableSensor:
 1105              	.LFB49:
 895:Generated_Source\PSoC4/CapSense.c **** 
 896:Generated_Source\PSoC4/CapSense.c **** 
 897:Generated_Source\PSoC4/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
 898:Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
 899:Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
 900:Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
 901:Generated_Source\PSoC4/CapSense.c ****     *
 902:Generated_Source\PSoC4/CapSense.c ****     * Summary:
 903:Generated_Source\PSoC4/CapSense.c ****     *  Configures the selected slot to measure during the next measurement
 904:Generated_Source\PSoC4/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and
 905:Generated_Source\PSoC4/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
 906:Generated_Source\PSoC4/CapSense.c ****     *
 907:Generated_Source\PSoC4/CapSense.c ****     * Parameters:
 908:Generated_Source\PSoC4/CapSense.c ****     *  slot:  Slot number.
 909:Generated_Source\PSoC4/CapSense.c ****     *
 910:Generated_Source\PSoC4/CapSense.c ****     * Return:
 911:Generated_Source\PSoC4/CapSense.c ****     *  None
 912:Generated_Source\PSoC4/CapSense.c ****     *
 913:Generated_Source\PSoC4/CapSense.c ****     * Global Constants:
 914:Generated_Source\PSoC4/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin
 915:Generated_Source\PSoC4/CapSense.c ****     *  belongs to for each sensor.
 916:Generated_Source\PSoC4/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for
 917:Generated_Source\PSoC4/CapSense.c ****     *  each sensor.
 918:Generated_Source\PSoC4/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
 919:Generated_Source\PSoC4/CapSense.c ****     *  The offset and position in this array are stored in a port and mask table for
 920:Generated_Source\PSoC4/CapSense.c ****     *  complex sensors.
 921:Generated_Source\PSoC4/CapSense.c ****     *  Bit 7 (msb) is used to define the sensor type: single or complex.
 922:Generated_Source\PSoC4/CapSense.c ****     *
 923:Generated_Source\PSoC4/CapSense.c ****     * Side Effects:
 924:Generated_Source\PSoC4/CapSense.c ****     *  None
 925:Generated_Source\PSoC4/CapSense.c ****     *
 926:Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
 927:Generated_Source\PSoC4/CapSense.c ****     void CapSense_EnableScanSlot(uint32 slot)
 928:Generated_Source\PSoC4/CapSense.c ****     {
 929:Generated_Source\PSoC4/CapSense.c ****         uint8 j;
 930:Generated_Source\PSoC4/CapSense.c ****         uint8 snsNumber;
 931:Generated_Source\PSoC4/CapSense.c ****         const uint8 *index;
 932:Generated_Source\PSoC4/CapSense.c ****         /* Read sensor type: single or complex */
 933:Generated_Source\PSoC4/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
 934:Generated_Source\PSoC4/CapSense.c **** 
 935:Generated_Source\PSoC4/CapSense.c ****         /* Check if sensor is complex */
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 37


 936:Generated_Source\PSoC4/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
 937:Generated_Source\PSoC4/CapSense.c ****         {
 938:Generated_Source\PSoC4/CapSense.c ****             /* Enable sensor (single) */
 939:Generated_Source\PSoC4/CapSense.c ****             CapSense_EnableSensor(slot);
 940:Generated_Source\PSoC4/CapSense.c ****         }
 941:Generated_Source\PSoC4/CapSense.c ****         else
 942:Generated_Source\PSoC4/CapSense.c ****         {
 943:Generated_Source\PSoC4/CapSense.c ****             /* Enable complex sensor */
 944:Generated_Source\PSoC4/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
 945:Generated_Source\PSoC4/CapSense.c ****             index = &CapSense_indexTable[snsType];
 946:Generated_Source\PSoC4/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
 947:Generated_Source\PSoC4/CapSense.c **** 
 948:Generated_Source\PSoC4/CapSense.c ****             for (j = 0u; j < snsNumber; j++)
 949:Generated_Source\PSoC4/CapSense.c ****             {
 950:Generated_Source\PSoC4/CapSense.c ****                 CapSense_EnableSensor(index[j]);
 951:Generated_Source\PSoC4/CapSense.c ****             }
 952:Generated_Source\PSoC4/CapSense.c ****         }
 953:Generated_Source\PSoC4/CapSense.c ****     }
 954:Generated_Source\PSoC4/CapSense.c **** 
 955:Generated_Source\PSoC4/CapSense.c **** 
 956:Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
 957:Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
 958:Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
 959:Generated_Source\PSoC4/CapSense.c ****     *
 960:Generated_Source\PSoC4/CapSense.c ****     * Summary:
 961:Generated_Source\PSoC4/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pins is/are disconnected
 962:Generated_Source\PSoC4/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
 963:Generated_Source\PSoC4/CapSense.c ****     *
 964:Generated_Source\PSoC4/CapSense.c ****     * Parameters:
 965:Generated_Source\PSoC4/CapSense.c ****     *  slot:  Slot number.
 966:Generated_Source\PSoC4/CapSense.c ****     *
 967:Generated_Source\PSoC4/CapSense.c ****     * Return:
 968:Generated_Source\PSoC4/CapSense.c ****     *  None
 969:Generated_Source\PSoC4/CapSense.c ****     *
 970:Generated_Source\PSoC4/CapSense.c ****     * Global Variables:
 971:Generated_Source\PSoC4/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin
 972:Generated_Source\PSoC4/CapSense.c ****     *  belongs to for each sensor.
 973:Generated_Source\PSoC4/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for
 974:Generated_Source\PSoC4/CapSense.c ****     *  each sensor.
 975:Generated_Source\PSoC4/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
 976:Generated_Source\PSoC4/CapSense.c ****     *  The offset and position in this array are stored in a port and mask table for
 977:Generated_Source\PSoC4/CapSense.c ****     *  complex sensors.
 978:Generated_Source\PSoC4/CapSense.c ****     *  7bit(msb) is used to define the sensor type: single or complex.
 979:Generated_Source\PSoC4/CapSense.c ****     *
 980:Generated_Source\PSoC4/CapSense.c ****     * Side Effects:
 981:Generated_Source\PSoC4/CapSense.c ****     *  None
 982:Generated_Source\PSoC4/CapSense.c ****     *
 983:Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
 984:Generated_Source\PSoC4/CapSense.c ****     void CapSense_DisableScanSlot(uint32 slot)
 985:Generated_Source\PSoC4/CapSense.c ****     {
 986:Generated_Source\PSoC4/CapSense.c ****         uint8 j;
 987:Generated_Source\PSoC4/CapSense.c ****         uint8 snsNumber;
 988:Generated_Source\PSoC4/CapSense.c ****         const uint8 *index;
 989:Generated_Source\PSoC4/CapSense.c **** 
 990:Generated_Source\PSoC4/CapSense.c ****         /* Read sensor type: single or complex */
 991:Generated_Source\PSoC4/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
 992:Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 38


 993:Generated_Source\PSoC4/CapSense.c ****         /* Check if sensor is complex */
 994:Generated_Source\PSoC4/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
 995:Generated_Source\PSoC4/CapSense.c ****         {
 996:Generated_Source\PSoC4/CapSense.c ****             /* Disable sensor (single) */
 997:Generated_Source\PSoC4/CapSense.c ****             CapSense_DisableSensor(slot);
 998:Generated_Source\PSoC4/CapSense.c ****         }
 999:Generated_Source\PSoC4/CapSense.c ****         else
1000:Generated_Source\PSoC4/CapSense.c ****         {
1001:Generated_Source\PSoC4/CapSense.c ****             /* Disable complex sensor */
1002:Generated_Source\PSoC4/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1003:Generated_Source\PSoC4/CapSense.c ****             index = &CapSense_indexTable[snsType];
1004:Generated_Source\PSoC4/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1005:Generated_Source\PSoC4/CapSense.c **** 
1006:Generated_Source\PSoC4/CapSense.c ****             for (j=0; j < snsNumber; j++)
1007:Generated_Source\PSoC4/CapSense.c ****             {
1008:Generated_Source\PSoC4/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1009:Generated_Source\PSoC4/CapSense.c ****             }
1010:Generated_Source\PSoC4/CapSense.c ****         }
1011:Generated_Source\PSoC4/CapSense.c ****     }
1012:Generated_Source\PSoC4/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1013:Generated_Source\PSoC4/CapSense.c **** 
1014:Generated_Source\PSoC4/CapSense.c **** 
1015:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1016:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_EnableSensor
1017:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1018:Generated_Source\PSoC4/CapSense.c **** *
1019:Generated_Source\PSoC4/CapSense.c **** * Summary:
1020:Generated_Source\PSoC4/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1021:Generated_Source\PSoC4/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1022:Generated_Source\PSoC4/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1023:Generated_Source\PSoC4/CapSense.c **** *
1024:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1025:Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number.
1026:Generated_Source\PSoC4/CapSense.c **** *
1027:Generated_Source\PSoC4/CapSense.c **** * Return:
1028:Generated_Source\PSoC4/CapSense.c **** *  None
1029:Generated_Source\PSoC4/CapSense.c **** *
1030:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1031:Generated_Source\PSoC4/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin
1032:Generated_Source\PSoC4/CapSense.c **** *  belongs to for each sensor.
1033:Generated_Source\PSoC4/CapSense.c **** *  CapSense_pinShiftTbl[] - used to store position of pin that
1034:Generated_Source\PSoC4/CapSense.c **** *  configured as sensor in port.
1035:Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtSelTbl[] - Contains pointers to the HSIOM
1036:Generated_Source\PSoC4/CapSense.c **** *  registers for each port.
1037:Generated_Source\PSoC4/CapSense.c **** *  CapSense_PrtCfgTb[] - Contains pointers to the port config
1038:Generated_Source\PSoC4/CapSense.c **** *  registers for each port.
1039:Generated_Source\PSoC4/CapSense.c **** *
1040:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1041:Generated_Source\PSoC4/CapSense.c **** *  None
1042:Generated_Source\PSoC4/CapSense.c **** *
1043:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1044:Generated_Source\PSoC4/CapSense.c **** void CapSense_EnableSensor(uint32 sensor)
1045:Generated_Source\PSoC4/CapSense.c **** {
 1106              		.loc 1 1045 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 24
 1109              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 39


 1110 0000 90B5     		push	{r4, r7, lr}
 1111              		.cfi_def_cfa_offset 12
 1112              		.cfi_offset 4, -12
 1113              		.cfi_offset 7, -8
 1114              		.cfi_offset 14, -4
 1115 0002 87B0     		sub	sp, sp, #28
 1116              		.cfi_def_cfa_offset 40
 1117 0004 00AF     		add	r7, sp, #0
 1118              		.cfi_def_cfa_register 7
 1119 0006 7860     		str	r0, [r7, #4]
1046:Generated_Source\PSoC4/CapSense.c ****     uint8  pinModeShift;
1047:Generated_Source\PSoC4/CapSense.c ****     uint8  pinHSIOMShift;
1048:Generated_Source\PSoC4/CapSense.c ****     uint8 interruptState;
1049:Generated_Source\PSoC4/CapSense.c ****     uint32 newRegisterValue;
1050:Generated_Source\PSoC4/CapSense.c ****     uint32 port;
1051:Generated_Source\PSoC4/CapSense.c **** 
1052:Generated_Source\PSoC4/CapSense.c ****     port = (uint32) CapSense_portTable[sensor];
 1120              		.loc 1 1052 0
 1121 0008 2C4A     		ldr	r2, .L67
 1122 000a 7B68     		ldr	r3, [r7, #4]
 1123 000c D318     		adds	r3, r2, r3
 1124 000e 1B78     		ldrb	r3, [r3]
 1125 0010 7B61     		str	r3, [r7, #20]
1053:Generated_Source\PSoC4/CapSense.c ****     pinModeShift = CapSense_pinShiftTbl[sensor]  * CapSense_PC_PIN_CFG_SIZE;
 1126              		.loc 1 1053 0
 1127 0012 2B4A     		ldr	r2, .L67+4
 1128 0014 7B68     		ldr	r3, [r7, #4]
 1129 0016 D318     		adds	r3, r2, r3
 1130 0018 1B78     		ldrb	r3, [r3]
 1131 001a 1322     		movs	r2, #19
 1132 001c BA18     		adds	r2, r7, r2
 1133 001e 191C     		adds	r1, r3, #0
 1134 0020 0B1C     		adds	r3, r1, #0
 1135 0022 DB18     		adds	r3, r3, r3
 1136 0024 5B18     		adds	r3, r3, r1
 1137 0026 1370     		strb	r3, [r2]
1054:Generated_Source\PSoC4/CapSense.c ****     pinHSIOMShift = CapSense_pinShiftTbl[sensor] * CapSense_HSIOM_PIN_CFG_SIZE;
 1138              		.loc 1 1054 0
 1139 0028 254A     		ldr	r2, .L67+4
 1140 002a 7B68     		ldr	r3, [r7, #4]
 1141 002c D318     		adds	r3, r2, r3
 1142 002e 1A78     		ldrb	r2, [r3]
 1143 0030 1223     		movs	r3, #18
 1144 0032 FB18     		adds	r3, r7, r3
 1145 0034 9200     		lsls	r2, r2, #2
 1146 0036 1A70     		strb	r2, [r3]
1055:Generated_Source\PSoC4/CapSense.c **** 
1056:Generated_Source\PSoC4/CapSense.c ****     interruptState = CyEnterCriticalSection();
 1147              		.loc 1 1056 0
 1148 0038 1123     		movs	r3, #17
 1149 003a FC18     		adds	r4, r7, r3
 1150 003c FFF7FEFF 		bl	CyEnterCriticalSection
 1151 0040 0300     		movs	r3, r0
 1152 0042 2370     		strb	r3, [r4]
1057:Generated_Source\PSoC4/CapSense.c **** 
1058:Generated_Source\PSoC4/CapSense.c ****     newRegisterValue = *CapSense_prtSelTbl[port];
 1153              		.loc 1 1058 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 40


 1154 0044 1F4B     		ldr	r3, .L67+8
 1155 0046 7A69     		ldr	r2, [r7, #20]
 1156 0048 9200     		lsls	r2, r2, #2
 1157 004a D358     		ldr	r3, [r2, r3]
 1158 004c 1B68     		ldr	r3, [r3]
 1159 004e FB60     		str	r3, [r7, #12]
1059:Generated_Source\PSoC4/CapSense.c ****     newRegisterValue &= ~(CapSense_CSD_HSIOM_MASK << pinHSIOMShift);
 1160              		.loc 1 1059 0
 1161 0050 1223     		movs	r3, #18
 1162 0052 FB18     		adds	r3, r7, r3
 1163 0054 1B78     		ldrb	r3, [r3]
 1164 0056 0F22     		movs	r2, #15
 1165 0058 9A40     		lsls	r2, r2, r3
 1166 005a 1300     		movs	r3, r2
 1167 005c DA43     		mvns	r2, r3
 1168 005e FB68     		ldr	r3, [r7, #12]
 1169 0060 1340     		ands	r3, r2
 1170 0062 FB60     		str	r3, [r7, #12]
1060:Generated_Source\PSoC4/CapSense.c ****     newRegisterValue |= (uint32)((uint32)CapSense_CSD_SENSE_PORT_MODE << pinHSIOMShift);
 1171              		.loc 1 1060 0
 1172 0064 1223     		movs	r3, #18
 1173 0066 FB18     		adds	r3, r7, r3
 1174 0068 1B78     		ldrb	r3, [r3]
 1175 006a 0422     		movs	r2, #4
 1176 006c 9A40     		lsls	r2, r2, r3
 1177 006e 1300     		movs	r3, r2
 1178 0070 FA68     		ldr	r2, [r7, #12]
 1179 0072 1343     		orrs	r3, r2
 1180 0074 FB60     		str	r3, [r7, #12]
1061:Generated_Source\PSoC4/CapSense.c **** 
1062:Generated_Source\PSoC4/CapSense.c ****     *CapSense_prtCfgTbl[port] &= (uint32)~((uint32)CapSense_CSD_PIN_MODE_MASK << pinModeShift);
 1181              		.loc 1 1062 0
 1182 0076 144B     		ldr	r3, .L67+12
 1183 0078 7A69     		ldr	r2, [r7, #20]
 1184 007a 9200     		lsls	r2, r2, #2
 1185 007c D358     		ldr	r3, [r2, r3]
 1186 007e 124A     		ldr	r2, .L67+12
 1187 0080 7969     		ldr	r1, [r7, #20]
 1188 0082 8900     		lsls	r1, r1, #2
 1189 0084 8A58     		ldr	r2, [r1, r2]
 1190 0086 1268     		ldr	r2, [r2]
 1191 0088 1321     		movs	r1, #19
 1192 008a 7918     		adds	r1, r7, r1
 1193 008c 0978     		ldrb	r1, [r1]
 1194 008e 0720     		movs	r0, #7
 1195 0090 8840     		lsls	r0, r0, r1
 1196 0092 0100     		movs	r1, r0
 1197 0094 C943     		mvns	r1, r1
 1198 0096 0A40     		ands	r2, r1
 1199 0098 1A60     		str	r2, [r3]
1063:Generated_Source\PSoC4/CapSense.c ****     *CapSense_prtSelTbl[port] = newRegisterValue;
 1200              		.loc 1 1063 0
 1201 009a 0A4B     		ldr	r3, .L67+8
 1202 009c 7A69     		ldr	r2, [r7, #20]
 1203 009e 9200     		lsls	r2, r2, #2
 1204 00a0 D358     		ldr	r3, [r2, r3]
 1205 00a2 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 41


 1206 00a4 1A60     		str	r2, [r3]
1064:Generated_Source\PSoC4/CapSense.c **** 
1065:Generated_Source\PSoC4/CapSense.c ****     CyExitCriticalSection(interruptState);
 1207              		.loc 1 1065 0
 1208 00a6 1123     		movs	r3, #17
 1209 00a8 FB18     		adds	r3, r7, r3
 1210 00aa 1B78     		ldrb	r3, [r3]
 1211 00ac 1800     		movs	r0, r3
 1212 00ae FFF7FEFF 		bl	CyExitCriticalSection
1066:Generated_Source\PSoC4/CapSense.c **** }
 1213              		.loc 1 1066 0
 1214 00b2 C046     		nop
 1215 00b4 BD46     		mov	sp, r7
 1216 00b6 07B0     		add	sp, sp, #28
 1217              		@ sp needed
 1218 00b8 90BD     		pop	{r4, r7, pc}
 1219              	.L68:
 1220 00ba C046     		.align	2
 1221              	.L67:
 1222 00bc 00000000 		.word	CapSense_portTable
 1223 00c0 00000000 		.word	CapSense_pinShiftTbl
 1224 00c4 00000000 		.word	CapSense_prtSelTbl
 1225 00c8 00000000 		.word	CapSense_prtCfgTbl
 1226              		.cfi_endproc
 1227              	.LFE49:
 1228              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 1229              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 1230              		.align	2
 1231              		.global	CapSense_DisableSensor
 1232              		.code	16
 1233              		.thumb_func
 1234              		.type	CapSense_DisableSensor, %function
 1235              	CapSense_DisableSensor:
 1236              	.LFB50:
1067:Generated_Source\PSoC4/CapSense.c **** 
1068:Generated_Source\PSoC4/CapSense.c **** 
1069:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1070:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_DisableSensor
1071:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1072:Generated_Source\PSoC4/CapSense.c **** *
1073:Generated_Source\PSoC4/CapSense.c **** * Summary:
1074:Generated_Source\PSoC4/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1075:Generated_Source\PSoC4/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1076:Generated_Source\PSoC4/CapSense.c **** *
1077:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1078:Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number
1079:Generated_Source\PSoC4/CapSense.c **** *
1080:Generated_Source\PSoC4/CapSense.c **** * Return:
1081:Generated_Source\PSoC4/CapSense.c **** *  None
1082:Generated_Source\PSoC4/CapSense.c **** *
1083:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1084:Generated_Source\PSoC4/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin
1085:Generated_Source\PSoC4/CapSense.c **** *  belongs to for each sensor.
1086:Generated_Source\PSoC4/CapSense.c **** *  CapSense_pinShiftTbl[] - used to store position of pin that
1087:Generated_Source\PSoC4/CapSense.c **** *  configured as a sensor in the port.
1088:Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtSelTbl[] - Contains pointers to the HSIOM
1089:Generated_Source\PSoC4/CapSense.c **** *  registers for each port.
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 42


1090:Generated_Source\PSoC4/CapSense.c **** *  CapSense_PrtCfgTb[] - Contains pointers to the port config
1091:Generated_Source\PSoC4/CapSense.c **** *  registers for each port.
1092:Generated_Source\PSoC4/CapSense.c **** *
1093:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1094:Generated_Source\PSoC4/CapSense.c **** *  None
1095:Generated_Source\PSoC4/CapSense.c **** *
1096:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1097:Generated_Source\PSoC4/CapSense.c **** void CapSense_DisableSensor(uint32 sensor)
1098:Generated_Source\PSoC4/CapSense.c **** {
 1237              		.loc 1 1098 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 32
 1240              		@ frame_needed = 1, uses_anonymous_args = 0
 1241 0000 90B5     		push	{r4, r7, lr}
 1242              		.cfi_def_cfa_offset 12
 1243              		.cfi_offset 4, -12
 1244              		.cfi_offset 7, -8
 1245              		.cfi_offset 14, -4
 1246 0002 89B0     		sub	sp, sp, #36
 1247              		.cfi_def_cfa_offset 48
 1248 0004 00AF     		add	r7, sp, #0
 1249              		.cfi_def_cfa_register 7
 1250 0006 7860     		str	r0, [r7, #4]
1099:Generated_Source\PSoC4/CapSense.c ****     uint8 interruptState;
1100:Generated_Source\PSoC4/CapSense.c ****     uint32 newRegisterValue;
1101:Generated_Source\PSoC4/CapSense.c **** 
1102:Generated_Source\PSoC4/CapSense.c ****     uint32 port = (uint32) CapSense_portTable[sensor];
 1251              		.loc 1 1102 0
 1252 0008 3E4A     		ldr	r2, .L72
 1253 000a 7B68     		ldr	r3, [r7, #4]
 1254 000c D318     		adds	r3, r2, r3
 1255 000e 1B78     		ldrb	r3, [r3]
 1256 0010 7B61     		str	r3, [r7, #20]
1103:Generated_Source\PSoC4/CapSense.c ****     uint8  pinHSIOMShift = CapSense_pinShiftTbl[sensor] * CapSense_HSIOM_PIN_CFG_SIZE;
 1257              		.loc 1 1103 0
 1258 0012 3D4A     		ldr	r2, .L72+4
 1259 0014 7B68     		ldr	r3, [r7, #4]
 1260 0016 D318     		adds	r3, r2, r3
 1261 0018 1A78     		ldrb	r2, [r3]
 1262 001a 1323     		movs	r3, #19
 1263 001c FB18     		adds	r3, r7, r3
 1264 001e 9200     		lsls	r2, r2, #2
 1265 0020 1A70     		strb	r2, [r3]
1104:Generated_Source\PSoC4/CapSense.c ****     uint8  pinModeShift = CapSense_pinShiftTbl[sensor]  * CapSense_PC_PIN_CFG_SIZE;
 1266              		.loc 1 1104 0
 1267 0022 394A     		ldr	r2, .L72+4
 1268 0024 7B68     		ldr	r3, [r7, #4]
 1269 0026 D318     		adds	r3, r2, r3
 1270 0028 1B78     		ldrb	r3, [r3]
 1271 002a 1222     		movs	r2, #18
 1272 002c BA18     		adds	r2, r7, r2
 1273 002e 191C     		adds	r1, r3, #0
 1274 0030 0B1C     		adds	r3, r1, #0
 1275 0032 DB18     		adds	r3, r3, r3
 1276 0034 5B18     		adds	r3, r3, r1
 1277 0036 1370     		strb	r3, [r2]
1105:Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 43


1106:Generated_Source\PSoC4/CapSense.c ****     uint32 inactiveConnect = CapSense_SNS_HIZANALOG_CONNECT;
 1278              		.loc 1 1106 0
 1279 0038 0023     		movs	r3, #0
 1280 003a FB61     		str	r3, [r7, #28]
1107:Generated_Source\PSoC4/CapSense.c ****     uint32 sensorState = CapSense_unscannedSnsDriveMode[sensor];
 1281              		.loc 1 1107 0
 1282 003c 334A     		ldr	r2, .L72+8
 1283 003e 7B68     		ldr	r3, [r7, #4]
 1284 0040 D318     		adds	r3, r2, r3
 1285 0042 1B78     		ldrb	r3, [r3]
 1286 0044 BB61     		str	r3, [r7, #24]
1108:Generated_Source\PSoC4/CapSense.c **** 
1109:Generated_Source\PSoC4/CapSense.c ****     *CapSense_prtSelTbl[port] &= ~(CapSense_CSD_HSIOM_MASK << pinHSIOMShift);
 1287              		.loc 1 1109 0
 1288 0046 324B     		ldr	r3, .L72+12
 1289 0048 7A69     		ldr	r2, [r7, #20]
 1290 004a 9200     		lsls	r2, r2, #2
 1291 004c D358     		ldr	r3, [r2, r3]
 1292 004e 304A     		ldr	r2, .L72+12
 1293 0050 7969     		ldr	r1, [r7, #20]
 1294 0052 8900     		lsls	r1, r1, #2
 1295 0054 8A58     		ldr	r2, [r1, r2]
 1296 0056 1268     		ldr	r2, [r2]
 1297 0058 1321     		movs	r1, #19
 1298 005a 7918     		adds	r1, r7, r1
 1299 005c 0978     		ldrb	r1, [r1]
 1300 005e 0F20     		movs	r0, #15
 1301 0060 8840     		lsls	r0, r0, r1
 1302 0062 0100     		movs	r1, r0
 1303 0064 C943     		mvns	r1, r1
 1304 0066 0A40     		ands	r2, r1
 1305 0068 1A60     		str	r2, [r3]
1110:Generated_Source\PSoC4/CapSense.c **** 
1111:Generated_Source\PSoC4/CapSense.c ****     #if(CapSense_IS_SHIELD_ENABLE != 0)
1112:Generated_Source\PSoC4/CapSense.c ****     if(sensorState != (uint32)CapSense__SHIELD)
1113:Generated_Source\PSoC4/CapSense.c ****     {
1114:Generated_Source\PSoC4/CapSense.c ****     #else
1115:Generated_Source\PSoC4/CapSense.c ****         /* Connected to Ground if shield is disabled */
1116:Generated_Source\PSoC4/CapSense.c ****         if(sensorState == (uint32)CapSense__SHIELD)
 1306              		.loc 1 1116 0
 1307 006a BB69     		ldr	r3, [r7, #24]
 1308 006c 022B     		cmp	r3, #2
 1309 006e 01D1     		bne	.L70
1117:Generated_Source\PSoC4/CapSense.c ****         {
1118:Generated_Source\PSoC4/CapSense.c ****             sensorState = (uint32)CapSense__GROUND;
 1310              		.loc 1 1118 0
 1311 0070 0023     		movs	r3, #0
 1312 0072 BB61     		str	r3, [r7, #24]
 1313              	.L70:
1119:Generated_Source\PSoC4/CapSense.c ****         }
1120:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_IS_SHIELD_ENABLE) */
1121:Generated_Source\PSoC4/CapSense.c ****         if(sensorState != (uint32)CapSense__HIZ_ANALOG)
 1314              		.loc 1 1121 0
 1315 0074 BB69     		ldr	r3, [r7, #24]
 1316 0076 012B     		cmp	r3, #1
 1317 0078 01D0     		beq	.L71
1122:Generated_Source\PSoC4/CapSense.c ****         {
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 44


1123:Generated_Source\PSoC4/CapSense.c ****             /* Connected to Ground */
1124:Generated_Source\PSoC4/CapSense.c ****             inactiveConnect = (uint32)CapSense_SNS_GROUND_CONNECT;
 1318              		.loc 1 1124 0
 1319 007a 0623     		movs	r3, #6
 1320 007c FB61     		str	r3, [r7, #28]
 1321              	.L71:
1125:Generated_Source\PSoC4/CapSense.c ****         }
1126:Generated_Source\PSoC4/CapSense.c **** 
1127:Generated_Source\PSoC4/CapSense.c ****         interruptState = CyEnterCriticalSection();
 1322              		.loc 1 1127 0
 1323 007e 1123     		movs	r3, #17
 1324 0080 FC18     		adds	r4, r7, r3
 1325 0082 FFF7FEFF 		bl	CyEnterCriticalSection
 1326 0086 0300     		movs	r3, r0
 1327 0088 2370     		strb	r3, [r4]
1128:Generated_Source\PSoC4/CapSense.c **** 
1129:Generated_Source\PSoC4/CapSense.c ****         /* Set drive mode */
1130:Generated_Source\PSoC4/CapSense.c ****         newRegisterValue = *CapSense_prtCfgTbl[port];
 1328              		.loc 1 1130 0
 1329 008a 224B     		ldr	r3, .L72+16
 1330 008c 7A69     		ldr	r2, [r7, #20]
 1331 008e 9200     		lsls	r2, r2, #2
 1332 0090 D358     		ldr	r3, [r2, r3]
 1333 0092 1B68     		ldr	r3, [r3]
 1334 0094 FB60     		str	r3, [r7, #12]
1131:Generated_Source\PSoC4/CapSense.c ****         newRegisterValue &= ~(CapSense_CSD_PIN_MODE_MASK << pinModeShift);
 1335              		.loc 1 1131 0
 1336 0096 1223     		movs	r3, #18
 1337 0098 FB18     		adds	r3, r7, r3
 1338 009a 1B78     		ldrb	r3, [r3]
 1339 009c 0722     		movs	r2, #7
 1340 009e 9A40     		lsls	r2, r2, r3
 1341 00a0 1300     		movs	r3, r2
 1342 00a2 DA43     		mvns	r2, r3
 1343 00a4 FB68     		ldr	r3, [r7, #12]
 1344 00a6 1340     		ands	r3, r2
 1345 00a8 FB60     		str	r3, [r7, #12]
1132:Generated_Source\PSoC4/CapSense.c ****         newRegisterValue |=  (uint32)(inactiveConnect << pinModeShift);
 1346              		.loc 1 1132 0
 1347 00aa 1223     		movs	r3, #18
 1348 00ac FB18     		adds	r3, r7, r3
 1349 00ae 1B78     		ldrb	r3, [r3]
 1350 00b0 FA69     		ldr	r2, [r7, #28]
 1351 00b2 9A40     		lsls	r2, r2, r3
 1352 00b4 1300     		movs	r3, r2
 1353 00b6 FA68     		ldr	r2, [r7, #12]
 1354 00b8 1343     		orrs	r3, r2
 1355 00ba FB60     		str	r3, [r7, #12]
1133:Generated_Source\PSoC4/CapSense.c ****         *CapSense_prtCfgTbl[port] =  newRegisterValue;
 1356              		.loc 1 1133 0
 1357 00bc 154B     		ldr	r3, .L72+16
 1358 00be 7A69     		ldr	r2, [r7, #20]
 1359 00c0 9200     		lsls	r2, r2, #2
 1360 00c2 D358     		ldr	r3, [r2, r3]
 1361 00c4 FA68     		ldr	r2, [r7, #12]
 1362 00c6 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 45


1135:Generated_Source\PSoC4/CapSense.c ****         CyExitCriticalSection(interruptState);
 1363              		.loc 1 1135 0
 1364 00c8 1123     		movs	r3, #17
 1365 00ca FB18     		adds	r3, r7, r3
 1366 00cc 1B78     		ldrb	r3, [r3]
 1367 00ce 1800     		movs	r0, r3
 1368 00d0 FFF7FEFF 		bl	CyExitCriticalSection
1136:Generated_Source\PSoC4/CapSense.c **** 
1137:Generated_Source\PSoC4/CapSense.c ****         *CapSense_prtDRTbl[port]  &=  (uint32)~(uint32)((uint32)1u << CapSense_pinShiftTbl[sensor])
 1369              		.loc 1 1137 0
 1370 00d4 104B     		ldr	r3, .L72+20
 1371 00d6 7A69     		ldr	r2, [r7, #20]
 1372 00d8 9200     		lsls	r2, r2, #2
 1373 00da D358     		ldr	r3, [r2, r3]
 1374 00dc 0E4A     		ldr	r2, .L72+20
 1375 00de 7969     		ldr	r1, [r7, #20]
 1376 00e0 8900     		lsls	r1, r1, #2
 1377 00e2 8A58     		ldr	r2, [r1, r2]
 1378 00e4 1268     		ldr	r2, [r2]
 1379 00e6 0848     		ldr	r0, .L72+4
 1380 00e8 7968     		ldr	r1, [r7, #4]
 1381 00ea 4118     		adds	r1, r0, r1
 1382 00ec 0978     		ldrb	r1, [r1]
 1383 00ee 0800     		movs	r0, r1
 1384 00f0 0121     		movs	r1, #1
 1385 00f2 8140     		lsls	r1, r1, r0
 1386 00f4 C943     		mvns	r1, r1
 1387 00f6 0A40     		ands	r2, r1
 1388 00f8 1A60     		str	r2, [r3]
1138:Generated_Source\PSoC4/CapSense.c ****     #if(CapSense_IS_SHIELD_ENABLE != 0)
1139:Generated_Source\PSoC4/CapSense.c ****     }
1140:Generated_Source\PSoC4/CapSense.c ****     else
1141:Generated_Source\PSoC4/CapSense.c ****     {
1142:Generated_Source\PSoC4/CapSense.c ****         /* Connect to Shield */
1143:Generated_Source\PSoC4/CapSense.c ****         *CapSense_prtSelTbl[port] |= (CapSense_CSD_SHIELD_PORT_MODE << pinHSIOMShift);
1144:Generated_Source\PSoC4/CapSense.c ****     }
1145:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_IS_SHIELD_ENABLE) */
1146:Generated_Source\PSoC4/CapSense.c **** }
 1389              		.loc 1 1146 0
 1390 00fa C046     		nop
 1391 00fc BD46     		mov	sp, r7
 1392 00fe 09B0     		add	sp, sp, #36
 1393              		@ sp needed
 1394 0100 90BD     		pop	{r4, r7, pc}
 1395              	.L73:
 1396 0102 C046     		.align	2
 1397              	.L72:
 1398 0104 00000000 		.word	CapSense_portTable
 1399 0108 00000000 		.word	CapSense_pinShiftTbl
 1400 010c 00000000 		.word	CapSense_unscannedSnsDriveMode
 1401 0110 00000000 		.word	CapSense_prtSelTbl
 1402 0114 00000000 		.word	CapSense_prtCfgTbl
 1403 0118 00000000 		.word	CapSense_prtDRTbl
 1404              		.cfi_endproc
 1405              	.LFE50:
 1406              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 1407              		.section	.text.CapSense_SetDriveModeAllPins,"ax",%progbits
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 46


 1408              		.align	2
 1409              		.global	CapSense_SetDriveModeAllPins
 1410              		.code	16
 1411              		.thumb_func
 1412              		.type	CapSense_SetDriveModeAllPins, %function
 1413              	CapSense_SetDriveModeAllPins:
 1414              	.LFB51:
1147:Generated_Source\PSoC4/CapSense.c **** 
1148:Generated_Source\PSoC4/CapSense.c **** 
1149:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1150:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_SetDriveModeAllPins
1151:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1152:Generated_Source\PSoC4/CapSense.c **** *
1153:Generated_Source\PSoC4/CapSense.c **** * Summary:
1154:Generated_Source\PSoC4/CapSense.c **** * This API sets the drive mode of port pins used by the CapSense
1155:Generated_Source\PSoC4/CapSense.c **** * component (sensors, guard, shield, shield tank and Cmod) to drive the
1156:Generated_Source\PSoC4/CapSense.c **** * mode specified by the argument.
1157:Generated_Source\PSoC4/CapSense.c **** *
1158:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1159:Generated_Source\PSoC4/CapSense.c **** *  driveMode:  Drive mode definition.
1160:Generated_Source\PSoC4/CapSense.c **** *
1161:Generated_Source\PSoC4/CapSense.c **** * Return:
1162:Generated_Source\PSoC4/CapSense.c **** *  None
1163:Generated_Source\PSoC4/CapSense.c **** *
1164:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1165:Generated_Source\PSoC4/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin
1166:Generated_Source\PSoC4/CapSense.c **** *  belongs to for each sensor.
1167:Generated_Source\PSoC4/CapSense.c **** *  CapSense_pinShiftTbl[] - used to store position of pin that
1168:Generated_Source\PSoC4/CapSense.c **** *  configured as a sensor in the port.
1169:Generated_Source\PSoC4/CapSense.c **** *
1170:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1171:Generated_Source\PSoC4/CapSense.c **** *  This API shall be called only after CapSense component is stopped.
1172:Generated_Source\PSoC4/CapSense.c **** *
1173:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1174:Generated_Source\PSoC4/CapSense.c **** void CapSense_SetDriveModeAllPins(uint32 driveMode)
1175:Generated_Source\PSoC4/CapSense.c **** {
 1415              		.loc 1 1175 0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 24
 1418              		@ frame_needed = 1, uses_anonymous_args = 0
 1419 0000 80B5     		push	{r7, lr}
 1420              		.cfi_def_cfa_offset 8
 1421              		.cfi_offset 7, -8
 1422              		.cfi_offset 14, -4
 1423 0002 86B0     		sub	sp, sp, #24
 1424              		.cfi_def_cfa_offset 32
 1425 0004 00AF     		add	r7, sp, #0
 1426              		.cfi_def_cfa_register 7
 1427 0006 7860     		str	r0, [r7, #4]
1176:Generated_Source\PSoC4/CapSense.c ****     uint8 curSensor;
1177:Generated_Source\PSoC4/CapSense.c ****     #if (CapSense_IS_COMPLEX_SCANSLOTS)
1178:Generated_Source\PSoC4/CapSense.c ****         uint8 snsNumber;
1179:Generated_Source\PSoC4/CapSense.c ****         uint8 snsType;
1180:Generated_Source\PSoC4/CapSense.c ****     #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1181:Generated_Source\PSoC4/CapSense.c ****     uint32 prtNumberTmp;
1182:Generated_Source\PSoC4/CapSense.c ****     uint32 pinNumberTmp;
1183:Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 47


1184:Generated_Source\PSoC4/CapSense.c ****     for(curSensor = 0u; curSensor < CapSense_TOTAL_SENSOR_COUNT; curSensor++)
 1428              		.loc 1 1184 0
 1429 0008 1723     		movs	r3, #23
 1430 000a FB18     		adds	r3, r7, r3
 1431 000c 0022     		movs	r2, #0
 1432 000e 1A70     		strb	r2, [r3]
 1433 0010 18E0     		b	.L75
 1434              	.L76:
1185:Generated_Source\PSoC4/CapSense.c ****     {
1186:Generated_Source\PSoC4/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1187:Generated_Source\PSoC4/CapSense.c ****             /* Read sensor type: single or complex */
1188:Generated_Source\PSoC4/CapSense.c ****             snsType = CapSense_portTable[curSensor];
1189:Generated_Source\PSoC4/CapSense.c **** 
1190:Generated_Source\PSoC4/CapSense.c ****             /* Check if sensor is complex */
1191:Generated_Source\PSoC4/CapSense.c ****             if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1192:Generated_Source\PSoC4/CapSense.c ****             {
1193:Generated_Source\PSoC4/CapSense.c ****                 /* The sensor is not complex */
1194:Generated_Source\PSoC4/CapSense.c ****                 snsNumber = curSensor;
1195:Generated_Source\PSoC4/CapSense.c ****             }
1196:Generated_Source\PSoC4/CapSense.c ****             else
1197:Generated_Source\PSoC4/CapSense.c ****             {
1198:Generated_Source\PSoC4/CapSense.c ****                 /* Get dedicated sensor ID of the complex sensor */
1199:Generated_Source\PSoC4/CapSense.c ****                 snsType &= ~CapSense_COMPLEX_SS_FLAG;
1200:Generated_Source\PSoC4/CapSense.c ****                 snsNumber = CapSense_indexTable[snsType];
1201:Generated_Source\PSoC4/CapSense.c ****             }
1202:Generated_Source\PSoC4/CapSense.c **** 
1203:Generated_Source\PSoC4/CapSense.c ****             prtNumberTmp = CapSense_portTable[snsNumber];
1204:Generated_Source\PSoC4/CapSense.c ****             pinNumberTmp = CapSense_pinShiftTbl[snsNumber];
1205:Generated_Source\PSoC4/CapSense.c ****         #else
1206:Generated_Source\PSoC4/CapSense.c ****             prtNumberTmp = CapSense_portTable[curSensor];
 1435              		.loc 1 1206 0 discriminator 3
 1436 0012 1723     		movs	r3, #23
 1437 0014 FB18     		adds	r3, r7, r3
 1438 0016 1B78     		ldrb	r3, [r3]
 1439 0018 124A     		ldr	r2, .L77
 1440 001a D35C     		ldrb	r3, [r2, r3]
 1441 001c 3B61     		str	r3, [r7, #16]
1207:Generated_Source\PSoC4/CapSense.c ****             pinNumberTmp = CapSense_pinShiftTbl[curSensor];
 1442              		.loc 1 1207 0 discriminator 3
 1443 001e 1723     		movs	r3, #23
 1444 0020 FB18     		adds	r3, r7, r3
 1445 0022 1B78     		ldrb	r3, [r3]
 1446 0024 104A     		ldr	r2, .L77+4
 1447 0026 D35C     		ldrb	r3, [r2, r3]
 1448 0028 FB60     		str	r3, [r7, #12]
1208:Generated_Source\PSoC4/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1209:Generated_Source\PSoC4/CapSense.c **** 
1210:Generated_Source\PSoC4/CapSense.c ****         CapSense_SetPinDriveMode(driveMode, pinNumberTmp, prtNumberTmp);
 1449              		.loc 1 1210 0 discriminator 3
 1450 002a 3A69     		ldr	r2, [r7, #16]
 1451 002c F968     		ldr	r1, [r7, #12]
 1452 002e 7B68     		ldr	r3, [r7, #4]
 1453 0030 1800     		movs	r0, r3
 1454 0032 FFF7FEFF 		bl	CapSense_SetPinDriveMode
1184:Generated_Source\PSoC4/CapSense.c ****     {
 1455              		.loc 1 1184 0 discriminator 3
 1456 0036 1723     		movs	r3, #23
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 48


 1457 0038 FB18     		adds	r3, r7, r3
 1458 003a 1A78     		ldrb	r2, [r3]
 1459 003c 1723     		movs	r3, #23
 1460 003e FB18     		adds	r3, r7, r3
 1461 0040 0132     		adds	r2, r2, #1
 1462 0042 1A70     		strb	r2, [r3]
 1463              	.L75:
1184:Generated_Source\PSoC4/CapSense.c ****     {
 1464              		.loc 1 1184 0 is_stmt 0 discriminator 1
 1465 0044 1723     		movs	r3, #23
 1466 0046 FB18     		adds	r3, r7, r3
 1467 0048 1B78     		ldrb	r3, [r3]
 1468 004a 042B     		cmp	r3, #4
 1469 004c E1D9     		bls	.L76
1211:Generated_Source\PSoC4/CapSense.c ****     }
1212:Generated_Source\PSoC4/CapSense.c **** 
1213:Generated_Source\PSoC4/CapSense.c ****     CapSense_SetPinDriveMode(driveMode, (uint32)CapSense_CMOD_PIN_NUMBER, (uint32)CapSense_CMOD_PRT
 1470              		.loc 1 1213 0 is_stmt 1
 1471 004e 7B68     		ldr	r3, [r7, #4]
 1472 0050 0422     		movs	r2, #4
 1473 0052 0021     		movs	r1, #0
 1474 0054 1800     		movs	r0, r3
 1475 0056 FFF7FEFF 		bl	CapSense_SetPinDriveMode
1214:Generated_Source\PSoC4/CapSense.c **** 
1215:Generated_Source\PSoC4/CapSense.c ****     #if(0u != CapSense_CSH_TANK_ENABLE)
1216:Generated_Source\PSoC4/CapSense.c ****         CapSense_SetPinDriveMode(driveMode, (uint32)CapSense_CTANK_PIN_NUMBER, (uint32)CapSense_CTA
1217:Generated_Source\PSoC4/CapSense.c ****     #endif /* (0u != CapSense_CSH_TANK_ENABLE) */
1218:Generated_Source\PSoC4/CapSense.c **** 
1219:Generated_Source\PSoC4/CapSense.c ****     #if(0u != CapSense_IS_SHIELD_ENABLE)
1220:Generated_Source\PSoC4/CapSense.c ****         CapSense_SetPinDriveMode(driveMode, (uint32)CapSense_SHIELD_PIN_NUMBER, (uint32)CapSense_SH
1221:Generated_Source\PSoC4/CapSense.c ****     #endif /* (0u != CapSense_IS_SHIELD_ENABLE) */
1222:Generated_Source\PSoC4/CapSense.c **** }
 1476              		.loc 1 1222 0
 1477 005a C046     		nop
 1478 005c BD46     		mov	sp, r7
 1479 005e 06B0     		add	sp, sp, #24
 1480              		@ sp needed
 1481 0060 80BD     		pop	{r7, pc}
 1482              	.L78:
 1483 0062 C046     		.align	2
 1484              	.L77:
 1485 0064 00000000 		.word	CapSense_portTable
 1486 0068 00000000 		.word	CapSense_pinShiftTbl
 1487              		.cfi_endproc
 1488              	.LFE51:
 1489              		.size	CapSense_SetDriveModeAllPins, .-CapSense_SetDriveModeAllPins
 1490              		.section	.text.CapSense_RestoreDriveModeAllPins,"ax",%progbits
 1491              		.align	2
 1492              		.global	CapSense_RestoreDriveModeAllPins
 1493              		.code	16
 1494              		.thumb_func
 1495              		.type	CapSense_RestoreDriveModeAllPins, %function
 1496              	CapSense_RestoreDriveModeAllPins:
 1497              	.LFB52:
1223:Generated_Source\PSoC4/CapSense.c **** 
1224:Generated_Source\PSoC4/CapSense.c **** 
1225:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 49


1226:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_RestoreDriveModeAllPins
1227:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1228:Generated_Source\PSoC4/CapSense.c **** *
1229:Generated_Source\PSoC4/CapSense.c **** * Summary:
1230:Generated_Source\PSoC4/CapSense.c **** *  This API restores the drive for all the CapSense port pins to the original
1231:Generated_Source\PSoC4/CapSense.c **** *  state.
1232:Generated_Source\PSoC4/CapSense.c **** *
1233:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1234:Generated_Source\PSoC4/CapSense.c **** *  None
1235:Generated_Source\PSoC4/CapSense.c **** *
1236:Generated_Source\PSoC4/CapSense.c **** * Return:
1237:Generated_Source\PSoC4/CapSense.c **** *  None
1238:Generated_Source\PSoC4/CapSense.c **** *
1239:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1240:Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtSelTbl[] - Contains pointers to the HSIOM
1241:Generated_Source\PSoC4/CapSense.c **** *  registers for each port.
1242:Generated_Source\PSoC4/CapSense.c **** *
1243:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1244:Generated_Source\PSoC4/CapSense.c **** *  This API is called only after the CapSense component is stopped.
1245:Generated_Source\PSoC4/CapSense.c **** *
1246:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1247:Generated_Source\PSoC4/CapSense.c **** void CapSense_RestoreDriveModeAllPins(void)
1248:Generated_Source\PSoC4/CapSense.c **** {
 1498              		.loc 1 1248 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 8
 1501              		@ frame_needed = 1, uses_anonymous_args = 0
 1502 0000 80B5     		push	{r7, lr}
 1503              		.cfi_def_cfa_offset 8
 1504              		.cfi_offset 7, -8
 1505              		.cfi_offset 14, -4
 1506 0002 82B0     		sub	sp, sp, #8
 1507              		.cfi_def_cfa_offset 16
 1508 0004 00AF     		add	r7, sp, #0
 1509              		.cfi_def_cfa_register 7
1249:Generated_Source\PSoC4/CapSense.c ****     uint32 newRegisterValue;
1250:Generated_Source\PSoC4/CapSense.c **** 
1251:Generated_Source\PSoC4/CapSense.c ****     CapSense_SetDriveModeAllPins(CY_SYS_PINS_DM_ALG_HIZ);
 1510              		.loc 1 1251 0
 1511 0006 0020     		movs	r0, #0
 1512 0008 FFF7FEFF 		bl	CapSense_SetDriveModeAllPins
1252:Generated_Source\PSoC4/CapSense.c **** 
1253:Generated_Source\PSoC4/CapSense.c ****     newRegisterValue = CapSense_CMOD_CONNECTION_REG;
 1513              		.loc 1 1253 0
 1514 000c 084B     		ldr	r3, .L80
 1515 000e 1B68     		ldr	r3, [r3]
 1516 0010 7B60     		str	r3, [r7, #4]
1254:Generated_Source\PSoC4/CapSense.c ****     newRegisterValue &= ~(CapSense_CSD_CMOD_CONNECTION_MASK);
 1517              		.loc 1 1254 0
 1518 0012 7B68     		ldr	r3, [r7, #4]
 1519 0014 0F22     		movs	r2, #15
 1520 0016 9343     		bics	r3, r2
 1521 0018 7B60     		str	r3, [r7, #4]
1255:Generated_Source\PSoC4/CapSense.c ****     newRegisterValue |= CapSense_CSD_CMOD_TO_AMUXBUS_A;
 1522              		.loc 1 1255 0
 1523 001a 7B68     		ldr	r3, [r7, #4]
 1524 001c 0622     		movs	r2, #6
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 50


 1525 001e 1343     		orrs	r3, r2
 1526 0020 7B60     		str	r3, [r7, #4]
1256:Generated_Source\PSoC4/CapSense.c ****     CapSense_CMOD_CONNECTION_REG = newRegisterValue;
 1527              		.loc 1 1256 0
 1528 0022 034B     		ldr	r3, .L80
 1529 0024 7A68     		ldr	r2, [r7, #4]
 1530 0026 1A60     		str	r2, [r3]
1257:Generated_Source\PSoC4/CapSense.c **** 
1258:Generated_Source\PSoC4/CapSense.c ****     #if(0u != CapSense_CSH_TANK_ENABLE)
1259:Generated_Source\PSoC4/CapSense.c ****         newRegisterValue = CapSense_CTANK_CONNECTION_REG;
1260:Generated_Source\PSoC4/CapSense.c ****         newRegisterValue &= ~(CapSense_CSD_CTANK_CONNECTION_MASK);
1261:Generated_Source\PSoC4/CapSense.c ****         newRegisterValue |= CapSense_CSD_CTANK_TO_AMUXBUS_B;
1262:Generated_Source\PSoC4/CapSense.c ****         CapSense_CTANK_CONNECTION_REG = newRegisterValue;
1263:Generated_Source\PSoC4/CapSense.c ****     #endif/* (0u != CapSense_CSH_TANK_ENABLE) */
1264:Generated_Source\PSoC4/CapSense.c **** 
1265:Generated_Source\PSoC4/CapSense.c ****     #if(0u != CapSense_IS_SHIELD_ENABLE)
1266:Generated_Source\PSoC4/CapSense.c ****         newRegisterValue = *CapSense_prtSelTbl[CapSense_SHIELD_PORT_NUMBER];
1267:Generated_Source\PSoC4/CapSense.c ****         newRegisterValue &= ~(CapSense_CSD_HSIOM_MASK << ((uint32)CapSense_SHIELD_PIN_NUMBER * CapS
1268:Generated_Source\PSoC4/CapSense.c ****         newRegisterValue |= (CapSense_CSD_SHIELD_PORT_MODE << ((uint32)CapSense_SHIELD_PIN_NUMBER *
1269:Generated_Source\PSoC4/CapSense.c ****         *CapSense_prtSelTbl[CapSense_SHIELD_PORT_NUMBER] = newRegisterValue;
1270:Generated_Source\PSoC4/CapSense.c ****     #endif /* (0u != CapSense_IS_SHIELD_ENABLE) */
1271:Generated_Source\PSoC4/CapSense.c **** }
 1531              		.loc 1 1271 0
 1532 0028 C046     		nop
 1533 002a BD46     		mov	sp, r7
 1534 002c 02B0     		add	sp, sp, #8
 1535              		@ sp needed
 1536 002e 80BD     		pop	{r7, pc}
 1537              	.L81:
 1538              		.align	2
 1539              	.L80:
 1540 0030 00040240 		.word	1073873920
 1541              		.cfi_endproc
 1542              	.LFE52:
 1543              		.size	CapSense_RestoreDriveModeAllPins, .-CapSense_RestoreDriveModeAllPins
 1544              		.section	.text.CapSense_SetPinDriveMode,"ax",%progbits
 1545              		.align	2
 1546              		.global	CapSense_SetPinDriveMode
 1547              		.code	16
 1548              		.thumb_func
 1549              		.type	CapSense_SetPinDriveMode, %function
 1550              	CapSense_SetPinDriveMode:
 1551              	.LFB53:
1272:Generated_Source\PSoC4/CapSense.c **** 
1273:Generated_Source\PSoC4/CapSense.c **** 
1274:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1275:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_SetPinDriveMode
1276:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1277:Generated_Source\PSoC4/CapSense.c **** *
1278:Generated_Source\PSoC4/CapSense.c **** * Summary:
1279:Generated_Source\PSoC4/CapSense.c **** * This API sets the drive mode for the appropriate port/pin.
1280:Generated_Source\PSoC4/CapSense.c **** *
1281:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1282:Generated_Source\PSoC4/CapSense.c **** *  driveMode:  Drive mode definition.
1283:Generated_Source\PSoC4/CapSense.c **** *  portNumber: contains port number (0, 1, 2).
1284:Generated_Source\PSoC4/CapSense.c **** *  pinNumber: contains pin number (0, 1, 2, ... , 7).
1285:Generated_Source\PSoC4/CapSense.c **** *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 51


1286:Generated_Source\PSoC4/CapSense.c **** * Return:
1287:Generated_Source\PSoC4/CapSense.c **** *  None
1288:Generated_Source\PSoC4/CapSense.c **** *
1289:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1290:Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtSelTbl[] - Contains pointers to the HSIOM
1291:Generated_Source\PSoC4/CapSense.c **** *  registers for each port.
1292:Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtCfgTb[] - Contains pointers to the port config
1293:Generated_Source\PSoC4/CapSense.c **** *  registers for each port.
1294:Generated_Source\PSoC4/CapSense.c **** *
1295:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1296:Generated_Source\PSoC4/CapSense.c **** *  This API is called only after CapSense component is stopped.
1297:Generated_Source\PSoC4/CapSense.c **** *
1298:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1299:Generated_Source\PSoC4/CapSense.c **** void CapSense_SetPinDriveMode(uint32 driveMode, uint32 pinNumber, uint32 portNumber)
1300:Generated_Source\PSoC4/CapSense.c **** {
 1552              		.loc 1 1300 0
 1553              		.cfi_startproc
 1554              		@ args = 0, pretend = 0, frame = 24
 1555              		@ frame_needed = 1, uses_anonymous_args = 0
 1556 0000 80B5     		push	{r7, lr}
 1557              		.cfi_def_cfa_offset 8
 1558              		.cfi_offset 7, -8
 1559              		.cfi_offset 14, -4
 1560 0002 86B0     		sub	sp, sp, #24
 1561              		.cfi_def_cfa_offset 32
 1562 0004 00AF     		add	r7, sp, #0
 1563              		.cfi_def_cfa_register 7
 1564 0006 F860     		str	r0, [r7, #12]
 1565 0008 B960     		str	r1, [r7, #8]
 1566 000a 7A60     		str	r2, [r7, #4]
1301:Generated_Source\PSoC4/CapSense.c ****     uint32  pinModeShift;
1302:Generated_Source\PSoC4/CapSense.c ****     uint32 newRegisterValue;
1303:Generated_Source\PSoC4/CapSense.c **** 
1304:Generated_Source\PSoC4/CapSense.c ****     pinModeShift  = pinNumber * CapSense_PC_PIN_CFG_SIZE;
 1567              		.loc 1 1304 0
 1568 000c BA68     		ldr	r2, [r7, #8]
 1569 000e 1300     		movs	r3, r2
 1570 0010 5B00     		lsls	r3, r3, #1
 1571 0012 9B18     		adds	r3, r3, r2
 1572 0014 7B61     		str	r3, [r7, #20]
1305:Generated_Source\PSoC4/CapSense.c **** 
1306:Generated_Source\PSoC4/CapSense.c ****     newRegisterValue = *CapSense_prtCfgTbl[portNumber];
 1573              		.loc 1 1306 0
 1574 0016 0F4B     		ldr	r3, .L83
 1575 0018 7A68     		ldr	r2, [r7, #4]
 1576 001a 9200     		lsls	r2, r2, #2
 1577 001c D358     		ldr	r3, [r2, r3]
 1578 001e 1B68     		ldr	r3, [r3]
 1579 0020 3B61     		str	r3, [r7, #16]
1307:Generated_Source\PSoC4/CapSense.c ****     newRegisterValue &= ~(CapSense_CSD_PIN_MODE_MASK << pinModeShift);
 1580              		.loc 1 1307 0
 1581 0022 0722     		movs	r2, #7
 1582 0024 7B69     		ldr	r3, [r7, #20]
 1583 0026 9A40     		lsls	r2, r2, r3
 1584 0028 1300     		movs	r3, r2
 1585 002a DA43     		mvns	r2, r3
 1586 002c 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 52


 1587 002e 1340     		ands	r3, r2
 1588 0030 3B61     		str	r3, [r7, #16]
1308:Generated_Source\PSoC4/CapSense.c ****     newRegisterValue |=  (uint32)((uint32)driveMode << pinModeShift);
 1589              		.loc 1 1308 0
 1590 0032 FA68     		ldr	r2, [r7, #12]
 1591 0034 7B69     		ldr	r3, [r7, #20]
 1592 0036 9A40     		lsls	r2, r2, r3
 1593 0038 1300     		movs	r3, r2
 1594 003a 3A69     		ldr	r2, [r7, #16]
 1595 003c 1343     		orrs	r3, r2
 1596 003e 3B61     		str	r3, [r7, #16]
1309:Generated_Source\PSoC4/CapSense.c ****     *CapSense_prtCfgTbl[portNumber] =  newRegisterValue;
 1597              		.loc 1 1309 0
 1598 0040 044B     		ldr	r3, .L83
 1599 0042 7A68     		ldr	r2, [r7, #4]
 1600 0044 9200     		lsls	r2, r2, #2
 1601 0046 D358     		ldr	r3, [r2, r3]
 1602 0048 3A69     		ldr	r2, [r7, #16]
 1603 004a 1A60     		str	r2, [r3]
1310:Generated_Source\PSoC4/CapSense.c **** }
 1604              		.loc 1 1310 0
 1605 004c C046     		nop
 1606 004e BD46     		mov	sp, r7
 1607 0050 06B0     		add	sp, sp, #24
 1608              		@ sp needed
 1609 0052 80BD     		pop	{r7, pc}
 1610              	.L84:
 1611              		.align	2
 1612              	.L83:
 1613 0054 00000000 		.word	CapSense_prtCfgTbl
 1614              		.cfi_endproc
 1615              	.LFE53:
 1616              		.size	CapSense_SetPinDriveMode, .-CapSense_SetPinDriveMode
 1617              		.section	.text.CapSense_PreScan,"ax",%progbits
 1618              		.align	2
 1619              		.global	CapSense_PreScan
 1620              		.code	16
 1621              		.thumb_func
 1622              		.type	CapSense_PreScan, %function
 1623              	CapSense_PreScan:
 1624              	.LFB54:
1311:Generated_Source\PSoC4/CapSense.c **** 
1312:Generated_Source\PSoC4/CapSense.c **** 
1313:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1314:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_PreScan
1315:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1316:Generated_Source\PSoC4/CapSense.c **** *
1317:Generated_Source\PSoC4/CapSense.c **** * Summary:
1318:Generated_Source\PSoC4/CapSense.c **** *  Sets required settings, enables a sensor, removes Vref from AMUX and starts the
1319:Generated_Source\PSoC4/CapSense.c **** *  scanning process of the sensor.
1320:Generated_Source\PSoC4/CapSense.c **** *
1321:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1322:Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number.
1323:Generated_Source\PSoC4/CapSense.c **** *
1324:Generated_Source\PSoC4/CapSense.c **** * Return:
1325:Generated_Source\PSoC4/CapSense.c **** *  None
1326:Generated_Source\PSoC4/CapSense.c **** *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 53


1327:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1328:Generated_Source\PSoC4/CapSense.c **** * CapSense_widgetNumber[] - This array contains numbers of widgets for each sensor.
1329:Generated_Source\PSoC4/CapSense.c **** * CapSense_widgetResolution[] - Contains the widget resolution.
1330:Generated_Source\PSoC4/CapSense.c **** *
1331:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1332:Generated_Source\PSoC4/CapSense.c **** *  None
1333:Generated_Source\PSoC4/CapSense.c **** *
1334:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1335:Generated_Source\PSoC4/CapSense.c **** void CapSense_PreScan(uint32 sensor)
1336:Generated_Source\PSoC4/CapSense.c **** {
 1625              		.loc 1 1336 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 32
 1628              		@ frame_needed = 1, uses_anonymous_args = 0
 1629 0000 90B5     		push	{r4, r7, lr}
 1630              		.cfi_def_cfa_offset 12
 1631              		.cfi_offset 4, -12
 1632              		.cfi_offset 7, -8
 1633              		.cfi_offset 14, -4
 1634 0002 89B0     		sub	sp, sp, #36
 1635              		.cfi_def_cfa_offset 48
 1636 0004 00AF     		add	r7, sp, #0
 1637              		.cfi_def_cfa_register 7
 1638 0006 7860     		str	r0, [r7, #4]
1337:Generated_Source\PSoC4/CapSense.c ****     uint8 widget;
1338:Generated_Source\PSoC4/CapSense.c ****     uint8 interruptState;
1339:Generated_Source\PSoC4/CapSense.c ****     uint32 newRegValue;
1340:Generated_Source\PSoC4/CapSense.c ****     uint32 counterResolution;
1341:Generated_Source\PSoC4/CapSense.c **** 
1342:Generated_Source\PSoC4/CapSense.c ****     #if(CapSense_PRS_OPTIONS == CapSense__PRS_AUTO)
1343:Generated_Source\PSoC4/CapSense.c ****         uint8 senseClkDivMath;
1344:Generated_Source\PSoC4/CapSense.c ****         uint8 sampleClkDivMath;
1345:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS == CapSense__PRS_AUTO) */
1346:Generated_Source\PSoC4/CapSense.c **** 
1347:Generated_Source\PSoC4/CapSense.c ****     #if ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1348:Generated_Source\PSoC4/CapSense.c ****          (0 != CapSense_IS_OVERSAMPLING_EN))
1349:Generated_Source\PSoC4/CapSense.c ****         uint32 oversamplingFactor;
1350:Generated_Source\PSoC4/CapSense.c ****     #endif /* ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1351:Generated_Source\PSoC4/CapSense.c ****                (0 != CapSense_IS_OVERSAMPLING_EN)) */
1352:Generated_Source\PSoC4/CapSense.c **** 
1353:Generated_Source\PSoC4/CapSense.c ****     /* Define widget sensor belongs to */
1354:Generated_Source\PSoC4/CapSense.c ****     widget = CapSense_widgetNumber[sensor];
 1639              		.loc 1 1354 0
 1640 0008 1B23     		movs	r3, #27
 1641 000a FB18     		adds	r3, r7, r3
 1642 000c 4E49     		ldr	r1, .L88
 1643 000e 7A68     		ldr	r2, [r7, #4]
 1644 0010 8A18     		adds	r2, r1, r2
 1645 0012 1278     		ldrb	r2, [r2]
 1646 0014 1A70     		strb	r2, [r3]
1355:Generated_Source\PSoC4/CapSense.c **** 
1356:Generated_Source\PSoC4/CapSense.c ****     /* Recalculate Counter Resolution to MSB 16 bits */
1357:Generated_Source\PSoC4/CapSense.c ****     counterResolution = CapSense_widgetResolution[widget];
 1647              		.loc 1 1357 0
 1648 0016 1B23     		movs	r3, #27
 1649 0018 FB18     		adds	r3, r7, r3
 1650 001a 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 54


 1651 001c 4B4B     		ldr	r3, .L88+4
 1652 001e 9200     		lsls	r2, r2, #2
 1653 0020 D358     		ldr	r3, [r2, r3]
 1654 0022 FB61     		str	r3, [r7, #28]
1358:Generated_Source\PSoC4/CapSense.c **** 
1359:Generated_Source\PSoC4/CapSense.c ****     #if ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1360:Generated_Source\PSoC4/CapSense.c ****          (0 != CapSense_IS_OVERSAMPLING_EN))
1361:Generated_Source\PSoC4/CapSense.c ****         oversamplingFactor = CapSense_GetBitValue(CapSense_scanSpeedTbl, sensor);
 1655              		.loc 1 1361 0
 1656 0024 7A68     		ldr	r2, [r7, #4]
 1657 0026 4A4B     		ldr	r3, .L88+8
 1658 0028 1100     		movs	r1, r2
 1659 002a 1800     		movs	r0, r3
 1660 002c FFF7FEFF 		bl	CapSense_GetBitValue
 1661 0030 0300     		movs	r3, r0
 1662 0032 7B61     		str	r3, [r7, #20]
1362:Generated_Source\PSoC4/CapSense.c **** 
1363:Generated_Source\PSoC4/CapSense.c ****         if(counterResolution < CapSense_RESOLUTION_16_BITS)
 1663              		.loc 1 1363 0
 1664 0034 FB69     		ldr	r3, [r7, #28]
 1665 0036 474A     		ldr	r2, .L88+12
 1666 0038 9342     		cmp	r3, r2
 1667 003a 09D8     		bhi	.L86
1364:Generated_Source\PSoC4/CapSense.c ****         {
1365:Generated_Source\PSoC4/CapSense.c ****             counterResolution <<= oversamplingFactor;
 1668              		.loc 1 1365 0
 1669 003c FA69     		ldr	r2, [r7, #28]
 1670 003e 7B69     		ldr	r3, [r7, #20]
 1671 0040 9A40     		lsls	r2, r2, r3
 1672 0042 1300     		movs	r3, r2
 1673 0044 FB61     		str	r3, [r7, #28]
1366:Generated_Source\PSoC4/CapSense.c ****             counterResolution |= (uint32)(CapSense_RESOLUTION_8_BITS);
 1674              		.loc 1 1366 0
 1675 0046 FB69     		ldr	r3, [r7, #28]
 1676 0048 FF22     		movs	r2, #255
 1677 004a 1204     		lsls	r2, r2, #16
 1678 004c 1343     		orrs	r3, r2
 1679 004e FB61     		str	r3, [r7, #28]
 1680              	.L86:
1367:Generated_Source\PSoC4/CapSense.c ****         }
1368:Generated_Source\PSoC4/CapSense.c ****     #endif /* ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1369:Generated_Source\PSoC4/CapSense.c ****                (0 != CapSense_IS_OVERSAMPLING_EN)) */
1370:Generated_Source\PSoC4/CapSense.c **** 
1371:Generated_Source\PSoC4/CapSense.c ****     #if (0u != CapSense_IS_M0S8PERI_BLOCK)
1372:Generated_Source\PSoC4/CapSense.c ****         CapSense_SenseClk_Stop();
 1681              		.loc 1 1372 0
 1682 0050 FFF7FEFF 		bl	CapSense_SenseClk_Stop
1373:Generated_Source\PSoC4/CapSense.c ****         CapSense_SampleClk_Stop();
 1683              		.loc 1 1373 0
 1684 0054 FFF7FEFF 		bl	CapSense_SampleClk_Stop
1374:Generated_Source\PSoC4/CapSense.c ****     #endif /* (0u != CapSense_IS_M0S8PERI_BLOCK) */
1375:Generated_Source\PSoC4/CapSense.c **** 
1376:Generated_Source\PSoC4/CapSense.c ****     #if (0u != CapSense_MULTIPLE_FREQUENCY_SET)
1377:Generated_Source\PSoC4/CapSense.c ****         CapSense_SampleClk_SetDividerValue((uint16)CapSense_sampleClkDividerVal[sensor]);
 1685              		.loc 1 1377 0
 1686 0058 3F4A     		ldr	r2, .L88+16
 1687 005a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 55


 1688 005c D318     		adds	r3, r2, r3
 1689 005e 1B78     		ldrb	r3, [r3]
 1690 0060 9BB2     		uxth	r3, r3
 1691 0062 013B     		subs	r3, r3, #1
 1692 0064 9BB2     		uxth	r3, r3
 1693 0066 0021     		movs	r1, #0
 1694 0068 1800     		movs	r0, r3
 1695 006a FFF7FEFF 		bl	CapSense_SampleClk_SetFractionalDividerRegister
1378:Generated_Source\PSoC4/CapSense.c ****         CapSense_SenseClk_SetDividerValue((uint16)CapSense_senseClkDividerVal[sensor]);
 1696              		.loc 1 1378 0
 1697 006e 3B4A     		ldr	r2, .L88+20
 1698 0070 7B68     		ldr	r3, [r7, #4]
 1699 0072 D318     		adds	r3, r2, r3
 1700 0074 1B78     		ldrb	r3, [r3]
 1701 0076 9BB2     		uxth	r3, r3
 1702 0078 013B     		subs	r3, r3, #1
 1703 007a 9BB2     		uxth	r3, r3
 1704 007c 0021     		movs	r1, #0
 1705 007e 1800     		movs	r0, r3
 1706 0080 FFF7FEFF 		bl	CapSense_SenseClk_SetFractionalDividerRegister
1379:Generated_Source\PSoC4/CapSense.c ****     #else
1380:Generated_Source\PSoC4/CapSense.c ****         CapSense_SampleClk_SetDividerValue((uint16)CapSense_sampleClkDividerVal);
1381:Generated_Source\PSoC4/CapSense.c ****         CapSense_SenseClk_SetDividerValue((uint16)CapSense_senseClkDividerVal);
1382:Generated_Source\PSoC4/CapSense.c ****     #endif /* (0u != CapSense_MULTIPLE_FREQUENCY_SET) */
1383:Generated_Source\PSoC4/CapSense.c **** 
1384:Generated_Source\PSoC4/CapSense.c ****     #if (0u != CapSense_IS_M0S8PERI_BLOCK)
1385:Generated_Source\PSoC4/CapSense.c ****         CapSense_SampleClk_Start();
 1707              		.loc 1 1385 0
 1708 0084 FF20     		movs	r0, #255
 1709 0086 FFF7FEFF 		bl	CapSense_SampleClk_StartEx
1386:Generated_Source\PSoC4/CapSense.c ****         CapSense_SenseClk_StartEx(CapSense_SampleClk__DIV_ID);
 1710              		.loc 1 1386 0
 1711 008a 4020     		movs	r0, #64
 1712 008c FFF7FEFF 		bl	CapSense_SenseClk_StartEx
1387:Generated_Source\PSoC4/CapSense.c **** 
1388:Generated_Source\PSoC4/CapSense.c ****         #if(CapSense_PRS_OPTIONS == CapSense__PRS_NONE)
1389:Generated_Source\PSoC4/CapSense.c ****             CyIntDisable(CapSense_ISR_NUMBER);
 1713              		.loc 1 1389 0
 1714 0090 1020     		movs	r0, #16
 1715 0092 FFF7FEFF 		bl	CyIntDisable
1390:Generated_Source\PSoC4/CapSense.c ****             CapSense_CSD_CNT_REG = CapSense_ONE_CYCLE;
 1716              		.loc 1 1390 0
 1717 0096 324B     		ldr	r3, .L88+24
 1718 0098 8022     		movs	r2, #128
 1719 009a 5202     		lsls	r2, r2, #9
 1720 009c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/CapSense.c ****             while(0u != (CapSense_CSD_CNT_REG & CapSense_RESOLUTION_16_BITS))
 1721              		.loc 1 1391 0
 1722 009e C046     		nop
 1723              	.L87:
 1724              		.loc 1 1391 0 is_stmt 0 discriminator 1
 1725 00a0 2F4B     		ldr	r3, .L88+24
 1726 00a2 1B68     		ldr	r3, [r3]
 1727 00a4 1B0C     		lsrs	r3, r3, #16
 1728 00a6 1B04     		lsls	r3, r3, #16
 1729 00a8 FAD1     		bne	.L87
1392:Generated_Source\PSoC4/CapSense.c ****             {
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 56


1393:Generated_Source\PSoC4/CapSense.c ****             /* Wait until scanning is complete */
1394:Generated_Source\PSoC4/CapSense.c ****             }
1395:Generated_Source\PSoC4/CapSense.c ****             CapSense_CSD_INTR_REG = 1u;
 1730              		.loc 1 1395 0 is_stmt 1
 1731 00aa 2E4B     		ldr	r3, .L88+28
 1732 00ac 0122     		movs	r2, #1
 1733 00ae 1A60     		str	r2, [r3]
1396:Generated_Source\PSoC4/CapSense.c ****             CyIntClearPending(CapSense_ISR_NUMBER);
 1734              		.loc 1 1396 0
 1735 00b0 1020     		movs	r0, #16
 1736 00b2 FFF7FEFF 		bl	CyIntClearPending
1397:Generated_Source\PSoC4/CapSense.c ****             CyIntEnable(CapSense_ISR_NUMBER);
 1737              		.loc 1 1397 0
 1738 00b6 1020     		movs	r0, #16
 1739 00b8 FFF7FEFF 		bl	CyIntEnable
1398:Generated_Source\PSoC4/CapSense.c ****         #endif /* CapSense_PRS_OPTIONS == CapSense__PRS_NONE */
1399:Generated_Source\PSoC4/CapSense.c ****     #endif /* (0u != CapSense_IS_M0S8PERI_BLOCK) */
1400:Generated_Source\PSoC4/CapSense.c **** 
1401:Generated_Source\PSoC4/CapSense.c **** #if(CapSense_PRS_OPTIONS != CapSense__PRS_NONE)
1402:Generated_Source\PSoC4/CapSense.c **** 
1403:Generated_Source\PSoC4/CapSense.c ****     #if(CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
1404:Generated_Source\PSoC4/CapSense.c ****         if(CapSense_prescalersTuningDone != 0u)
1405:Generated_Source\PSoC4/CapSense.c ****         {
1406:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
1407:Generated_Source\PSoC4/CapSense.c **** 
1408:Generated_Source\PSoC4/CapSense.c ****             CyIntDisable(CapSense_ISR_NUMBER);
1409:Generated_Source\PSoC4/CapSense.c **** 
1410:Generated_Source\PSoC4/CapSense.c ****             newRegValue = CapSense_CSD_CFG_REG;
1411:Generated_Source\PSoC4/CapSense.c ****             newRegValue |= CapSense_CSD_CFG_PRS_SELECT;
1412:Generated_Source\PSoC4/CapSense.c **** 
1413:Generated_Source\PSoC4/CapSense.c ****             #if(CapSense_PRS_OPTIONS == CapSense__PRS_AUTO)
1414:Generated_Source\PSoC4/CapSense.c **** 
1415:Generated_Source\PSoC4/CapSense.c ****                 newRegValue &= ~(CapSense_PRS_MODE_MASK);
1416:Generated_Source\PSoC4/CapSense.c **** 
1417:Generated_Source\PSoC4/CapSense.c ****                 #if (0u != CapSense_MULTIPLE_FREQUENCY_SET)
1418:Generated_Source\PSoC4/CapSense.c ****                     senseClkDivMath = CapSense_senseClkDividerVal[sensor];
1419:Generated_Source\PSoC4/CapSense.c ****                     sampleClkDivMath = CapSense_sampleClkDividerVal[sensor];
1420:Generated_Source\PSoC4/CapSense.c ****                 #else
1421:Generated_Source\PSoC4/CapSense.c ****                     senseClkDivMath = CapSense_senseClkDividerVal;
1422:Generated_Source\PSoC4/CapSense.c ****                     sampleClkDivMath = CapSense_sampleClkDividerVal;
1423:Generated_Source\PSoC4/CapSense.c ****                 #endif /* ( CapSense_MULTIPLE_FREQUENCY_SET) */
1424:Generated_Source\PSoC4/CapSense.c **** 
1425:Generated_Source\PSoC4/CapSense.c ****                 #if(0u == CapSense_IS_M0S8PERI_BLOCK)
1426:Generated_Source\PSoC4/CapSense.c ****                     senseClkDivMath *= sampleClkDivMath;
1427:Generated_Source\PSoC4/CapSense.c ****                 #endif /* (0u == CapSense_IS_M0S8PERI_BLOCK) */
1428:Generated_Source\PSoC4/CapSense.c **** 
1429:Generated_Source\PSoC4/CapSense.c ****                 if((senseClkDivMath * CapSense_RESOLUTION_12_BITS) <
1430:Generated_Source\PSoC4/CapSense.c ****                    (sampleClkDivMath * CapSense_widgetResolution[widget]))
1431:Generated_Source\PSoC4/CapSense.c ****                 {
1432:Generated_Source\PSoC4/CapSense.c ****                     newRegValue |= CapSense_CSD_PRS_12_BIT;
1433:Generated_Source\PSoC4/CapSense.c ****                 }
1434:Generated_Source\PSoC4/CapSense.c ****             #endif /* (CapSense_PRS_OPTIONS == CapSense__PRS_AUTO) */
1435:Generated_Source\PSoC4/CapSense.c **** 
1436:Generated_Source\PSoC4/CapSense.c ****             CapSense_CSD_CFG_REG = newRegValue;
1437:Generated_Source\PSoC4/CapSense.c **** 
1438:Generated_Source\PSoC4/CapSense.c ****             CyIntEnable(CapSense_ISR_NUMBER);
1439:Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 57


1440:Generated_Source\PSoC4/CapSense.c ****     #if(CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
1441:Generated_Source\PSoC4/CapSense.c ****         }
1442:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS != CapSense__PRS_NONE) */
1443:Generated_Source\PSoC4/CapSense.c **** 
1444:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_PRS_OPTIONS == CapSense__PRS_NONE) */
1445:Generated_Source\PSoC4/CapSense.c **** 
1446:Generated_Source\PSoC4/CapSense.c ****     /* Set Idac Value */
1447:Generated_Source\PSoC4/CapSense.c ****     CyIntDisable(CapSense_ISR_NUMBER);
 1740              		.loc 1 1447 0
 1741 00bc 1020     		movs	r0, #16
 1742 00be FFF7FEFF 		bl	CyIntDisable
1448:Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CSD_IDAC_REG;
 1743              		.loc 1 1448 0
 1744 00c2 294B     		ldr	r3, .L88+32
 1745 00c4 1B68     		ldr	r3, [r3]
 1746 00c6 3B61     		str	r3, [r7, #16]
1449:Generated_Source\PSoC4/CapSense.c **** 
1450:Generated_Source\PSoC4/CapSense.c **** #if (CapSense_IDAC_CNT == 1u)
1451:Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_CSD_IDAC1_DATA_MASK);
1452:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= CapSense_modulationIDAC[sensor];
1453:Generated_Source\PSoC4/CapSense.c **** #else
1454:Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_CSD_IDAC1_DATA_MASK | CapSense_CSD_IDAC2_DATA_MASK);
 1747              		.loc 1 1454 0
 1748 00c8 3B69     		ldr	r3, [r7, #16]
 1749 00ca 284A     		ldr	r2, .L88+36
 1750 00cc 1340     		ands	r3, r2
 1751 00ce 3B61     		str	r3, [r7, #16]
1455:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= (CapSense_modulationIDAC[sensor] |
 1752              		.loc 1 1455 0
 1753 00d0 274A     		ldr	r2, .L88+40
 1754 00d2 7B68     		ldr	r3, [r7, #4]
 1755 00d4 D318     		adds	r3, r2, r3
 1756 00d6 1B78     		ldrb	r3, [r3]
 1757 00d8 1900     		movs	r1, r3
1456:Generated_Source\PSoC4/CapSense.c ****                             (uint32)((uint32)CapSense_compensationIDAC[sensor] <<
 1758              		.loc 1 1456 0
 1759 00da 264A     		ldr	r2, .L88+44
 1760 00dc 7B68     		ldr	r3, [r7, #4]
 1761 00de D318     		adds	r3, r2, r3
 1762 00e0 1B78     		ldrb	r3, [r3]
 1763 00e2 1B04     		lsls	r3, r3, #16
1455:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= (CapSense_modulationIDAC[sensor] |
 1764              		.loc 1 1455 0
 1765 00e4 0B43     		orrs	r3, r1
 1766 00e6 3A69     		ldr	r2, [r7, #16]
 1767 00e8 1343     		orrs	r3, r2
 1768 00ea 3B61     		str	r3, [r7, #16]
1457:Generated_Source\PSoC4/CapSense.c ****                             CapSense_CSD_IDAC2_DATA_OFFSET));
1458:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_IDAC_CNT == 1u) */
1459:Generated_Source\PSoC4/CapSense.c **** 
1460:Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_IDAC_REG = newRegValue;
 1769              		.loc 1 1460 0
 1770 00ec 1E4B     		ldr	r3, .L88+32
 1771 00ee 3A69     		ldr	r2, [r7, #16]
 1772 00f0 1A60     		str	r2, [r3]
1461:Generated_Source\PSoC4/CapSense.c **** 
1462:Generated_Source\PSoC4/CapSense.c **** #if(CapSense_CMOD_PREGARGE_OPTION == CapSense__CAPPRIOBUF)
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 58


1463:Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CMOD_CONNECTION_REG;
1464:Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_CSD_CMOD_CONNECTION_MASK);
1465:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= CapSense_CSD_CMOD_TO_AMUXBUS_A;
1466:Generated_Source\PSoC4/CapSense.c ****     CapSense_CMOD_CONNECTION_REG = newRegValue;
1467:Generated_Source\PSoC4/CapSense.c **** 
1468:Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CMOD_PORT_PC_REG;
1469:Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_CSD_CMOD_PC_MASK);
1470:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= CapSense_CMOD_PC_HIGH_Z_MODE;
1471:Generated_Source\PSoC4/CapSense.c ****     CapSense_CMOD_PORT_PC_REG = newRegValue;
1472:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_CMOD_PREGARGE_OPTION == CapSense__CAPPRIOBUF) */
1473:Generated_Source\PSoC4/CapSense.c **** 
1474:Generated_Source\PSoC4/CapSense.c ****     /* Disconnect Vref Buffer from AMUX */
1475:Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CSD_CFG_REG;
 1773              		.loc 1 1475 0
 1774 00f2 214B     		ldr	r3, .L88+48
 1775 00f4 1B68     		ldr	r3, [r3]
 1776 00f6 3B61     		str	r3, [r7, #16]
1476:Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_PRECHARGE_CONFIG_MASK);
 1777              		.loc 1 1476 0
 1778 00f8 3B69     		ldr	r3, [r7, #16]
 1779 00fa 204A     		ldr	r2, .L88+52
 1780 00fc 1340     		ands	r3, r2
 1781 00fe 3B61     		str	r3, [r7, #16]
1477:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= CapSense_CTANK_PRECHARGE_CONFIG;
 1782              		.loc 1 1477 0
 1783 0100 3B69     		ldr	r3, [r7, #16]
 1784 0102 1F4A     		ldr	r2, .L88+56
 1785 0104 1343     		orrs	r3, r2
 1786 0106 3B61     		str	r3, [r7, #16]
1478:Generated_Source\PSoC4/CapSense.c **** 
1479:Generated_Source\PSoC4/CapSense.c ****     CyIntEnable(CapSense_ISR_NUMBER);
 1787              		.loc 1 1479 0
 1788 0108 1020     		movs	r0, #16
 1789 010a FFF7FEFF 		bl	CyIntEnable
1480:Generated_Source\PSoC4/CapSense.c **** 
1481:Generated_Source\PSoC4/CapSense.c ****     /* Enable Sensor */
1482:Generated_Source\PSoC4/CapSense.c ****     CapSense_EnableScanSlot(sensor);
 1790              		.loc 1 1482 0
 1791 010e 7B68     		ldr	r3, [r7, #4]
 1792 0110 1800     		movs	r0, r3
 1793 0112 FFF7FEFF 		bl	CapSense_EnableSensor
1483:Generated_Source\PSoC4/CapSense.c **** 
1484:Generated_Source\PSoC4/CapSense.c ****     interruptState = CyEnterCriticalSection();
 1794              		.loc 1 1484 0
 1795 0116 0F23     		movs	r3, #15
 1796 0118 FC18     		adds	r4, r7, r3
 1797 011a FFF7FEFF 		bl	CyEnterCriticalSection
 1798 011e 0300     		movs	r3, r0
 1799 0120 2370     		strb	r3, [r4]
1485:Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_CFG_REG = newRegValue;
 1800              		.loc 1 1485 0
 1801 0122 154B     		ldr	r3, .L88+48
 1802 0124 3A69     		ldr	r2, [r7, #16]
 1803 0126 1A60     		str	r2, [r3]
1486:Generated_Source\PSoC4/CapSense.c **** 
1487:Generated_Source\PSoC4/CapSense.c ****     /* `#START CapSense_PreSettlingDelay_Debug` */
1488:Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 59


1489:Generated_Source\PSoC4/CapSense.c ****     /* `#END` */
1490:Generated_Source\PSoC4/CapSense.c **** 
1491:Generated_Source\PSoC4/CapSense.c **** #ifdef CapSense_PRE_SCAN_PRE_SETTLING_DELAY_DEBUG_CALLBACK
1492:Generated_Source\PSoC4/CapSense.c ****     CapSense_PreScan_Pre_SettlingDelay_Debug_Callback();
1493:Generated_Source\PSoC4/CapSense.c **** #endif /* CapSense_PRE_SCAN_PRE_SETTLING_DELAY_DEBUG_CALLBACK */
1494:Generated_Source\PSoC4/CapSense.c **** 
1495:Generated_Source\PSoC4/CapSense.c ****     CyDelayCycles(CapSense_GLITCH_ELIMINATION_CYCLES);
 1804              		.loc 1 1495 0
 1805 0128 0020     		movs	r0, #0
 1806 012a FFF7FEFF 		bl	CyDelayCycles
1496:Generated_Source\PSoC4/CapSense.c **** 
1497:Generated_Source\PSoC4/CapSense.c ****     /* `#START CapSense_PreScan_Debug` */
1498:Generated_Source\PSoC4/CapSense.c **** 
1499:Generated_Source\PSoC4/CapSense.c ****     /* `#END` */
1500:Generated_Source\PSoC4/CapSense.c **** 
1501:Generated_Source\PSoC4/CapSense.c **** #ifdef CapSense_PRE_SCAN_DEBUG_CALLBACK
1502:Generated_Source\PSoC4/CapSense.c ****     CapSense_PreScan_Debug_Callback();
1503:Generated_Source\PSoC4/CapSense.c **** #endif /* CapSense_PRE_SCAN_DEBUG_CALLBACK */
1504:Generated_Source\PSoC4/CapSense.c **** 
1505:Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_CNT_REG = counterResolution;
 1807              		.loc 1 1505 0
 1808 012e 0C4B     		ldr	r3, .L88+24
 1809 0130 FA69     		ldr	r2, [r7, #28]
 1810 0132 1A60     		str	r2, [r3]
1506:Generated_Source\PSoC4/CapSense.c ****     CyExitCriticalSection(interruptState);
 1811              		.loc 1 1506 0
 1812 0134 0F23     		movs	r3, #15
 1813 0136 FB18     		adds	r3, r7, r3
 1814 0138 1B78     		ldrb	r3, [r3]
 1815 013a 1800     		movs	r0, r3
 1816 013c FFF7FEFF 		bl	CyExitCriticalSection
1507:Generated_Source\PSoC4/CapSense.c **** }
 1817              		.loc 1 1507 0
 1818 0140 C046     		nop
 1819 0142 BD46     		mov	sp, r7
 1820 0144 09B0     		add	sp, sp, #36
 1821              		@ sp needed
 1822 0146 90BD     		pop	{r4, r7, pc}
 1823              	.L89:
 1824              		.align	2
 1825              	.L88:
 1826 0148 00000000 		.word	CapSense_widgetNumber
 1827 014c 00000000 		.word	CapSense_widgetResolution
 1828 0150 00000000 		.word	CapSense_scanSpeedTbl
 1829 0154 FFFFFEFF 		.word	-65537
 1830 0158 00000000 		.word	CapSense_sampleClkDividerVal
 1831 015c 00000000 		.word	CapSense_senseClkDividerVal
 1832 0160 0C002840 		.word	1076363276
 1833 0164 14002840 		.word	1076363284
 1834 0168 08002840 		.word	1076363272
 1835 016c 00FF80FF 		.word	-8323328
 1836 0170 00000000 		.word	CapSense_modulationIDAC
 1837 0174 00000000 		.word	CapSense_compensationIDAC
 1838 0178 04002840 		.word	1076363268
 1839 017c FF1FDFFF 		.word	-2154497
 1840 0180 20002000 		.word	2097184
 1841              		.cfi_endproc
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 60


 1842              	.LFE54:
 1843              		.size	CapSense_PreScan, .-CapSense_PreScan
 1844              		.section	.text.CapSense_PostScan,"ax",%progbits
 1845              		.align	2
 1846              		.global	CapSense_PostScan
 1847              		.code	16
 1848              		.thumb_func
 1849              		.type	CapSense_PostScan, %function
 1850              	CapSense_PostScan:
 1851              	.LFB55:
1508:Generated_Source\PSoC4/CapSense.c **** 
1509:Generated_Source\PSoC4/CapSense.c **** 
1510:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1511:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_PostScan
1512:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1513:Generated_Source\PSoC4/CapSense.c **** *
1514:Generated_Source\PSoC4/CapSense.c **** * Summary:
1515:Generated_Source\PSoC4/CapSense.c **** *  Stores the results of measurement in the CapSense_sensorRaw[] array,
1516:Generated_Source\PSoC4/CapSense.c **** *  sets the scanning sensor in the non-sampling state, turns off Idac(Current Source IDAC),
1517:Generated_Source\PSoC4/CapSense.c **** *  disconnects the IDAC(Sink mode), and applies Vref on AMUX.
1518:Generated_Source\PSoC4/CapSense.c **** *
1519:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1520:Generated_Source\PSoC4/CapSense.c **** *  sensor:  Sensor number.
1521:Generated_Source\PSoC4/CapSense.c **** *
1522:Generated_Source\PSoC4/CapSense.c **** * Return:
1523:Generated_Source\PSoC4/CapSense.c **** *  None
1524:Generated_Source\PSoC4/CapSense.c **** *
1525:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1526:Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1527:Generated_Source\PSoC4/CapSense.c **** *
1528:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1529:Generated_Source\PSoC4/CapSense.c **** *  None
1530:Generated_Source\PSoC4/CapSense.c **** *
1531:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1532:Generated_Source\PSoC4/CapSense.c **** void CapSense_PostScan(uint32 sensor)
1533:Generated_Source\PSoC4/CapSense.c **** {
 1852              		.loc 1 1533 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 24
 1855              		@ frame_needed = 1, uses_anonymous_args = 0
 1856 0000 80B5     		push	{r7, lr}
 1857              		.cfi_def_cfa_offset 8
 1858              		.cfi_offset 7, -8
 1859              		.cfi_offset 14, -4
 1860 0002 86B0     		sub	sp, sp, #24
 1861              		.cfi_def_cfa_offset 32
 1862 0004 00AF     		add	r7, sp, #0
 1863              		.cfi_def_cfa_register 7
 1864 0006 7860     		str	r0, [r7, #4]
1534:Generated_Source\PSoC4/CapSense.c ****     uint32 newRegValue;
1535:Generated_Source\PSoC4/CapSense.c **** #if ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1536:Generated_Source\PSoC4/CapSense.c ****      (0 != CapSense_IS_OVERSAMPLING_EN))
1537:Generated_Source\PSoC4/CapSense.c ****     uint32 oversamplingFactor;
1538:Generated_Source\PSoC4/CapSense.c ****     uint32 widget;
1539:Generated_Source\PSoC4/CapSense.c **** #endif /* ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1540:Generated_Source\PSoC4/CapSense.c ****            (0 != CapSense_IS_OVERSAMPLING_EN)) */
1541:Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 61


1542:Generated_Source\PSoC4/CapSense.c ****     /* `#START CapSense_PostScan_Debug` */
1543:Generated_Source\PSoC4/CapSense.c **** 
1544:Generated_Source\PSoC4/CapSense.c ****     /* `#END` */
1545:Generated_Source\PSoC4/CapSense.c **** 
1546:Generated_Source\PSoC4/CapSense.c **** #ifdef CapSense_POST_SCAN_DEBUG_CALLBACK
1547:Generated_Source\PSoC4/CapSense.c ****     CapSense_PostScan_Debug_Callback();
1548:Generated_Source\PSoC4/CapSense.c **** #endif /* CapSense_POST_SCAN_DEBUG_Callback */
1549:Generated_Source\PSoC4/CapSense.c **** 
1550:Generated_Source\PSoC4/CapSense.c ****     /* Read SlotResult from Raw Counter */
1551:Generated_Source\PSoC4/CapSense.c ****     CapSense_sensorRaw[sensor]  = (uint16)CapSense_CSD_CNT_REG;
 1865              		.loc 1 1551 0
 1866 0008 254B     		ldr	r3, .L92
 1867 000a 1B68     		ldr	r3, [r3]
 1868 000c 99B2     		uxth	r1, r3
 1869 000e 254B     		ldr	r3, .L92+4
 1870 0010 7A68     		ldr	r2, [r7, #4]
 1871 0012 5200     		lsls	r2, r2, #1
 1872 0014 D152     		strh	r1, [r2, r3]
1552:Generated_Source\PSoC4/CapSense.c **** 
1553:Generated_Source\PSoC4/CapSense.c **** #if ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1554:Generated_Source\PSoC4/CapSense.c ****      (0 != CapSense_IS_OVERSAMPLING_EN))
1555:Generated_Source\PSoC4/CapSense.c ****     widget = CapSense_widgetNumber[sensor];
 1873              		.loc 1 1555 0
 1874 0016 244A     		ldr	r2, .L92+8
 1875 0018 7B68     		ldr	r3, [r7, #4]
 1876 001a D318     		adds	r3, r2, r3
 1877 001c 1B78     		ldrb	r3, [r3]
 1878 001e 7B61     		str	r3, [r7, #20]
1556:Generated_Source\PSoC4/CapSense.c ****     if(CapSense_widgetResolution[widget] < CapSense_RESOLUTION_16_BITS)
 1879              		.loc 1 1556 0
 1880 0020 224B     		ldr	r3, .L92+12
 1881 0022 7A69     		ldr	r2, [r7, #20]
 1882 0024 9200     		lsls	r2, r2, #2
 1883 0026 D358     		ldr	r3, [r2, r3]
 1884 0028 214A     		ldr	r2, .L92+16
 1885 002a 9342     		cmp	r3, r2
 1886 002c 14D8     		bhi	.L91
1557:Generated_Source\PSoC4/CapSense.c ****     {
1558:Generated_Source\PSoC4/CapSense.c ****         oversamplingFactor = CapSense_GetBitValue(CapSense_scanSpeedTbl, sensor);
 1887              		.loc 1 1558 0
 1888 002e 7A68     		ldr	r2, [r7, #4]
 1889 0030 204B     		ldr	r3, .L92+20
 1890 0032 1100     		movs	r1, r2
 1891 0034 1800     		movs	r0, r3
 1892 0036 FFF7FEFF 		bl	CapSense_GetBitValue
 1893 003a 0300     		movs	r3, r0
 1894 003c 3B61     		str	r3, [r7, #16]
1559:Generated_Source\PSoC4/CapSense.c ****         CapSense_sensorRaw[sensor] >>= oversamplingFactor;
 1895              		.loc 1 1559 0
 1896 003e 194B     		ldr	r3, .L92+4
 1897 0040 7A68     		ldr	r2, [r7, #4]
 1898 0042 5200     		lsls	r2, r2, #1
 1899 0044 D35A     		ldrh	r3, [r2, r3]
 1900 0046 1A00     		movs	r2, r3
 1901 0048 3B69     		ldr	r3, [r7, #16]
 1902 004a 1A41     		asrs	r2, r2, r3
 1903 004c 1300     		movs	r3, r2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 62


 1904 004e 99B2     		uxth	r1, r3
 1905 0050 144B     		ldr	r3, .L92+4
 1906 0052 7A68     		ldr	r2, [r7, #4]
 1907 0054 5200     		lsls	r2, r2, #1
 1908 0056 D152     		strh	r1, [r2, r3]
 1909              	.L91:
1560:Generated_Source\PSoC4/CapSense.c ****     }
1561:Generated_Source\PSoC4/CapSense.c **** #endif /* ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) &&\
1562:Generated_Source\PSoC4/CapSense.c ****            (0 != CapSense_IS_OVERSAMPLING_EN)) */
1563:Generated_Source\PSoC4/CapSense.c **** 
1564:Generated_Source\PSoC4/CapSense.c ****     /* Disable Sensor */
1565:Generated_Source\PSoC4/CapSense.c ****     CapSense_DisableScanSlot(sensor);
 1910              		.loc 1 1565 0
 1911 0058 7B68     		ldr	r3, [r7, #4]
 1912 005a 1800     		movs	r0, r3
 1913 005c FFF7FEFF 		bl	CapSense_DisableSensor
1566:Generated_Source\PSoC4/CapSense.c **** 
1567:Generated_Source\PSoC4/CapSense.c ****     CyIntDisable(CapSense_ISR_NUMBER);
 1914              		.loc 1 1567 0
 1915 0060 1020     		movs	r0, #16
 1916 0062 FFF7FEFF 		bl	CyIntDisable
1568:Generated_Source\PSoC4/CapSense.c **** 
1569:Generated_Source\PSoC4/CapSense.c **** #if(CapSense_CMOD_PREGARGE_OPTION == CapSense__CAPPRIOBUF)
1570:Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CMOD_CONNECTION_REG;
1571:Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_CSD_CMOD_CONNECTION_MASK);
1572:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= CapSense_CSD_CMOD_TO_AMUXBUS_B;
1573:Generated_Source\PSoC4/CapSense.c ****     CapSense_CMOD_CONNECTION_REG = newRegValue;
1574:Generated_Source\PSoC4/CapSense.c **** 
1575:Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CMOD_PORT_PC_REG;
1576:Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_CSD_CMOD_PC_MASK);
1577:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= CapSense_CMOD_PC_STRONG_MODE;
1578:Generated_Source\PSoC4/CapSense.c ****     CapSense_CMOD_PORT_PC_REG = newRegValue;
1579:Generated_Source\PSoC4/CapSense.c **** 
1580:Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CMOD_PORT_DR_REG;
1581:Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_CMOD_DR_MASK);
1582:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= CapSense_CMOD_DR_CONFIG;
1583:Generated_Source\PSoC4/CapSense.c ****     CapSense_CMOD_PORT_DR_REG = newRegValue;
1584:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_CMOD_PREGARGE_OPTION == CapSense__CAPPRIOBUF) */
1585:Generated_Source\PSoC4/CapSense.c **** 
1586:Generated_Source\PSoC4/CapSense.c ****     /* Connect Vref Buffer to AMUX bus  */
1587:Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CSD_CFG_REG;
 1917              		.loc 1 1587 0
 1918 0066 144B     		ldr	r3, .L92+24
 1919 0068 1B68     		ldr	r3, [r3]
 1920 006a FB60     		str	r3, [r7, #12]
1588:Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_PRECHARGE_CONFIG_MASK);
 1921              		.loc 1 1588 0
 1922 006c FB68     		ldr	r3, [r7, #12]
 1923 006e 134A     		ldr	r2, .L92+28
 1924 0070 1340     		ands	r3, r2
 1925 0072 FB60     		str	r3, [r7, #12]
1589:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= CapSense_CMOD_PRECHARGE_CONFIG;
 1926              		.loc 1 1589 0
 1927 0074 FB68     		ldr	r3, [r7, #12]
 1928 0076 A022     		movs	r2, #160
 1929 0078 1202     		lsls	r2, r2, #8
 1930 007a 1343     		orrs	r3, r2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 63


 1931 007c FB60     		str	r3, [r7, #12]
1590:Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_CFG_REG = newRegValue;
 1932              		.loc 1 1590 0
 1933 007e 0E4B     		ldr	r3, .L92+24
 1934 0080 FA68     		ldr	r2, [r7, #12]
 1935 0082 1A60     		str	r2, [r3]
1591:Generated_Source\PSoC4/CapSense.c **** 
1592:Generated_Source\PSoC4/CapSense.c ****     /* Set Idac Value = 0 */
1593:Generated_Source\PSoC4/CapSense.c **** #if (CapSense_IDAC_CNT == 1u)
1594:Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_IDAC_REG &= ~(CapSense_CSD_IDAC1_DATA_MASK);
1595:Generated_Source\PSoC4/CapSense.c **** #else
1596:Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_IDAC_REG &= ~(CapSense_CSD_IDAC1_DATA_MASK | CapSense_CSD_IDAC2_DATA_MASK);
 1936              		.loc 1 1596 0
 1937 0084 0E4B     		ldr	r3, .L92+32
 1938 0086 0E4A     		ldr	r2, .L92+32
 1939 0088 1268     		ldr	r2, [r2]
 1940 008a 0E49     		ldr	r1, .L92+36
 1941 008c 0A40     		ands	r2, r1
 1942 008e 1A60     		str	r2, [r3]
1597:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_IDAC_CNT == 1u) */
1598:Generated_Source\PSoC4/CapSense.c **** 
1599:Generated_Source\PSoC4/CapSense.c ****     CyIntEnable(CapSense_ISR_NUMBER);
 1943              		.loc 1 1599 0
 1944 0090 1020     		movs	r0, #16
 1945 0092 FFF7FEFF 		bl	CyIntEnable
1600:Generated_Source\PSoC4/CapSense.c **** }
 1946              		.loc 1 1600 0
 1947 0096 C046     		nop
 1948 0098 BD46     		mov	sp, r7
 1949 009a 06B0     		add	sp, sp, #24
 1950              		@ sp needed
 1951 009c 80BD     		pop	{r7, pc}
 1952              	.L93:
 1953 009e C046     		.align	2
 1954              	.L92:
 1955 00a0 0C002840 		.word	1076363276
 1956 00a4 00000000 		.word	CapSense_sensorRaw
 1957 00a8 00000000 		.word	CapSense_widgetNumber
 1958 00ac 00000000 		.word	CapSense_widgetResolution
 1959 00b0 FFFFFEFF 		.word	-65537
 1960 00b4 00000000 		.word	CapSense_scanSpeedTbl
 1961 00b8 04002840 		.word	1076363268
 1962 00bc FF1FDFFF 		.word	-2154497
 1963 00c0 08002840 		.word	1076363272
 1964 00c4 00FF80FF 		.word	-8323328
 1965              		.cfi_endproc
 1966              	.LFE55:
 1967              		.size	CapSense_PostScan, .-CapSense_PostScan
 1968              		.section	.text.CapSense_EnableShieldElectrode,"ax",%progbits
 1969              		.align	2
 1970              		.global	CapSense_EnableShieldElectrode
 1971              		.code	16
 1972              		.thumb_func
 1973              		.type	CapSense_EnableShieldElectrode, %function
 1974              	CapSense_EnableShieldElectrode:
 1975              	.LFB56:
1601:Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 64


1602:Generated_Source\PSoC4/CapSense.c **** 
1603:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1604:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_EnableShieldElectrode
1605:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1606:Generated_Source\PSoC4/CapSense.c **** *
1607:Generated_Source\PSoC4/CapSense.c **** * Summary:
1608:Generated_Source\PSoC4/CapSense.c **** *  This API enables or disables the shield electrode on a specified port pin.
1609:Generated_Source\PSoC4/CapSense.c **** *
1610:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1611:Generated_Source\PSoC4/CapSense.c **** *  portNumber: contains the shield electrode port number (0, 1, 2).
1612:Generated_Source\PSoC4/CapSense.c **** *  pinNumber: contains the shield electrode pin number (0, 1, 2, ... , 7).
1613:Generated_Source\PSoC4/CapSense.c **** *
1614:Generated_Source\PSoC4/CapSense.c **** * Return:
1615:Generated_Source\PSoC4/CapSense.c **** *  None
1616:Generated_Source\PSoC4/CapSense.c **** *
1617:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1618:Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtCfgTbl[] - Contains pointers to the port config registers for each port.
1619:Generated_Source\PSoC4/CapSense.c **** *  CapSense_prtSelTbl[] - Contains pointers to the HSIOM registers for each port.
1620:Generated_Source\PSoC4/CapSense.c **** *
1621:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1622:Generated_Source\PSoC4/CapSense.c **** *  None
1623:Generated_Source\PSoC4/CapSense.c **** *
1624:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1625:Generated_Source\PSoC4/CapSense.c **** void CapSense_EnableShieldElectrode(uint32 pinNumber, uint32 portNumber)
1626:Generated_Source\PSoC4/CapSense.c **** {
 1976              		.loc 1 1626 0
 1977              		.cfi_startproc
 1978              		@ args = 0, pretend = 0, frame = 16
 1979              		@ frame_needed = 1, uses_anonymous_args = 0
 1980 0000 80B5     		push	{r7, lr}
 1981              		.cfi_def_cfa_offset 8
 1982              		.cfi_offset 7, -8
 1983              		.cfi_offset 14, -4
 1984 0002 84B0     		sub	sp, sp, #16
 1985              		.cfi_def_cfa_offset 24
 1986 0004 00AF     		add	r7, sp, #0
 1987              		.cfi_def_cfa_register 7
 1988 0006 7860     		str	r0, [r7, #4]
 1989 0008 3960     		str	r1, [r7]
1627:Generated_Source\PSoC4/CapSense.c ****     uint32 newRegValue;
1628:Generated_Source\PSoC4/CapSense.c **** 
1629:Generated_Source\PSoC4/CapSense.c ****     *CapSense_prtCfgTbl[portNumber] &= ~(CapSense_CSD_PIN_MODE_MASK << (pinNumber * CapSense_PC_PIN
 1990              		.loc 1 1629 0
 1991 000a 1A4B     		ldr	r3, .L95
 1992 000c 3A68     		ldr	r2, [r7]
 1993 000e 9200     		lsls	r2, r2, #2
 1994 0010 D258     		ldr	r2, [r2, r3]
 1995 0012 184B     		ldr	r3, .L95
 1996 0014 3968     		ldr	r1, [r7]
 1997 0016 8900     		lsls	r1, r1, #2
 1998 0018 CB58     		ldr	r3, [r1, r3]
 1999 001a 1868     		ldr	r0, [r3]
 2000 001c 7968     		ldr	r1, [r7, #4]
 2001 001e 0B00     		movs	r3, r1
 2002 0020 5B00     		lsls	r3, r3, #1
 2003 0022 5B18     		adds	r3, r3, r1
 2004 0024 0721     		movs	r1, #7
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 65


 2005 0026 9940     		lsls	r1, r1, r3
 2006 0028 0B00     		movs	r3, r1
 2007 002a DB43     		mvns	r3, r3
 2008 002c 0340     		ands	r3, r0
 2009 002e 1360     		str	r3, [r2]
1630:Generated_Source\PSoC4/CapSense.c ****     newRegValue = *CapSense_prtSelTbl[portNumber];
 2010              		.loc 1 1630 0
 2011 0030 114B     		ldr	r3, .L95+4
 2012 0032 3A68     		ldr	r2, [r7]
 2013 0034 9200     		lsls	r2, r2, #2
 2014 0036 D358     		ldr	r3, [r2, r3]
 2015 0038 1B68     		ldr	r3, [r3]
 2016 003a FB60     		str	r3, [r7, #12]
1631:Generated_Source\PSoC4/CapSense.c ****     newRegValue &= ~(CapSense_CSD_HSIOM_MASK << (pinNumber * CapSense_HSIOM_PIN_CFG_SIZE));
 2017              		.loc 1 1631 0
 2018 003c 7B68     		ldr	r3, [r7, #4]
 2019 003e 9B00     		lsls	r3, r3, #2
 2020 0040 0F22     		movs	r2, #15
 2021 0042 9A40     		lsls	r2, r2, r3
 2022 0044 1300     		movs	r3, r2
 2023 0046 DA43     		mvns	r2, r3
 2024 0048 FB68     		ldr	r3, [r7, #12]
 2025 004a 1340     		ands	r3, r2
 2026 004c FB60     		str	r3, [r7, #12]
1632:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= (CapSense_CSD_SHIELD_PORT_MODE << (pinNumber * CapSense_HSIOM_PIN_CFG_SIZE));
 2027              		.loc 1 1632 0
 2028 004e 7B68     		ldr	r3, [r7, #4]
 2029 0050 9B00     		lsls	r3, r3, #2
 2030 0052 0522     		movs	r2, #5
 2031 0054 9A40     		lsls	r2, r2, r3
 2032 0056 1300     		movs	r3, r2
 2033 0058 FA68     		ldr	r2, [r7, #12]
 2034 005a 1343     		orrs	r3, r2
 2035 005c FB60     		str	r3, [r7, #12]
1633:Generated_Source\PSoC4/CapSense.c ****     *CapSense_prtSelTbl[portNumber] = newRegValue;
 2036              		.loc 1 1633 0
 2037 005e 064B     		ldr	r3, .L95+4
 2038 0060 3A68     		ldr	r2, [r7]
 2039 0062 9200     		lsls	r2, r2, #2
 2040 0064 D358     		ldr	r3, [r2, r3]
 2041 0066 FA68     		ldr	r2, [r7, #12]
 2042 0068 1A60     		str	r2, [r3]
1634:Generated_Source\PSoC4/CapSense.c **** }
 2043              		.loc 1 1634 0
 2044 006a C046     		nop
 2045 006c BD46     		mov	sp, r7
 2046 006e 04B0     		add	sp, sp, #16
 2047              		@ sp needed
 2048 0070 80BD     		pop	{r7, pc}
 2049              	.L96:
 2050 0072 C046     		.align	2
 2051              	.L95:
 2052 0074 00000000 		.word	CapSense_prtCfgTbl
 2053 0078 00000000 		.word	CapSense_prtSelTbl
 2054              		.cfi_endproc
 2055              	.LFE56:
 2056              		.size	CapSense_EnableShieldElectrode, .-CapSense_EnableShieldElectrode
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 66


 2057              		.section	.text.CapSense_SetShieldDelay,"ax",%progbits
 2058              		.align	2
 2059              		.global	CapSense_SetShieldDelay
 2060              		.code	16
 2061              		.thumb_func
 2062              		.type	CapSense_SetShieldDelay, %function
 2063              	CapSense_SetShieldDelay:
 2064              	.LFB57:
1635:Generated_Source\PSoC4/CapSense.c **** 
1636:Generated_Source\PSoC4/CapSense.c **** 
1637:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1638:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_SetShieldDelay
1639:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1640:Generated_Source\PSoC4/CapSense.c **** *
1641:Generated_Source\PSoC4/CapSense.c **** * Summary:
1642:Generated_Source\PSoC4/CapSense.c **** *  This API sets a shield delay.
1643:Generated_Source\PSoC4/CapSense.c **** *
1644:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1645:Generated_Source\PSoC4/CapSense.c **** *  delay:  shield delay value:
1646:Generated_Source\PSoC4/CapSense.c **** *                               0 - no delay
1647:Generated_Source\PSoC4/CapSense.c **** *                               1 - 1 cycle delay
1648:Generated_Source\PSoC4/CapSense.c **** *                               2 - 2 cycles delay
1649:Generated_Source\PSoC4/CapSense.c **** *
1650:Generated_Source\PSoC4/CapSense.c **** * Return:
1651:Generated_Source\PSoC4/CapSense.c **** *  None
1652:Generated_Source\PSoC4/CapSense.c **** *
1653:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1654:Generated_Source\PSoC4/CapSense.c **** *  None
1655:Generated_Source\PSoC4/CapSense.c **** *
1656:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1657:Generated_Source\PSoC4/CapSense.c **** *  None
1658:Generated_Source\PSoC4/CapSense.c **** *
1659:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1660:Generated_Source\PSoC4/CapSense.c **** void CapSense_SetShieldDelay(uint32 delay)
1661:Generated_Source\PSoC4/CapSense.c **** {
 2065              		.loc 1 1661 0
 2066              		.cfi_startproc
 2067              		@ args = 0, pretend = 0, frame = 16
 2068              		@ frame_needed = 1, uses_anonymous_args = 0
 2069 0000 80B5     		push	{r7, lr}
 2070              		.cfi_def_cfa_offset 8
 2071              		.cfi_offset 7, -8
 2072              		.cfi_offset 14, -4
 2073 0002 84B0     		sub	sp, sp, #16
 2074              		.cfi_def_cfa_offset 24
 2075 0004 00AF     		add	r7, sp, #0
 2076              		.cfi_def_cfa_register 7
 2077 0006 7860     		str	r0, [r7, #4]
1662:Generated_Source\PSoC4/CapSense.c ****     uint32 newRegValue;
1663:Generated_Source\PSoC4/CapSense.c **** 
1664:Generated_Source\PSoC4/CapSense.c ****     delay &= 0x03u;
 2078              		.loc 1 1664 0
 2079 0008 7B68     		ldr	r3, [r7, #4]
 2080 000a 0322     		movs	r2, #3
 2081 000c 1340     		ands	r3, r2
 2082 000e 7B60     		str	r3, [r7, #4]
1665:Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 67


1666:Generated_Source\PSoC4/CapSense.c ****     newRegValue = CapSense_CSD_CFG_REG;
 2083              		.loc 1 1666 0
 2084 0010 074B     		ldr	r3, .L98
 2085 0012 1B68     		ldr	r3, [r3]
 2086 0014 FB60     		str	r3, [r7, #12]
1667:Generated_Source\PSoC4/CapSense.c ****     newRegValue &= (uint32)(~(uint32)CapSense_SHIELD_DELAY);
1668:Generated_Source\PSoC4/CapSense.c ****     newRegValue |= (delay << CapSense_CSD_CFG_SHIELD_DELAY_POS);
 2087              		.loc 1 1668 0
 2088 0016 7B68     		ldr	r3, [r7, #4]
 2089 0018 5B02     		lsls	r3, r3, #9
 2090 001a FA68     		ldr	r2, [r7, #12]
 2091 001c 1343     		orrs	r3, r2
 2092 001e FB60     		str	r3, [r7, #12]
1669:Generated_Source\PSoC4/CapSense.c ****     CapSense_CSD_CFG_REG = newRegValue;
 2093              		.loc 1 1669 0
 2094 0020 034B     		ldr	r3, .L98
 2095 0022 FA68     		ldr	r2, [r7, #12]
 2096 0024 1A60     		str	r2, [r3]
1670:Generated_Source\PSoC4/CapSense.c **** }
 2097              		.loc 1 1670 0
 2098 0026 C046     		nop
 2099 0028 BD46     		mov	sp, r7
 2100 002a 04B0     		add	sp, sp, #16
 2101              		@ sp needed
 2102 002c 80BD     		pop	{r7, pc}
 2103              	.L99:
 2104 002e C046     		.align	2
 2105              	.L98:
 2106 0030 04002840 		.word	1076363268
 2107              		.cfi_endproc
 2108              	.LFE57:
 2109              		.size	CapSense_SetShieldDelay, .-CapSense_SetShieldDelay
 2110              		.section	.text.CapSense_ReadCurrentScanningSensor,"ax",%progbits
 2111              		.align	2
 2112              		.global	CapSense_ReadCurrentScanningSensor
 2113              		.code	16
 2114              		.thumb_func
 2115              		.type	CapSense_ReadCurrentScanningSensor, %function
 2116              	CapSense_ReadCurrentScanningSensor:
 2117              	.LFB58:
1671:Generated_Source\PSoC4/CapSense.c **** 
1672:Generated_Source\PSoC4/CapSense.c **** 
1673:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1674:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_ReadCurrentScanningSensor
1675:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1676:Generated_Source\PSoC4/CapSense.c **** *
1677:Generated_Source\PSoC4/CapSense.c **** * Summary:
1678:Generated_Source\PSoC4/CapSense.c **** *  This API returns scanning sensor number when sensor scan is in progress.
1679:Generated_Source\PSoC4/CapSense.c **** *  When sensor scan is completed the API returns
1680:Generated_Source\PSoC4/CapSense.c **** *  $INSTANCE_NAME`_NOT_SENSOR (0xFFFFFFFF) (when no sensor is scanned).
1681:Generated_Source\PSoC4/CapSense.c **** *
1682:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1683:Generated_Source\PSoC4/CapSense.c **** *   None.
1684:Generated_Source\PSoC4/CapSense.c **** *
1685:Generated_Source\PSoC4/CapSense.c **** * Return:
1686:Generated_Source\PSoC4/CapSense.c **** *  Returns Sensor number if sensor is being scanned and
1687:Generated_Source\PSoC4/CapSense.c **** *  $INSTANCE_NAME`_NOT_SENSOR (0xFFFFFFFF) if scanning is complete.
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 68


1688:Generated_Source\PSoC4/CapSense.c **** *
1689:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1690:Generated_Source\PSoC4/CapSense.c **** *  CapSense_sensorIndex - the sensor number is being scanned.
1691:Generated_Source\PSoC4/CapSense.c **** *
1692:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1693:Generated_Source\PSoC4/CapSense.c **** *  None
1694:Generated_Source\PSoC4/CapSense.c **** *
1695:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1696:Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_ReadCurrentScanningSensor(void)
1697:Generated_Source\PSoC4/CapSense.c **** {
 2118              		.loc 1 1697 0
 2119              		.cfi_startproc
 2120              		@ args = 0, pretend = 0, frame = 0
 2121              		@ frame_needed = 1, uses_anonymous_args = 0
 2122 0000 80B5     		push	{r7, lr}
 2123              		.cfi_def_cfa_offset 8
 2124              		.cfi_offset 7, -8
 2125              		.cfi_offset 14, -4
 2126 0002 00AF     		add	r7, sp, #0
 2127              		.cfi_def_cfa_register 7
1698:Generated_Source\PSoC4/CapSense.c ****     return ((uint32)(( 0u != (CapSense_csdStatusVar & CapSense_SW_STS_BUSY)) ?
 2128              		.loc 1 1698 0
 2129 0004 074B     		ldr	r3, .L104
 2130 0006 1B78     		ldrb	r3, [r3]
 2131 0008 DBB2     		uxtb	r3, r3
 2132 000a 1A00     		movs	r2, r3
 2133 000c 0123     		movs	r3, #1
 2134 000e 1340     		ands	r3, r2
 2135 0010 03D0     		beq	.L101
 2136              		.loc 1 1698 0 is_stmt 0 discriminator 1
 2137 0012 054B     		ldr	r3, .L104+4
 2138 0014 1B78     		ldrb	r3, [r3]
 2139 0016 DBB2     		uxtb	r3, r3
 2140 0018 01E0     		b	.L103
 2141              	.L101:
 2142              		.loc 1 1698 0 discriminator 2
 2143 001a 0123     		movs	r3, #1
 2144 001c 5B42     		rsbs	r3, r3, #0
 2145              	.L103:
1699:Generated_Source\PSoC4/CapSense.c ****                      CapSense_sensorIndex : CapSense_NOT_SENSOR));
1700:Generated_Source\PSoC4/CapSense.c **** }
 2146              		.loc 1 1700 0 is_stmt 1 discriminator 5
 2147 001e 1800     		movs	r0, r3
 2148 0020 BD46     		mov	sp, r7
 2149              		@ sp needed
 2150 0022 80BD     		pop	{r7, pc}
 2151              	.L105:
 2152              		.align	2
 2153              	.L104:
 2154 0024 00000000 		.word	CapSense_csdStatusVar
 2155 0028 00000000 		.word	CapSense_sensorIndex
 2156              		.cfi_endproc
 2157              	.LFE58:
 2158              		.size	CapSense_ReadCurrentScanningSensor, .-CapSense_ReadCurrentScanningSensor
 2159              		.section	.text.CapSense_GetBitValue,"ax",%progbits
 2160              		.align	2
 2161              		.global	CapSense_GetBitValue
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 69


 2162              		.code	16
 2163              		.thumb_func
 2164              		.type	CapSense_GetBitValue, %function
 2165              	CapSense_GetBitValue:
 2166              	.LFB59:
1701:Generated_Source\PSoC4/CapSense.c **** 
1702:Generated_Source\PSoC4/CapSense.c **** 
1703:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1704:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_GetBitValue
1705:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1706:Generated_Source\PSoC4/CapSense.c **** *
1707:Generated_Source\PSoC4/CapSense.c **** * Summary:
1708:Generated_Source\PSoC4/CapSense.c **** *  The API returns a bit status of the bit in the table array which contains the masks.
1709:Generated_Source\PSoC4/CapSense.c **** *
1710:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1711:Generated_Source\PSoC4/CapSense.c **** *  table[] - array with bit masks.
1712:Generated_Source\PSoC4/CapSense.c **** *  position - position of bit in the table[] array.
1713:Generated_Source\PSoC4/CapSense.c **** *
1714:Generated_Source\PSoC4/CapSense.c **** * Return:
1715:Generated_Source\PSoC4/CapSense.c **** *  0 - bit is not set; 1 - bit is set.
1716:Generated_Source\PSoC4/CapSense.c **** *
1717:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1718:Generated_Source\PSoC4/CapSense.c **** *  None
1719:Generated_Source\PSoC4/CapSense.c **** *
1720:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1721:Generated_Source\PSoC4/CapSense.c **** *  None
1722:Generated_Source\PSoC4/CapSense.c **** *
1723:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1724:Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_GetBitValue(const uint8 table[], uint32 position)
1725:Generated_Source\PSoC4/CapSense.c **** {
 2167              		.loc 1 1725 0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 16
 2170              		@ frame_needed = 1, uses_anonymous_args = 0
 2171 0000 80B5     		push	{r7, lr}
 2172              		.cfi_def_cfa_offset 8
 2173              		.cfi_offset 7, -8
 2174              		.cfi_offset 14, -4
 2175 0002 84B0     		sub	sp, sp, #16
 2176              		.cfi_def_cfa_offset 24
 2177 0004 00AF     		add	r7, sp, #0
 2178              		.cfi_def_cfa_register 7
 2179 0006 7860     		str	r0, [r7, #4]
 2180 0008 3960     		str	r1, [r7]
1726:Generated_Source\PSoC4/CapSense.c ****     uint32 offset;
1727:Generated_Source\PSoC4/CapSense.c ****     uint8 enMask;
1728:Generated_Source\PSoC4/CapSense.c **** 
1729:Generated_Source\PSoC4/CapSense.c ****     /* position is divided by 8 to calculate the element of the
1730:Generated_Source\PSoC4/CapSense.c ****        table[] array that contains the enable bit
1731:Generated_Source\PSoC4/CapSense.c ****        for an appropriate sensor.
1732:Generated_Source\PSoC4/CapSense.c ****     */
1733:Generated_Source\PSoC4/CapSense.c ****     offset = (position >> 3u);
 2181              		.loc 1 1733 0
 2182 000a 3B68     		ldr	r3, [r7]
 2183 000c DB08     		lsrs	r3, r3, #3
 2184 000e FB60     		str	r3, [r7, #12]
1734:Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 70


1735:Generated_Source\PSoC4/CapSense.c ****     /* The enMask calculation for the appropriate sensor. Operation (position & 0x07u)
1736:Generated_Source\PSoC4/CapSense.c ****        intends to calculate the enable bit offset for the 8-bit element of the
1737:Generated_Source\PSoC4/CapSense.c ****        table[] array.
1738:Generated_Source\PSoC4/CapSense.c ****     */
1739:Generated_Source\PSoC4/CapSense.c ****     enMask = 0x01u << (position & 0x07u);
 2185              		.loc 1 1739 0
 2186 0010 3B68     		ldr	r3, [r7]
 2187 0012 0722     		movs	r2, #7
 2188 0014 1340     		ands	r3, r2
 2189 0016 0122     		movs	r2, #1
 2190 0018 9A40     		lsls	r2, r2, r3
 2191 001a 0B23     		movs	r3, #11
 2192 001c FB18     		adds	r3, r7, r3
 2193 001e 1A70     		strb	r2, [r3]
1740:Generated_Source\PSoC4/CapSense.c **** 
1741:Generated_Source\PSoC4/CapSense.c ****     return ((0u !=(table[offset] & enMask)) ? 1Lu : 0Lu);
 2194              		.loc 1 1741 0
 2195 0020 7A68     		ldr	r2, [r7, #4]
 2196 0022 FB68     		ldr	r3, [r7, #12]
 2197 0024 D318     		adds	r3, r2, r3
 2198 0026 1B78     		ldrb	r3, [r3]
 2199 0028 0B22     		movs	r2, #11
 2200 002a BA18     		adds	r2, r7, r2
 2201 002c 1278     		ldrb	r2, [r2]
 2202 002e 1340     		ands	r3, r2
 2203 0030 DBB2     		uxtb	r3, r3
 2204 0032 002B     		cmp	r3, #0
 2205 0034 01D0     		beq	.L107
 2206              		.loc 1 1741 0 is_stmt 0 discriminator 1
 2207 0036 0123     		movs	r3, #1
 2208 0038 00E0     		b	.L109
 2209              	.L107:
 2210              		.loc 1 1741 0 discriminator 2
 2211 003a 0023     		movs	r3, #0
 2212              	.L109:
1742:Generated_Source\PSoC4/CapSense.c **** }
 2213              		.loc 1 1742 0 is_stmt 1 discriminator 5
 2214 003c 1800     		movs	r0, r3
 2215 003e BD46     		mov	sp, r7
 2216 0040 04B0     		add	sp, sp, #16
 2217              		@ sp needed
 2218 0042 80BD     		pop	{r7, pc}
 2219              		.cfi_endproc
 2220              	.LFE59:
 2221              		.size	CapSense_GetBitValue, .-CapSense_GetBitValue
 2222              		.section	.text.CapSense_SetBitValue,"ax",%progbits
 2223              		.align	2
 2224              		.global	CapSense_SetBitValue
 2225              		.code	16
 2226              		.thumb_func
 2227              		.type	CapSense_SetBitValue, %function
 2228              	CapSense_SetBitValue:
 2229              	.LFB60:
1743:Generated_Source\PSoC4/CapSense.c **** 
1744:Generated_Source\PSoC4/CapSense.c **** 
1745:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1746:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_SetBitValue
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 71


1747:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1748:Generated_Source\PSoC4/CapSense.c **** *
1749:Generated_Source\PSoC4/CapSense.c **** * Summary:
1750:Generated_Source\PSoC4/CapSense.c **** *  The API sets a bit status of the bit in the table array which contains masks.
1751:Generated_Source\PSoC4/CapSense.c **** *
1752:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1753:Generated_Source\PSoC4/CapSense.c **** *  table[] - array with bit masks.
1754:Generated_Source\PSoC4/CapSense.c **** *  position - position of bit in the table[] array.
1755:Generated_Source\PSoC4/CapSense.c **** *  value: 0 - bit is not set; 1 - bit is set.
1756:Generated_Source\PSoC4/CapSense.c **** *
1757:Generated_Source\PSoC4/CapSense.c **** * Return:
1758:Generated_Source\PSoC4/CapSense.c **** *  None
1759:Generated_Source\PSoC4/CapSense.c **** *
1760:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1761:Generated_Source\PSoC4/CapSense.c **** *  None
1762:Generated_Source\PSoC4/CapSense.c **** *
1763:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1764:Generated_Source\PSoC4/CapSense.c **** *  None
1765:Generated_Source\PSoC4/CapSense.c **** *
1766:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1767:Generated_Source\PSoC4/CapSense.c **** void CapSense_SetBitValue(uint8 table[], uint32 position, uint32 value)
1768:Generated_Source\PSoC4/CapSense.c **** {
 2230              		.loc 1 1768 0
 2231              		.cfi_startproc
 2232              		@ args = 0, pretend = 0, frame = 24
 2233              		@ frame_needed = 1, uses_anonymous_args = 0
 2234 0000 80B5     		push	{r7, lr}
 2235              		.cfi_def_cfa_offset 8
 2236              		.cfi_offset 7, -8
 2237              		.cfi_offset 14, -4
 2238 0002 86B0     		sub	sp, sp, #24
 2239              		.cfi_def_cfa_offset 32
 2240 0004 00AF     		add	r7, sp, #0
 2241              		.cfi_def_cfa_register 7
 2242 0006 F860     		str	r0, [r7, #12]
 2243 0008 B960     		str	r1, [r7, #8]
 2244 000a 7A60     		str	r2, [r7, #4]
1769:Generated_Source\PSoC4/CapSense.c ****     uint32 offset;
1770:Generated_Source\PSoC4/CapSense.c ****     uint8 enMask;
1771:Generated_Source\PSoC4/CapSense.c **** 
1772:Generated_Source\PSoC4/CapSense.c ****     /* position is divided by 8 to calculate the element of the
1773:Generated_Source\PSoC4/CapSense.c ****        table[] array that contains the enable bit
1774:Generated_Source\PSoC4/CapSense.c ****        for an appropriate sensor.
1775:Generated_Source\PSoC4/CapSense.c ****     */
1776:Generated_Source\PSoC4/CapSense.c ****     offset = (position >> 3u);
 2245              		.loc 1 1776 0
 2246 000c BB68     		ldr	r3, [r7, #8]
 2247 000e DB08     		lsrs	r3, r3, #3
 2248 0010 7B61     		str	r3, [r7, #20]
1777:Generated_Source\PSoC4/CapSense.c **** 
1778:Generated_Source\PSoC4/CapSense.c ****     /* The enMask calculation for the appropriate sensor. Operation (position & 0x07u)
1779:Generated_Source\PSoC4/CapSense.c ****        intends to calculate the enable bit offset for the 8-bit element of the
1780:Generated_Source\PSoC4/CapSense.c ****        table[] array.
1781:Generated_Source\PSoC4/CapSense.c ****     */
1782:Generated_Source\PSoC4/CapSense.c ****     enMask = 0x01u << (position & 0x07u);
 2249              		.loc 1 1782 0
 2250 0012 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 72


 2251 0014 0722     		movs	r2, #7
 2252 0016 1340     		ands	r3, r2
 2253 0018 0122     		movs	r2, #1
 2254 001a 9A40     		lsls	r2, r2, r3
 2255 001c 1323     		movs	r3, #19
 2256 001e FB18     		adds	r3, r7, r3
 2257 0020 1A70     		strb	r2, [r3]
1783:Generated_Source\PSoC4/CapSense.c **** 
1784:Generated_Source\PSoC4/CapSense.c ****     if(0u != value)
 2258              		.loc 1 1784 0
 2259 0022 7B68     		ldr	r3, [r7, #4]
 2260 0024 002B     		cmp	r3, #0
 2261 0026 0DD0     		beq	.L111
1785:Generated_Source\PSoC4/CapSense.c ****     {
1786:Generated_Source\PSoC4/CapSense.c ****         table[offset] |= enMask;
 2262              		.loc 1 1786 0
 2263 0028 FA68     		ldr	r2, [r7, #12]
 2264 002a 7B69     		ldr	r3, [r7, #20]
 2265 002c D318     		adds	r3, r2, r3
 2266 002e F968     		ldr	r1, [r7, #12]
 2267 0030 7A69     		ldr	r2, [r7, #20]
 2268 0032 8A18     		adds	r2, r1, r2
 2269 0034 1178     		ldrb	r1, [r2]
 2270 0036 1322     		movs	r2, #19
 2271 0038 BA18     		adds	r2, r7, r2
 2272 003a 1278     		ldrb	r2, [r2]
 2273 003c 0A43     		orrs	r2, r1
 2274 003e D2B2     		uxtb	r2, r2
 2275 0040 1A70     		strb	r2, [r3]
1787:Generated_Source\PSoC4/CapSense.c ****     }
1788:Generated_Source\PSoC4/CapSense.c ****     else
1789:Generated_Source\PSoC4/CapSense.c ****     {
1790:Generated_Source\PSoC4/CapSense.c ****         table[offset] &= (uint8)~(enMask);
1791:Generated_Source\PSoC4/CapSense.c ****     }
1792:Generated_Source\PSoC4/CapSense.c **** }
 2276              		.loc 1 1792 0
 2277 0042 0EE0     		b	.L113
 2278              	.L111:
1790:Generated_Source\PSoC4/CapSense.c ****     }
 2279              		.loc 1 1790 0
 2280 0044 FA68     		ldr	r2, [r7, #12]
 2281 0046 7B69     		ldr	r3, [r7, #20]
 2282 0048 D318     		adds	r3, r2, r3
 2283 004a F968     		ldr	r1, [r7, #12]
 2284 004c 7A69     		ldr	r2, [r7, #20]
 2285 004e 8A18     		adds	r2, r1, r2
 2286 0050 1278     		ldrb	r2, [r2]
 2287 0052 1321     		movs	r1, #19
 2288 0054 7918     		adds	r1, r7, r1
 2289 0056 0978     		ldrb	r1, [r1]
 2290 0058 C943     		mvns	r1, r1
 2291 005a C9B2     		uxtb	r1, r1
 2292 005c 0A40     		ands	r2, r1
 2293 005e D2B2     		uxtb	r2, r2
 2294 0060 1A70     		strb	r2, [r3]
 2295              	.L113:
 2296              		.loc 1 1792 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 73


 2297 0062 C046     		nop
 2298 0064 BD46     		mov	sp, r7
 2299 0066 06B0     		add	sp, sp, #24
 2300              		@ sp needed
 2301 0068 80BD     		pop	{r7, pc}
 2302              		.cfi_endproc
 2303              	.LFE60:
 2304              		.size	CapSense_SetBitValue, .-CapSense_SetBitValue
 2305 006a C046     		.section	.text.CapSense_GetSenseClkDivider,"ax",%progbits
 2306              		.align	2
 2307              		.global	CapSense_GetSenseClkDivider
 2308              		.code	16
 2309              		.thumb_func
 2310              		.type	CapSense_GetSenseClkDivider, %function
 2311              	CapSense_GetSenseClkDivider:
 2312              	.LFB61:
1793:Generated_Source\PSoC4/CapSense.c **** 
1794:Generated_Source\PSoC4/CapSense.c **** 
1795:Generated_Source\PSoC4/CapSense.c **** 
1796:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1797:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_GetSenseClkDivider
1798:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1799:Generated_Source\PSoC4/CapSense.c **** *
1800:Generated_Source\PSoC4/CapSense.c **** * Summary:
1801:Generated_Source\PSoC4/CapSense.c **** *  This API returns a value of the sense clock divider for the  sensor.
1802:Generated_Source\PSoC4/CapSense.c **** *
1803:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1804:Generated_Source\PSoC4/CapSense.c **** *  sensor: sensor index. The index value can be
1805:Generated_Source\PSoC4/CapSense.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
1806:Generated_Source\PSoC4/CapSense.c **** *
1807:Generated_Source\PSoC4/CapSense.c **** * Return:
1808:Generated_Source\PSoC4/CapSense.c **** *  This API returns the sense clock divider of the sensor.
1809:Generated_Source\PSoC4/CapSense.c **** *
1810:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1811:Generated_Source\PSoC4/CapSense.c **** *  CapSense_senseClkDividerVal[] - stores the sense clock divider values.
1812:Generated_Source\PSoC4/CapSense.c **** *
1813:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1814:Generated_Source\PSoC4/CapSense.c **** *  None
1815:Generated_Source\PSoC4/CapSense.c **** *
1816:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1817:Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_GetSenseClkDivider(uint32 sensor)
1818:Generated_Source\PSoC4/CapSense.c **** {
 2313              		.loc 1 1818 0
 2314              		.cfi_startproc
 2315              		@ args = 0, pretend = 0, frame = 8
 2316              		@ frame_needed = 1, uses_anonymous_args = 0
 2317 0000 80B5     		push	{r7, lr}
 2318              		.cfi_def_cfa_offset 8
 2319              		.cfi_offset 7, -8
 2320              		.cfi_offset 14, -4
 2321 0002 82B0     		sub	sp, sp, #8
 2322              		.cfi_def_cfa_offset 16
 2323 0004 00AF     		add	r7, sp, #0
 2324              		.cfi_def_cfa_register 7
 2325 0006 7860     		str	r0, [r7, #4]
1819:Generated_Source\PSoC4/CapSense.c ****     #if(0u != CapSense_MULTIPLE_FREQUENCY_SET)
1820:Generated_Source\PSoC4/CapSense.c ****         return((uint32)CapSense_senseClkDividerVal[sensor]);
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 74


 2326              		.loc 1 1820 0
 2327 0008 034A     		ldr	r2, .L116
 2328 000a 7B68     		ldr	r3, [r7, #4]
 2329 000c D318     		adds	r3, r2, r3
 2330 000e 1B78     		ldrb	r3, [r3]
1821:Generated_Source\PSoC4/CapSense.c ****     #else
1822:Generated_Source\PSoC4/CapSense.c ****         return((uint32)CapSense_senseClkDividerVal);
1823:Generated_Source\PSoC4/CapSense.c ****     #endif /* (0u != CapSense_MULTIPLE_FREQUENCY_SET) */
1824:Generated_Source\PSoC4/CapSense.c **** }
 2331              		.loc 1 1824 0
 2332 0010 1800     		movs	r0, r3
 2333 0012 BD46     		mov	sp, r7
 2334 0014 02B0     		add	sp, sp, #8
 2335              		@ sp needed
 2336 0016 80BD     		pop	{r7, pc}
 2337              	.L117:
 2338              		.align	2
 2339              	.L116:
 2340 0018 00000000 		.word	CapSense_senseClkDividerVal
 2341              		.cfi_endproc
 2342              	.LFE61:
 2343              		.size	CapSense_GetSenseClkDivider, .-CapSense_GetSenseClkDivider
 2344              		.section	.text.CapSense_SetSenseClkDivider,"ax",%progbits
 2345              		.align	2
 2346              		.global	CapSense_SetSenseClkDivider
 2347              		.code	16
 2348              		.thumb_func
 2349              		.type	CapSense_SetSenseClkDivider, %function
 2350              	CapSense_SetSenseClkDivider:
 2351              	.LFB62:
1825:Generated_Source\PSoC4/CapSense.c **** 
1826:Generated_Source\PSoC4/CapSense.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
1827:Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
1828:Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_SetSenseClkDivider
1829:Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
1830:Generated_Source\PSoC4/CapSense.c ****     *
1831:Generated_Source\PSoC4/CapSense.c ****     * Summary:
1832:Generated_Source\PSoC4/CapSense.c ****     *  This API sets a value of the sense clock divider for the  sensor.
1833:Generated_Source\PSoC4/CapSense.c ****     *
1834:Generated_Source\PSoC4/CapSense.c ****     * Parameters:
1835:Generated_Source\PSoC4/CapSense.c ****     *  sensor:  Sensor index.
1836:Generated_Source\PSoC4/CapSense.c ****     *  senseClk: represents the sense clock value.
1837:Generated_Source\PSoC4/CapSense.c ****     *
1838:Generated_Source\PSoC4/CapSense.c ****     * Return:
1839:Generated_Source\PSoC4/CapSense.c ****     *  None.
1840:Generated_Source\PSoC4/CapSense.c ****     *
1841:Generated_Source\PSoC4/CapSense.c ****     * Global Variables:
1842:Generated_Source\PSoC4/CapSense.c ****     *  CapSense_senseClkDividerVal[] - stores the sense clock divider values.
1843:Generated_Source\PSoC4/CapSense.c ****     *
1844:Generated_Source\PSoC4/CapSense.c ****     * Side Effects:
1845:Generated_Source\PSoC4/CapSense.c ****     *  None
1846:Generated_Source\PSoC4/CapSense.c ****     *
1847:Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
1848:Generated_Source\PSoC4/CapSense.c ****     void CapSense_SetSenseClkDivider(uint32 sensor, uint32 senseClk)
1849:Generated_Source\PSoC4/CapSense.c ****     {
 2352              		.loc 1 1849 0
 2353              		.cfi_startproc
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 75


 2354              		@ args = 0, pretend = 0, frame = 8
 2355              		@ frame_needed = 1, uses_anonymous_args = 0
 2356 0000 80B5     		push	{r7, lr}
 2357              		.cfi_def_cfa_offset 8
 2358              		.cfi_offset 7, -8
 2359              		.cfi_offset 14, -4
 2360 0002 82B0     		sub	sp, sp, #8
 2361              		.cfi_def_cfa_offset 16
 2362 0004 00AF     		add	r7, sp, #0
 2363              		.cfi_def_cfa_register 7
 2364 0006 7860     		str	r0, [r7, #4]
 2365 0008 3960     		str	r1, [r7]
1850:Generated_Source\PSoC4/CapSense.c ****         #if(0u != CapSense_MULTIPLE_FREQUENCY_SET)
1851:Generated_Source\PSoC4/CapSense.c ****             CapSense_senseClkDividerVal[sensor] = (uint8)senseClk;
 2366              		.loc 1 1851 0
 2367 000a 3B68     		ldr	r3, [r7]
 2368 000c D9B2     		uxtb	r1, r3
 2369 000e 044A     		ldr	r2, .L119
 2370 0010 7B68     		ldr	r3, [r7, #4]
 2371 0012 D318     		adds	r3, r2, r3
 2372 0014 0A1C     		adds	r2, r1, #0
 2373 0016 1A70     		strb	r2, [r3]
1852:Generated_Source\PSoC4/CapSense.c ****         #else
1853:Generated_Source\PSoC4/CapSense.c ****             CapSense_senseClkDividerVal = (uint8)senseClk;
1854:Generated_Source\PSoC4/CapSense.c ****         #endif /* (0u != CapSense_MULTIPLE_FREQUENCY_SET) */
1855:Generated_Source\PSoC4/CapSense.c ****     }
 2374              		.loc 1 1855 0
 2375 0018 C046     		nop
 2376 001a BD46     		mov	sp, r7
 2377 001c 02B0     		add	sp, sp, #8
 2378              		@ sp needed
 2379 001e 80BD     		pop	{r7, pc}
 2380              	.L120:
 2381              		.align	2
 2382              	.L119:
 2383 0020 00000000 		.word	CapSense_senseClkDividerVal
 2384              		.cfi_endproc
 2385              	.LFE62:
 2386              		.size	CapSense_SetSenseClkDivider, .-CapSense_SetSenseClkDivider
 2387              		.section	.text.CapSense_GetModulatorClkDivider,"ax",%progbits
 2388              		.align	2
 2389              		.global	CapSense_GetModulatorClkDivider
 2390              		.code	16
 2391              		.thumb_func
 2392              		.type	CapSense_GetModulatorClkDivider, %function
 2393              	CapSense_GetModulatorClkDivider:
 2394              	.LFB63:
1856:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1857:Generated_Source\PSoC4/CapSense.c **** 
1858:Generated_Source\PSoC4/CapSense.c **** 
1859:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1860:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_GetModulatorClkDivider
1861:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1862:Generated_Source\PSoC4/CapSense.c **** *
1863:Generated_Source\PSoC4/CapSense.c **** * Summary:
1864:Generated_Source\PSoC4/CapSense.c **** *  This API returns a value of the modulator sample clock divider for the  sensor.
1865:Generated_Source\PSoC4/CapSense.c **** *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 76


1866:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1867:Generated_Source\PSoC4/CapSense.c **** *  sensor: sensor index. The value of index can be
1868:Generated_Source\PSoC4/CapSense.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
1869:Generated_Source\PSoC4/CapSense.c **** *
1870:Generated_Source\PSoC4/CapSense.c **** * Return:
1871:Generated_Source\PSoC4/CapSense.c **** *  This API returns the modulator sample clock divider for the  sensor.
1872:Generated_Source\PSoC4/CapSense.c **** *
1873:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1874:Generated_Source\PSoC4/CapSense.c **** *  CapSense_sampleClkDividerVal[] - stores the modulator sample divider values.
1875:Generated_Source\PSoC4/CapSense.c **** *
1876:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1877:Generated_Source\PSoC4/CapSense.c **** *  None
1878:Generated_Source\PSoC4/CapSense.c **** *
1879:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1880:Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_GetModulatorClkDivider(uint32 sensor)
1881:Generated_Source\PSoC4/CapSense.c **** {
 2395              		.loc 1 1881 0
 2396              		.cfi_startproc
 2397              		@ args = 0, pretend = 0, frame = 8
 2398              		@ frame_needed = 1, uses_anonymous_args = 0
 2399 0000 80B5     		push	{r7, lr}
 2400              		.cfi_def_cfa_offset 8
 2401              		.cfi_offset 7, -8
 2402              		.cfi_offset 14, -4
 2403 0002 82B0     		sub	sp, sp, #8
 2404              		.cfi_def_cfa_offset 16
 2405 0004 00AF     		add	r7, sp, #0
 2406              		.cfi_def_cfa_register 7
 2407 0006 7860     		str	r0, [r7, #4]
1882:Generated_Source\PSoC4/CapSense.c ****     #if(0u != CapSense_MULTIPLE_FREQUENCY_SET)
1883:Generated_Source\PSoC4/CapSense.c ****         return((uint32)CapSense_sampleClkDividerVal[sensor]);
 2408              		.loc 1 1883 0
 2409 0008 034A     		ldr	r2, .L123
 2410 000a 7B68     		ldr	r3, [r7, #4]
 2411 000c D318     		adds	r3, r2, r3
 2412 000e 1B78     		ldrb	r3, [r3]
1884:Generated_Source\PSoC4/CapSense.c ****     #else
1885:Generated_Source\PSoC4/CapSense.c ****         return((uint32)CapSense_sampleClkDividerVal);
1886:Generated_Source\PSoC4/CapSense.c ****     #endif /* (0u != CapSense_MULTIPLE_FREQUENCY_SET) */
1887:Generated_Source\PSoC4/CapSense.c **** }
 2413              		.loc 1 1887 0
 2414 0010 1800     		movs	r0, r3
 2415 0012 BD46     		mov	sp, r7
 2416 0014 02B0     		add	sp, sp, #8
 2417              		@ sp needed
 2418 0016 80BD     		pop	{r7, pc}
 2419              	.L124:
 2420              		.align	2
 2421              	.L123:
 2422 0018 00000000 		.word	CapSense_sampleClkDividerVal
 2423              		.cfi_endproc
 2424              	.LFE63:
 2425              		.size	CapSense_GetModulatorClkDivider, .-CapSense_GetModulatorClkDivider
 2426              		.section	.text.CapSense_SetModulatorClkDivider,"ax",%progbits
 2427              		.align	2
 2428              		.global	CapSense_SetModulatorClkDivider
 2429              		.code	16
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 77


 2430              		.thumb_func
 2431              		.type	CapSense_SetModulatorClkDivider, %function
 2432              	CapSense_SetModulatorClkDivider:
 2433              	.LFB64:
1888:Generated_Source\PSoC4/CapSense.c **** 
1889:Generated_Source\PSoC4/CapSense.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
1890:Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_SetModulatorClkDivider
1892:Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
1893:Generated_Source\PSoC4/CapSense.c ****     *
1894:Generated_Source\PSoC4/CapSense.c ****     * Summary:
1895:Generated_Source\PSoC4/CapSense.c ****     *  This API sets a value of the modulator sample clock divider for the  sensor.
1896:Generated_Source\PSoC4/CapSense.c ****     *
1897:Generated_Source\PSoC4/CapSense.c ****     * Parameters:
1898:Generated_Source\PSoC4/CapSense.c ****     *  sensor:  Sensor index.
1899:Generated_Source\PSoC4/CapSense.c ****     *  modulatorClk: represents the modulator sample clock value.
1900:Generated_Source\PSoC4/CapSense.c ****     *
1901:Generated_Source\PSoC4/CapSense.c ****     * Return:
1902:Generated_Source\PSoC4/CapSense.c ****     *  None.
1903:Generated_Source\PSoC4/CapSense.c ****     *
1904:Generated_Source\PSoC4/CapSense.c ****     * Global Variables:
1905:Generated_Source\PSoC4/CapSense.c ****     *  CapSense_sampleClkDividerVal[] - stores the modulator sample divider values.
1906:Generated_Source\PSoC4/CapSense.c ****     *
1907:Generated_Source\PSoC4/CapSense.c ****     * Side Effects:
1908:Generated_Source\PSoC4/CapSense.c ****     *  None
1909:Generated_Source\PSoC4/CapSense.c ****     *
1910:Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
1911:Generated_Source\PSoC4/CapSense.c ****     void CapSense_SetModulatorClkDivider(uint32 sensor, uint32 modulatorClk)
1912:Generated_Source\PSoC4/CapSense.c ****     {
 2434              		.loc 1 1912 0
 2435              		.cfi_startproc
 2436              		@ args = 0, pretend = 0, frame = 8
 2437              		@ frame_needed = 1, uses_anonymous_args = 0
 2438 0000 80B5     		push	{r7, lr}
 2439              		.cfi_def_cfa_offset 8
 2440              		.cfi_offset 7, -8
 2441              		.cfi_offset 14, -4
 2442 0002 82B0     		sub	sp, sp, #8
 2443              		.cfi_def_cfa_offset 16
 2444 0004 00AF     		add	r7, sp, #0
 2445              		.cfi_def_cfa_register 7
 2446 0006 7860     		str	r0, [r7, #4]
 2447 0008 3960     		str	r1, [r7]
1913:Generated_Source\PSoC4/CapSense.c ****         #if(0u != CapSense_MULTIPLE_FREQUENCY_SET)
1914:Generated_Source\PSoC4/CapSense.c ****             CapSense_sampleClkDividerVal[sensor] = (uint8)modulatorClk;
 2448              		.loc 1 1914 0
 2449 000a 3B68     		ldr	r3, [r7]
 2450 000c D9B2     		uxtb	r1, r3
 2451 000e 044A     		ldr	r2, .L126
 2452 0010 7B68     		ldr	r3, [r7, #4]
 2453 0012 D318     		adds	r3, r2, r3
 2454 0014 0A1C     		adds	r2, r1, #0
 2455 0016 1A70     		strb	r2, [r3]
1915:Generated_Source\PSoC4/CapSense.c ****         #else
1916:Generated_Source\PSoC4/CapSense.c ****             CapSense_sampleClkDividerVal = (uint8)modulatorClk;
1917:Generated_Source\PSoC4/CapSense.c ****         #endif /* (0u != CapSense_MULTIPLE_FREQUENCY_SET) */
1918:Generated_Source\PSoC4/CapSense.c ****     }
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 78


 2456              		.loc 1 1918 0
 2457 0018 C046     		nop
 2458 001a BD46     		mov	sp, r7
 2459 001c 02B0     		add	sp, sp, #8
 2460              		@ sp needed
 2461 001e 80BD     		pop	{r7, pc}
 2462              	.L127:
 2463              		.align	2
 2464              	.L126:
 2465 0020 00000000 		.word	CapSense_sampleClkDividerVal
 2466              		.cfi_endproc
 2467              	.LFE64:
 2468              		.size	CapSense_SetModulatorClkDivider, .-CapSense_SetModulatorClkDivider
 2469              		.section	.text.CapSense_GetModulationIDAC,"ax",%progbits
 2470              		.align	2
 2471              		.global	CapSense_GetModulationIDAC
 2472              		.code	16
 2473              		.thumb_func
 2474              		.type	CapSense_GetModulationIDAC, %function
 2475              	CapSense_GetModulationIDAC:
 2476              	.LFB65:
1919:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1920:Generated_Source\PSoC4/CapSense.c **** 
1921:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
1922:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_GetModulationIDAC
1923:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
1924:Generated_Source\PSoC4/CapSense.c **** *
1925:Generated_Source\PSoC4/CapSense.c **** * Summary:
1926:Generated_Source\PSoC4/CapSense.c **** *  This API returns a value of the modulation IDAC for the  sensor.
1927:Generated_Source\PSoC4/CapSense.c **** *
1928:Generated_Source\PSoC4/CapSense.c **** * Parameters:
1929:Generated_Source\PSoC4/CapSense.c **** *  sensor: sensor index. The index value can be
1930:Generated_Source\PSoC4/CapSense.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
1931:Generated_Source\PSoC4/CapSense.c **** *
1932:Generated_Source\PSoC4/CapSense.c **** * Return:
1933:Generated_Source\PSoC4/CapSense.c **** *  This API returns the modulation IDAC of the sensor.
1934:Generated_Source\PSoC4/CapSense.c **** *
1935:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
1936:Generated_Source\PSoC4/CapSense.c **** *  CapSense_modulationIDAC[] - stores modulation IDAC values.
1937:Generated_Source\PSoC4/CapSense.c **** *
1938:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
1939:Generated_Source\PSoC4/CapSense.c **** *  None
1940:Generated_Source\PSoC4/CapSense.c **** *
1941:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
1942:Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_GetModulationIDAC(uint32 sensor)
1943:Generated_Source\PSoC4/CapSense.c **** {
 2477              		.loc 1 1943 0
 2478              		.cfi_startproc
 2479              		@ args = 0, pretend = 0, frame = 8
 2480              		@ frame_needed = 1, uses_anonymous_args = 0
 2481 0000 80B5     		push	{r7, lr}
 2482              		.cfi_def_cfa_offset 8
 2483              		.cfi_offset 7, -8
 2484              		.cfi_offset 14, -4
 2485 0002 82B0     		sub	sp, sp, #8
 2486              		.cfi_def_cfa_offset 16
 2487 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 79


 2488              		.cfi_def_cfa_register 7
 2489 0006 7860     		str	r0, [r7, #4]
1944:Generated_Source\PSoC4/CapSense.c ****         return((uint32)CapSense_modulationIDAC[sensor]);
 2490              		.loc 1 1944 0
 2491 0008 034A     		ldr	r2, .L130
 2492 000a 7B68     		ldr	r3, [r7, #4]
 2493 000c D318     		adds	r3, r2, r3
 2494 000e 1B78     		ldrb	r3, [r3]
1945:Generated_Source\PSoC4/CapSense.c **** }
 2495              		.loc 1 1945 0
 2496 0010 1800     		movs	r0, r3
 2497 0012 BD46     		mov	sp, r7
 2498 0014 02B0     		add	sp, sp, #8
 2499              		@ sp needed
 2500 0016 80BD     		pop	{r7, pc}
 2501              	.L131:
 2502              		.align	2
 2503              	.L130:
 2504 0018 00000000 		.word	CapSense_modulationIDAC
 2505              		.cfi_endproc
 2506              	.LFE65:
 2507              		.size	CapSense_GetModulationIDAC, .-CapSense_GetModulationIDAC
 2508              		.section	.text.CapSense_SetModulationIDAC,"ax",%progbits
 2509              		.align	2
 2510              		.global	CapSense_SetModulationIDAC
 2511              		.code	16
 2512              		.thumb_func
 2513              		.type	CapSense_SetModulationIDAC, %function
 2514              	CapSense_SetModulationIDAC:
 2515              	.LFB66:
1946:Generated_Source\PSoC4/CapSense.c **** 
1947:Generated_Source\PSoC4/CapSense.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
1948:Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
1949:Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_SetModulationIDAC
1950:Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
1951:Generated_Source\PSoC4/CapSense.c ****     *
1952:Generated_Source\PSoC4/CapSense.c ****     * Summary:
1953:Generated_Source\PSoC4/CapSense.c ****     *  This API sets a value of the modulation IDAC for the  sensor.
1954:Generated_Source\PSoC4/CapSense.c ****     *
1955:Generated_Source\PSoC4/CapSense.c ****     * Parameters:
1956:Generated_Source\PSoC4/CapSense.c ****     *  sensor:  Sensor index.
1957:Generated_Source\PSoC4/CapSense.c ****     *  compIdacValue: represents the modulation IDAC data register value.
1958:Generated_Source\PSoC4/CapSense.c ****     *
1959:Generated_Source\PSoC4/CapSense.c ****     * Return:
1960:Generated_Source\PSoC4/CapSense.c ****     *  None.
1961:Generated_Source\PSoC4/CapSense.c ****     *
1962:Generated_Source\PSoC4/CapSense.c ****     * Global Variables:
1963:Generated_Source\PSoC4/CapSense.c ****     *  CapSense_modulationIDAC[] - array with modulation IDAC values
1964:Generated_Source\PSoC4/CapSense.c ****     *
1965:Generated_Source\PSoC4/CapSense.c ****     * Side Effects:
1966:Generated_Source\PSoC4/CapSense.c ****     *  None
1967:Generated_Source\PSoC4/CapSense.c ****     *
1968:Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CapSense.c ****     void CapSense_SetModulationIDAC(uint32 sensor, uint32 modIdacValue)
1970:Generated_Source\PSoC4/CapSense.c ****     {
 2516              		.loc 1 1970 0
 2517              		.cfi_startproc
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 80


 2518              		@ args = 0, pretend = 0, frame = 8
 2519              		@ frame_needed = 1, uses_anonymous_args = 0
 2520 0000 80B5     		push	{r7, lr}
 2521              		.cfi_def_cfa_offset 8
 2522              		.cfi_offset 7, -8
 2523              		.cfi_offset 14, -4
 2524 0002 82B0     		sub	sp, sp, #8
 2525              		.cfi_def_cfa_offset 16
 2526 0004 00AF     		add	r7, sp, #0
 2527              		.cfi_def_cfa_register 7
 2528 0006 7860     		str	r0, [r7, #4]
 2529 0008 3960     		str	r1, [r7]
1971:Generated_Source\PSoC4/CapSense.c ****         CapSense_modulationIDAC[sensor] = (uint8)modIdacValue;
 2530              		.loc 1 1971 0
 2531 000a 3B68     		ldr	r3, [r7]
 2532 000c D9B2     		uxtb	r1, r3
 2533 000e 044A     		ldr	r2, .L133
 2534 0010 7B68     		ldr	r3, [r7, #4]
 2535 0012 D318     		adds	r3, r2, r3
 2536 0014 0A1C     		adds	r2, r1, #0
 2537 0016 1A70     		strb	r2, [r3]
1972:Generated_Source\PSoC4/CapSense.c ****     }
 2538              		.loc 1 1972 0
 2539 0018 C046     		nop
 2540 001a BD46     		mov	sp, r7
 2541 001c 02B0     		add	sp, sp, #8
 2542              		@ sp needed
 2543 001e 80BD     		pop	{r7, pc}
 2544              	.L134:
 2545              		.align	2
 2546              	.L133:
 2547 0020 00000000 		.word	CapSense_modulationIDAC
 2548              		.cfi_endproc
 2549              	.LFE66:
 2550              		.size	CapSense_SetModulationIDAC, .-CapSense_SetModulationIDAC
 2551              		.section	.text.CapSense_GetCompensationIDAC,"ax",%progbits
 2552              		.align	2
 2553              		.global	CapSense_GetCompensationIDAC
 2554              		.code	16
 2555              		.thumb_func
 2556              		.type	CapSense_GetCompensationIDAC, %function
 2557              	CapSense_GetCompensationIDAC:
 2558              	.LFB67:
1973:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1974:Generated_Source\PSoC4/CapSense.c **** 
1975:Generated_Source\PSoC4/CapSense.c **** 
1976:Generated_Source\PSoC4/CapSense.c **** #if(CapSense_IDAC_CNT > 1u)
1977:Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
1978:Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_GetCompensationIDAC
1979:Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
1980:Generated_Source\PSoC4/CapSense.c ****     *
1981:Generated_Source\PSoC4/CapSense.c ****     * Summary:
1982:Generated_Source\PSoC4/CapSense.c ****     *  This API returns a value of the compensation IDAC for the  sensor.
1983:Generated_Source\PSoC4/CapSense.c ****     *
1984:Generated_Source\PSoC4/CapSense.c ****     * Parameters:
1985:Generated_Source\PSoC4/CapSense.c ****     *  sensor: sensor index. The index value can be
1986:Generated_Source\PSoC4/CapSense.c ****     *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 81


1987:Generated_Source\PSoC4/CapSense.c ****     *
1988:Generated_Source\PSoC4/CapSense.c ****     * Return:
1989:Generated_Source\PSoC4/CapSense.c ****     *  This API returns the compensation IDAC of the sensor.
1990:Generated_Source\PSoC4/CapSense.c ****     *
1991:Generated_Source\PSoC4/CapSense.c ****     * Global Variables:
1992:Generated_Source\PSoC4/CapSense.c ****     *  CapSense_compensationIDAC[] - stores the compensation IDAC values.
1993:Generated_Source\PSoC4/CapSense.c ****     *
1994:Generated_Source\PSoC4/CapSense.c ****     * Side Effects:
1995:Generated_Source\PSoC4/CapSense.c ****     *  None
1996:Generated_Source\PSoC4/CapSense.c ****     *
1997:Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
1998:Generated_Source\PSoC4/CapSense.c ****     uint32 CapSense_GetCompensationIDAC(uint32 sensor)
1999:Generated_Source\PSoC4/CapSense.c ****     {
 2559              		.loc 1 1999 0
 2560              		.cfi_startproc
 2561              		@ args = 0, pretend = 0, frame = 8
 2562              		@ frame_needed = 1, uses_anonymous_args = 0
 2563 0000 80B5     		push	{r7, lr}
 2564              		.cfi_def_cfa_offset 8
 2565              		.cfi_offset 7, -8
 2566              		.cfi_offset 14, -4
 2567 0002 82B0     		sub	sp, sp, #8
 2568              		.cfi_def_cfa_offset 16
 2569 0004 00AF     		add	r7, sp, #0
 2570              		.cfi_def_cfa_register 7
 2571 0006 7860     		str	r0, [r7, #4]
2000:Generated_Source\PSoC4/CapSense.c ****         return((uint32)CapSense_compensationIDAC[sensor]);
 2572              		.loc 1 2000 0
 2573 0008 034A     		ldr	r2, .L137
 2574 000a 7B68     		ldr	r3, [r7, #4]
 2575 000c D318     		adds	r3, r2, r3
 2576 000e 1B78     		ldrb	r3, [r3]
2001:Generated_Source\PSoC4/CapSense.c ****     }
 2577              		.loc 1 2001 0
 2578 0010 1800     		movs	r0, r3
 2579 0012 BD46     		mov	sp, r7
 2580 0014 02B0     		add	sp, sp, #8
 2581              		@ sp needed
 2582 0016 80BD     		pop	{r7, pc}
 2583              	.L138:
 2584              		.align	2
 2585              	.L137:
 2586 0018 00000000 		.word	CapSense_compensationIDAC
 2587              		.cfi_endproc
 2588              	.LFE67:
 2589              		.size	CapSense_GetCompensationIDAC, .-CapSense_GetCompensationIDAC
 2590              		.section	.text.CapSense_SetCompensationIDAC,"ax",%progbits
 2591              		.align	2
 2592              		.global	CapSense_SetCompensationIDAC
 2593              		.code	16
 2594              		.thumb_func
 2595              		.type	CapSense_SetCompensationIDAC, %function
 2596              	CapSense_SetCompensationIDAC:
 2597              	.LFB68:
2002:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_IDAC_CNT > 1u) */
2003:Generated_Source\PSoC4/CapSense.c **** 
2004:Generated_Source\PSoC4/CapSense.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 82


2005:Generated_Source\PSoC4/CapSense.c **** #if((CapSense_TUNING_METHOD != CapSense__TUNING_NONE) && (CapSense_IDAC_CNT > 1u))
2006:Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_SetCompensationIDAC
2008:Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
2009:Generated_Source\PSoC4/CapSense.c ****     *
2010:Generated_Source\PSoC4/CapSense.c ****     * Summary:
2011:Generated_Source\PSoC4/CapSense.c ****     *  This API sets a value of compensation IDAC for the  sensor.
2012:Generated_Source\PSoC4/CapSense.c ****     *
2013:Generated_Source\PSoC4/CapSense.c ****     * Parameters:
2014:Generated_Source\PSoC4/CapSense.c ****     *  sensor:  Sensor index.
2015:Generated_Source\PSoC4/CapSense.c ****     *  compIdacValue: represents the compensation IDAC data register value.
2016:Generated_Source\PSoC4/CapSense.c ****     *
2017:Generated_Source\PSoC4/CapSense.c ****     * Return:
2018:Generated_Source\PSoC4/CapSense.c ****     *  None.
2019:Generated_Source\PSoC4/CapSense.c ****     *
2020:Generated_Source\PSoC4/CapSense.c ****     * Global Variables:
2021:Generated_Source\PSoC4/CapSense.c ****     *  CapSense_compensationIDAC[] - an array with compensation IDAC values
2022:Generated_Source\PSoC4/CapSense.c ****     *
2023:Generated_Source\PSoC4/CapSense.c ****     * Side Effects:
2024:Generated_Source\PSoC4/CapSense.c ****     *  None
2025:Generated_Source\PSoC4/CapSense.c ****     *
2026:Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
2027:Generated_Source\PSoC4/CapSense.c ****     void CapSense_SetCompensationIDAC(uint32 sensor, uint32 compIdacValue)
2028:Generated_Source\PSoC4/CapSense.c ****     {
 2598              		.loc 1 2028 0
 2599              		.cfi_startproc
 2600              		@ args = 0, pretend = 0, frame = 8
 2601              		@ frame_needed = 1, uses_anonymous_args = 0
 2602 0000 80B5     		push	{r7, lr}
 2603              		.cfi_def_cfa_offset 8
 2604              		.cfi_offset 7, -8
 2605              		.cfi_offset 14, -4
 2606 0002 82B0     		sub	sp, sp, #8
 2607              		.cfi_def_cfa_offset 16
 2608 0004 00AF     		add	r7, sp, #0
 2609              		.cfi_def_cfa_register 7
 2610 0006 7860     		str	r0, [r7, #4]
 2611 0008 3960     		str	r1, [r7]
2029:Generated_Source\PSoC4/CapSense.c ****         CapSense_compensationIDAC[sensor] = (uint8)compIdacValue;
 2612              		.loc 1 2029 0
 2613 000a 3B68     		ldr	r3, [r7]
 2614 000c D9B2     		uxtb	r1, r3
 2615 000e 044A     		ldr	r2, .L140
 2616 0010 7B68     		ldr	r3, [r7, #4]
 2617 0012 D318     		adds	r3, r2, r3
 2618 0014 0A1C     		adds	r2, r1, #0
 2619 0016 1A70     		strb	r2, [r3]
2030:Generated_Source\PSoC4/CapSense.c ****     }
 2620              		.loc 1 2030 0
 2621 0018 C046     		nop
 2622 001a BD46     		mov	sp, r7
 2623 001c 02B0     		add	sp, sp, #8
 2624              		@ sp needed
 2625 001e 80BD     		pop	{r7, pc}
 2626              	.L141:
 2627              		.align	2
 2628              	.L140:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 83


 2629 0020 00000000 		.word	CapSense_compensationIDAC
 2630              		.cfi_endproc
 2631              	.LFE68:
 2632              		.size	CapSense_SetCompensationIDAC, .-CapSense_SetCompensationIDAC
 2633              		.section	.text.CapSense_GetIDACRange,"ax",%progbits
 2634              		.align	2
 2635              		.global	CapSense_GetIDACRange
 2636              		.code	16
 2637              		.thumb_func
 2638              		.type	CapSense_GetIDACRange, %function
 2639              	CapSense_GetIDACRange:
 2640              	.LFB69:
2031:Generated_Source\PSoC4/CapSense.c **** #endif /* ((CapSense_TUNING_METHOD != CapSense__TUNING_NONE) && (CapSense_IDAC_CNT > 1u)) */
2032:Generated_Source\PSoC4/CapSense.c **** 
2033:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
2034:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_GetIDACRange
2035:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
2036:Generated_Source\PSoC4/CapSense.c **** *
2037:Generated_Source\PSoC4/CapSense.c **** * Summary:
2038:Generated_Source\PSoC4/CapSense.c **** *  This API returns a value that indicates the IDAC range used by the
2039:Generated_Source\PSoC4/CapSense.c **** *  component to scan sensors. The IDAC range is common for all the sensors.
2040:Generated_Source\PSoC4/CapSense.c **** *
2041:Generated_Source\PSoC4/CapSense.c **** * Parameters:
2042:Generated_Source\PSoC4/CapSense.c **** *  None
2043:Generated_Source\PSoC4/CapSense.c **** *
2044:Generated_Source\PSoC4/CapSense.c **** * Return:
2045:Generated_Source\PSoC4/CapSense.c **** *  This API Returns a value that indicates the IDAC range:
2046:Generated_Source\PSoC4/CapSense.c **** *      0 - IDAC range set to 4x
2047:Generated_Source\PSoC4/CapSense.c **** *      1 - IDAC range set to 8x
2048:Generated_Source\PSoC4/CapSense.c **** *
2049:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
2050:Generated_Source\PSoC4/CapSense.c **** *  None
2051:Generated_Source\PSoC4/CapSense.c **** *
2052:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
2053:Generated_Source\PSoC4/CapSense.c **** *  None
2054:Generated_Source\PSoC4/CapSense.c **** *
2055:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
2056:Generated_Source\PSoC4/CapSense.c **** uint32 CapSense_GetIDACRange(void)
2057:Generated_Source\PSoC4/CapSense.c **** {
 2641              		.loc 1 2057 0
 2642              		.cfi_startproc
 2643              		@ args = 0, pretend = 0, frame = 0
 2644              		@ frame_needed = 1, uses_anonymous_args = 0
 2645 0000 80B5     		push	{r7, lr}
 2646              		.cfi_def_cfa_offset 8
 2647              		.cfi_offset 7, -8
 2648              		.cfi_offset 14, -4
 2649 0002 00AF     		add	r7, sp, #0
 2650              		.cfi_def_cfa_register 7
2058:Generated_Source\PSoC4/CapSense.c ****     return((0u != (CapSense_CSD_IDAC_REG & CapSense_CSD_IDAC1_RANGE_8X)) ? 1uL : 0uL);
 2651              		.loc 1 2058 0
 2652 0004 054B     		ldr	r3, .L146
 2653 0006 1A68     		ldr	r2, [r3]
 2654 0008 8023     		movs	r3, #128
 2655 000a DB00     		lsls	r3, r3, #3
 2656 000c 1340     		ands	r3, r2
 2657 000e 01D0     		beq	.L143
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 84


 2658              		.loc 1 2058 0 is_stmt 0 discriminator 1
 2659 0010 0123     		movs	r3, #1
 2660 0012 00E0     		b	.L145
 2661              	.L143:
 2662              		.loc 1 2058 0 discriminator 2
 2663 0014 0023     		movs	r3, #0
 2664              	.L145:
2059:Generated_Source\PSoC4/CapSense.c **** }
 2665              		.loc 1 2059 0 is_stmt 1 discriminator 5
 2666 0016 1800     		movs	r0, r3
 2667 0018 BD46     		mov	sp, r7
 2668              		@ sp needed
 2669 001a 80BD     		pop	{r7, pc}
 2670              	.L147:
 2671              		.align	2
 2672              	.L146:
 2673 001c 08002840 		.word	1076363272
 2674              		.cfi_endproc
 2675              	.LFE69:
 2676              		.size	CapSense_GetIDACRange, .-CapSense_GetIDACRange
 2677              		.section	.text.CapSense_SetIDACRange,"ax",%progbits
 2678              		.align	2
 2679              		.global	CapSense_SetIDACRange
 2680              		.code	16
 2681              		.thumb_func
 2682              		.type	CapSense_SetIDACRange, %function
 2683              	CapSense_SetIDACRange:
 2684              	.LFB70:
2060:Generated_Source\PSoC4/CapSense.c **** 
2061:Generated_Source\PSoC4/CapSense.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
2062:Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
2063:Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_SetIDACRange
2064:Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
2065:Generated_Source\PSoC4/CapSense.c ****     *
2066:Generated_Source\PSoC4/CapSense.c ****     * Summary:
2067:Generated_Source\PSoC4/CapSense.c ****     *  This API sets the IDAC range to the 4x (1.2uA/bit) or 8x (2.4uA/bit) mode.
2068:Generated_Source\PSoC4/CapSense.c ****     *  The IDAC range is common for all the sensors and common for the modulation and
2069:Generated_Source\PSoC4/CapSense.c ****     *  compensation IDACs.
2070:Generated_Source\PSoC4/CapSense.c ****     *
2071:Generated_Source\PSoC4/CapSense.c ****     * Parameters:
2072:Generated_Source\PSoC4/CapSense.c ****     *  iDacRange:  represents value for IDAC range
2073:Generated_Source\PSoC4/CapSense.c ****     *  0 -  IDAC range set to 4x (1.2uA/bit)
2074:Generated_Source\PSoC4/CapSense.c ****     *  1 or >1 - IDAC range set to 8x (2.4uA/bit)
2075:Generated_Source\PSoC4/CapSense.c ****     *
2076:Generated_Source\PSoC4/CapSense.c ****     * Return:
2077:Generated_Source\PSoC4/CapSense.c ****     *  None.
2078:Generated_Source\PSoC4/CapSense.c ****     *
2079:Generated_Source\PSoC4/CapSense.c ****     * Global Variables:
2080:Generated_Source\PSoC4/CapSense.c ****     *  None
2081:Generated_Source\PSoC4/CapSense.c ****     *
2082:Generated_Source\PSoC4/CapSense.c ****     * Side Effects:
2083:Generated_Source\PSoC4/CapSense.c ****     *  None
2084:Generated_Source\PSoC4/CapSense.c ****     *
2085:Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
2086:Generated_Source\PSoC4/CapSense.c ****     void CapSense_SetIDACRange(uint32 iDacRange)
2087:Generated_Source\PSoC4/CapSense.c ****     {
 2685              		.loc 1 2087 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 85


 2686              		.cfi_startproc
 2687              		@ args = 0, pretend = 0, frame = 8
 2688              		@ frame_needed = 1, uses_anonymous_args = 0
 2689 0000 80B5     		push	{r7, lr}
 2690              		.cfi_def_cfa_offset 8
 2691              		.cfi_offset 7, -8
 2692              		.cfi_offset 14, -4
 2693 0002 82B0     		sub	sp, sp, #8
 2694              		.cfi_def_cfa_offset 16
 2695 0004 00AF     		add	r7, sp, #0
 2696              		.cfi_def_cfa_register 7
 2697 0006 7860     		str	r0, [r7, #4]
2088:Generated_Source\PSoC4/CapSense.c ****         if(iDacRange != 0u)
 2698              		.loc 1 2088 0
 2699 0008 7B68     		ldr	r3, [r7, #4]
 2700 000a 002B     		cmp	r3, #0
 2701 000c 06D0     		beq	.L149
2089:Generated_Source\PSoC4/CapSense.c ****         {
2090:Generated_Source\PSoC4/CapSense.c ****             /*  IDAC range = 8x (2.4uA/bit) */
2091:Generated_Source\PSoC4/CapSense.c ****             CapSense_CSD_IDAC_REG |= (CapSense_CSD_IDAC1_RANGE_8X |\
 2702              		.loc 1 2091 0
 2703 000e 084B     		ldr	r3, .L152
 2704 0010 074A     		ldr	r2, .L152
 2705 0012 1268     		ldr	r2, [r2]
 2706 0014 0749     		ldr	r1, .L152+4
 2707 0016 0A43     		orrs	r2, r1
 2708 0018 1A60     		str	r2, [r3]
2092:Generated_Source\PSoC4/CapSense.c ****                                               CapSense_CSD_IDAC2_RANGE_8X);
2093:Generated_Source\PSoC4/CapSense.c ****         }
2094:Generated_Source\PSoC4/CapSense.c ****         else
2095:Generated_Source\PSoC4/CapSense.c ****         {
2096:Generated_Source\PSoC4/CapSense.c ****             /*  IDAC range = 4x (1.2uA/bit) */
2097:Generated_Source\PSoC4/CapSense.c ****             /*  IDAC range = 8x (2.4uA/bit) */
2098:Generated_Source\PSoC4/CapSense.c ****             CapSense_CSD_IDAC_REG &= ~(CapSense_CSD_IDAC1_RANGE_8X |\
2099:Generated_Source\PSoC4/CapSense.c ****                                                CapSense_CSD_IDAC2_RANGE_8X);
2100:Generated_Source\PSoC4/CapSense.c ****         }
2101:Generated_Source\PSoC4/CapSense.c ****     }
 2709              		.loc 1 2101 0
 2710 001a 05E0     		b	.L151
 2711              	.L149:
2098:Generated_Source\PSoC4/CapSense.c ****                                                CapSense_CSD_IDAC2_RANGE_8X);
 2712              		.loc 1 2098 0
 2713 001c 044B     		ldr	r3, .L152
 2714 001e 044A     		ldr	r2, .L152
 2715 0020 1268     		ldr	r2, [r2]
 2716 0022 0549     		ldr	r1, .L152+8
 2717 0024 0A40     		ands	r2, r1
 2718 0026 1A60     		str	r2, [r3]
 2719              	.L151:
 2720              		.loc 1 2101 0
 2721 0028 C046     		nop
 2722 002a BD46     		mov	sp, r7
 2723 002c 02B0     		add	sp, sp, #8
 2724              		@ sp needed
 2725 002e 80BD     		pop	{r7, pc}
 2726              	.L153:
 2727              		.align	2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 86


 2728              	.L152:
 2729 0030 08002840 		.word	1076363272
 2730 0034 00040004 		.word	67109888
 2731 0038 FFFBFFFB 		.word	-67109889
 2732              		.cfi_endproc
 2733              	.LFE70:
 2734              		.size	CapSense_SetIDACRange, .-CapSense_SetIDACRange
 2735              		.section	.text.CapSense_GetSensorRaw,"ax",%progbits
 2736              		.align	2
 2737              		.global	CapSense_GetSensorRaw
 2738              		.code	16
 2739              		.thumb_func
 2740              		.type	CapSense_GetSensorRaw, %function
 2741              	CapSense_GetSensorRaw:
 2742              	.LFB71:
2102:Generated_Source\PSoC4/CapSense.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
2103:Generated_Source\PSoC4/CapSense.c **** 
2104:Generated_Source\PSoC4/CapSense.c **** 
2105:Generated_Source\PSoC4/CapSense.c **** #if((0u != CapSense_AUTOCALIBRATION_ENABLE) || (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO))
2106:Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
2107:Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_GetSensorRaw
2108:Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
2109:Generated_Source\PSoC4/CapSense.c ****     *
2110:Generated_Source\PSoC4/CapSense.c ****     * Summary:
2111:Generated_Source\PSoC4/CapSense.c ****     *  The API updates and gets uprated raw data from the sensor.
2112:Generated_Source\PSoC4/CapSense.c ****     *
2113:Generated_Source\PSoC4/CapSense.c ****     * Parameters:
2114:Generated_Source\PSoC4/CapSense.c ****     *  sensor - Sensor number.
2115:Generated_Source\PSoC4/CapSense.c ****     *
2116:Generated_Source\PSoC4/CapSense.c ****     * Return:
2117:Generated_Source\PSoC4/CapSense.c ****     *  Returns the current raw data value for a defined sensor number.
2118:Generated_Source\PSoC4/CapSense.c ****     *
2119:Generated_Source\PSoC4/CapSense.c ****     * Global Variables:
2120:Generated_Source\PSoC4/CapSense.c ****     *  None
2121:Generated_Source\PSoC4/CapSense.c ****     *
2122:Generated_Source\PSoC4/CapSense.c ****     * Side Effects:
2123:Generated_Source\PSoC4/CapSense.c ****     *  None
2124:Generated_Source\PSoC4/CapSense.c ****     *
2125:Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
2126:Generated_Source\PSoC4/CapSense.c ****     uint16  CapSense_GetSensorRaw(uint32 sensor)
2127:Generated_Source\PSoC4/CapSense.c ****     {
 2743              		.loc 1 2127 0
 2744              		.cfi_startproc
 2745              		@ args = 0, pretend = 0, frame = 16
 2746              		@ frame_needed = 1, uses_anonymous_args = 0
 2747 0000 80B5     		push	{r7, lr}
 2748              		.cfi_def_cfa_offset 8
 2749              		.cfi_offset 7, -8
 2750              		.cfi_offset 14, -4
 2751 0002 84B0     		sub	sp, sp, #16
 2752              		.cfi_def_cfa_offset 24
 2753 0004 00AF     		add	r7, sp, #0
 2754              		.cfi_def_cfa_register 7
 2755 0006 7860     		str	r0, [r7, #4]
2128:Generated_Source\PSoC4/CapSense.c ****         uint32 curSample;
2129:Generated_Source\PSoC4/CapSense.c ****         uint32 avgVal = 0u;
 2756              		.loc 1 2129 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 87


 2757 0008 0023     		movs	r3, #0
 2758 000a BB60     		str	r3, [r7, #8]
2130:Generated_Source\PSoC4/CapSense.c **** 
2131:Generated_Source\PSoC4/CapSense.c ****         for(curSample = 0u; curSample < CapSense_AVG_SAMPLES_NUM; curSample++)
 2759              		.loc 1 2131 0
 2760 000c 0023     		movs	r3, #0
 2761 000e FB60     		str	r3, [r7, #12]
 2762 0010 15E0     		b	.L155
 2763              	.L157:
2132:Generated_Source\PSoC4/CapSense.c ****         {
2133:Generated_Source\PSoC4/CapSense.c **** 
2134:Generated_Source\PSoC4/CapSense.c ****             CapSense_ScanSensor((uint32)sensor);
 2764              		.loc 1 2134 0
 2765 0012 7B68     		ldr	r3, [r7, #4]
 2766 0014 1800     		movs	r0, r3
 2767 0016 FFF7FEFF 		bl	CapSense_ScanSensor
2135:Generated_Source\PSoC4/CapSense.c ****             while(CapSense_IsBusy() == 1u)
 2768              		.loc 1 2135 0
 2769 001a C046     		nop
 2770              	.L156:
 2771              		.loc 1 2135 0 is_stmt 0 discriminator 1
 2772 001c FFF7FEFF 		bl	CapSense_IsBusy
 2773 0020 0300     		movs	r3, r0
 2774 0022 012B     		cmp	r3, #1
 2775 0024 FAD0     		beq	.L156
2136:Generated_Source\PSoC4/CapSense.c ****             {
2137:Generated_Source\PSoC4/CapSense.c ****                 /* Wait while sensor is busy */
2138:Generated_Source\PSoC4/CapSense.c ****             }
2139:Generated_Source\PSoC4/CapSense.c ****             avgVal += CapSense_ReadSensorRaw((uint32)sensor);
 2776              		.loc 1 2139 0 is_stmt 1 discriminator 2
 2777 0026 7B68     		ldr	r3, [r7, #4]
 2778 0028 1800     		movs	r0, r3
 2779 002a FFF7FEFF 		bl	CapSense_ReadSensorRaw
 2780 002e 0300     		movs	r3, r0
 2781 0030 1A00     		movs	r2, r3
 2782 0032 BB68     		ldr	r3, [r7, #8]
 2783 0034 9B18     		adds	r3, r3, r2
 2784 0036 BB60     		str	r3, [r7, #8]
2131:Generated_Source\PSoC4/CapSense.c ****         {
 2785              		.loc 1 2131 0 discriminator 2
 2786 0038 FB68     		ldr	r3, [r7, #12]
 2787 003a 0133     		adds	r3, r3, #1
 2788 003c FB60     		str	r3, [r7, #12]
 2789              	.L155:
2131:Generated_Source\PSoC4/CapSense.c ****         {
 2790              		.loc 1 2131 0 is_stmt 0 discriminator 1
 2791 003e FB68     		ldr	r3, [r7, #12]
 2792 0040 002B     		cmp	r3, #0
 2793 0042 E6D0     		beq	.L157
2140:Generated_Source\PSoC4/CapSense.c ****         }
2141:Generated_Source\PSoC4/CapSense.c **** 
2142:Generated_Source\PSoC4/CapSense.c ****         return((uint16)(avgVal / CapSense_AVG_SAMPLES_NUM));
 2794              		.loc 1 2142 0 is_stmt 1
 2795 0044 BB68     		ldr	r3, [r7, #8]
 2796 0046 9BB2     		uxth	r3, r3
2143:Generated_Source\PSoC4/CapSense.c ****     }
 2797              		.loc 1 2143 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 88


 2798 0048 1800     		movs	r0, r3
 2799 004a BD46     		mov	sp, r7
 2800 004c 04B0     		add	sp, sp, #16
 2801              		@ sp needed
 2802 004e 80BD     		pop	{r7, pc}
 2803              		.cfi_endproc
 2804              	.LFE71:
 2805              		.size	CapSense_GetSensorRaw, .-CapSense_GetSensorRaw
 2806              		.section	.text.CapSense_SetUnscannedSensorState,"ax",%progbits
 2807              		.align	2
 2808              		.global	CapSense_SetUnscannedSensorState
 2809              		.code	16
 2810              		.thumb_func
 2811              		.type	CapSense_SetUnscannedSensorState, %function
 2812              	CapSense_SetUnscannedSensorState:
 2813              	.LFB72:
2144:Generated_Source\PSoC4/CapSense.c **** #endif /* ((0u != CapSense_AUTOCALIBRATION_ENABLE) && (CapSense_TUNING_METHOD == CapSense__TUNING_A
2145:Generated_Source\PSoC4/CapSense.c **** 
2146:Generated_Source\PSoC4/CapSense.c **** 
2147:Generated_Source\PSoC4/CapSense.c **** #if((0u != CapSense_AUTOCALIBRATION_ENABLE) && (CapSense_TUNING_METHOD != CapSense__TUNING_AUTO))
2148:Generated_Source\PSoC4/CapSense.c ****     /*******************************************************************************
2149:Generated_Source\PSoC4/CapSense.c ****     * Function Name: CapSense_CalibrateSensor
2150:Generated_Source\PSoC4/CapSense.c ****     ********************************************************************************
2151:Generated_Source\PSoC4/CapSense.c ****     *
2152:Generated_Source\PSoC4/CapSense.c ****     * Summary:
2153:Generated_Source\PSoC4/CapSense.c ****     *  Computes the one sensor IDAC value, which provides the raw signal on
2154:Generated_Source\PSoC4/CapSense.c ****     *  a specified level, with a specified prescaler, speed, and resolution.
2155:Generated_Source\PSoC4/CapSense.c ****     *
2156:Generated_Source\PSoC4/CapSense.c ****     * Parameters:
2157:Generated_Source\PSoC4/CapSense.c ****     *  sensor - Sensor Number.
2158:Generated_Source\PSoC4/CapSense.c ****     *
2159:Generated_Source\PSoC4/CapSense.c ****     *  rawLevel -  Raw data level which should be reached during the calibration
2160:Generated_Source\PSoC4/CapSense.c ****     *              procedure.
2161:Generated_Source\PSoC4/CapSense.c ****     *
2162:Generated_Source\PSoC4/CapSense.c ****     *  idacLevelsTbl - Pointer to the modulatorIdac data register configuration table.
2163:Generated_Source\PSoC4/CapSense.c ****     *
2164:Generated_Source\PSoC4/CapSense.c ****     * Return:
2165:Generated_Source\PSoC4/CapSense.c ****     *  None
2166:Generated_Source\PSoC4/CapSense.c ****     *
2167:Generated_Source\PSoC4/CapSense.c ****     *******************************************************************************/
2168:Generated_Source\PSoC4/CapSense.c ****     void CapSense_CalibrateSensor(uint32 sensor, uint32 rawLevel, uint8 idacLevelsTbl[])
2169:Generated_Source\PSoC4/CapSense.c ****     {
2170:Generated_Source\PSoC4/CapSense.c ****         uint8 mask;
2171:Generated_Source\PSoC4/CapSense.c ****         uint16 rawData;
2172:Generated_Source\PSoC4/CapSense.c **** 
2173:Generated_Source\PSoC4/CapSense.c ****         rawData = 0u;
2174:Generated_Source\PSoC4/CapSense.c **** 
2175:Generated_Source\PSoC4/CapSense.c ****         mask = 0x80u;
2176:Generated_Source\PSoC4/CapSense.c ****         /* Init IDAC for null Channel */
2177:Generated_Source\PSoC4/CapSense.c ****         idacLevelsTbl[sensor] = 0x00u;
2178:Generated_Source\PSoC4/CapSense.c **** 
2179:Generated_Source\PSoC4/CapSense.c ****         do
2180:Generated_Source\PSoC4/CapSense.c ****         {
2181:Generated_Source\PSoC4/CapSense.c ****             /* Set bit for null Channel */
2182:Generated_Source\PSoC4/CapSense.c ****             idacLevelsTbl[sensor] |= mask;
2183:Generated_Source\PSoC4/CapSense.c **** 
2184:Generated_Source\PSoC4/CapSense.c ****             /* Scan null Channel and get Rawdata */
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 89


2185:Generated_Source\PSoC4/CapSense.c ****             rawData = CapSense_GetSensorRaw(sensor);
2186:Generated_Source\PSoC4/CapSense.c **** 
2187:Generated_Source\PSoC4/CapSense.c ****             /* Decrease IDAC until Rawdata reaches rawLevel */
2188:Generated_Source\PSoC4/CapSense.c ****             if(rawData < rawLevel)
2189:Generated_Source\PSoC4/CapSense.c ****             {
2190:Generated_Source\PSoC4/CapSense.c ****                 /* Reset bit for null Channel  */
2191:Generated_Source\PSoC4/CapSense.c ****                 idacLevelsTbl[sensor] &= (uint8)~mask;
2192:Generated_Source\PSoC4/CapSense.c ****             }
2193:Generated_Source\PSoC4/CapSense.c **** 
2194:Generated_Source\PSoC4/CapSense.c ****             mask >>= 1u;
2195:Generated_Source\PSoC4/CapSense.c ****         }
2196:Generated_Source\PSoC4/CapSense.c ****         while(mask > 0u);
2197:Generated_Source\PSoC4/CapSense.c **** 
2198:Generated_Source\PSoC4/CapSense.c ****     }
2199:Generated_Source\PSoC4/CapSense.c **** #endif /* ((0u != CapSense_AUTOCALIBRATION_ENABLE) && (CapSense_TUNING_METHOD != CapSense__TUNING_A
2200:Generated_Source\PSoC4/CapSense.c **** 
2201:Generated_Source\PSoC4/CapSense.c **** 
2202:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
2203:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_SetUnscannedSensorState
2204:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
2205:Generated_Source\PSoC4/CapSense.c **** *
2206:Generated_Source\PSoC4/CapSense.c **** * Summary:
2207:Generated_Source\PSoC4/CapSense.c **** *  This API sets a state for un-scanned sensors.
2208:Generated_Source\PSoC4/CapSense.c **** *  It is possible to set the state to Ground, High-Z, or the shield electrode.
2209:Generated_Source\PSoC4/CapSense.c **** *  The un-scanned sensor can be connected to a shield electrode only if the shield is
2210:Generated_Source\PSoC4/CapSense.c **** *  enabled. If the shield is disabled and this API is called with the parameter which
2211:Generated_Source\PSoC4/CapSense.c **** *  indicates the shield state, the un-scanned sensor will be connected to Ground.
2212:Generated_Source\PSoC4/CapSense.c **** *
2213:Generated_Source\PSoC4/CapSense.c **** * Parameters:
2214:Generated_Source\PSoC4/CapSense.c **** *  sensor - Sensor Number.
2215:Generated_Source\PSoC4/CapSense.c **** *  sensorState: This parameter indicates un-scanned sensor state:
2216:Generated_Source\PSoC4/CapSense.c **** *
2217:Generated_Source\PSoC4/CapSense.c **** *     CapSense__GROUND 0
2218:Generated_Source\PSoC4/CapSense.c **** *     CapSense__HIZ_ANALOG 1
2219:Generated_Source\PSoC4/CapSense.c **** *     CapSense__SHIELD 2
2220:Generated_Source\PSoC4/CapSense.c **** *
2221:Generated_Source\PSoC4/CapSense.c **** * Return:
2222:Generated_Source\PSoC4/CapSense.c **** *  None.
2223:Generated_Source\PSoC4/CapSense.c **** *
2224:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
2225:Generated_Source\PSoC4/CapSense.c **** *  CapSense_unscannedSnsDriveMode[] - used to store the state for
2226:Generated_Source\PSoC4/CapSense.c **** *  un-scanned sensors.
2227:Generated_Source\PSoC4/CapSense.c **** *
2228:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
2229:Generated_Source\PSoC4/CapSense.c **** *  None
2230:Generated_Source\PSoC4/CapSense.c **** *
2231:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
2232:Generated_Source\PSoC4/CapSense.c **** void CapSense_SetUnscannedSensorState(uint32 sensor, uint32 sensorState)
2233:Generated_Source\PSoC4/CapSense.c **** {
 2814              		.loc 1 2233 0
 2815              		.cfi_startproc
 2816              		@ args = 0, pretend = 0, frame = 8
 2817              		@ frame_needed = 1, uses_anonymous_args = 0
 2818 0000 80B5     		push	{r7, lr}
 2819              		.cfi_def_cfa_offset 8
 2820              		.cfi_offset 7, -8
 2821              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 90


 2822 0002 82B0     		sub	sp, sp, #8
 2823              		.cfi_def_cfa_offset 16
 2824 0004 00AF     		add	r7, sp, #0
 2825              		.cfi_def_cfa_register 7
 2826 0006 7860     		str	r0, [r7, #4]
 2827 0008 3960     		str	r1, [r7]
2234:Generated_Source\PSoC4/CapSense.c ****     #if(CapSense_IS_COMPLEX_SCANSLOTS)
2235:Generated_Source\PSoC4/CapSense.c ****         uint8 snsType;
2236:Generated_Source\PSoC4/CapSense.c ****         uint8 curSensor;
2237:Generated_Source\PSoC4/CapSense.c ****         uint16 snsNumber;
2238:Generated_Source\PSoC4/CapSense.c **** 
2239:Generated_Source\PSoC4/CapSense.c ****         /* Read sensor type: single or complex */
2240:Generated_Source\PSoC4/CapSense.c ****         snsType = CapSense_portTable[sensor];
2241:Generated_Source\PSoC4/CapSense.c **** 
2242:Generated_Source\PSoC4/CapSense.c ****         /* Check if sensor is complex */
2243:Generated_Source\PSoC4/CapSense.c ****         if(0u != (snsType & CapSense_COMPLEX_SS_FLAG))
2244:Generated_Source\PSoC4/CapSense.c ****         {
2245:Generated_Source\PSoC4/CapSense.c ****             snsType &= (uint8)~CapSense_COMPLEX_SS_FLAG;
2246:Generated_Source\PSoC4/CapSense.c ****             snsNumber = (uint16)CapSense_maskTable[sensor];
2247:Generated_Source\PSoC4/CapSense.c **** 
2248:Generated_Source\PSoC4/CapSense.c ****             for (curSensor=0u; curSensor < snsNumber; curSensor++)
2249:Generated_Source\PSoC4/CapSense.c ****             {
2250:Generated_Source\PSoC4/CapSense.c ****                 sensor = CapSense_indexTable[snsType + curSensor];
2251:Generated_Source\PSoC4/CapSense.c ****                 CapSense_unscannedSnsDriveMode[sensor] = (uint8)sensorState;
2252:Generated_Source\PSoC4/CapSense.c ****             }
2253:Generated_Source\PSoC4/CapSense.c ****         }
2254:Generated_Source\PSoC4/CapSense.c ****         else
2255:Generated_Source\PSoC4/CapSense.c ****         {
2256:Generated_Source\PSoC4/CapSense.c ****             CapSense_unscannedSnsDriveMode[sensor] = (uint8)sensorState;
2257:Generated_Source\PSoC4/CapSense.c ****         }
2258:Generated_Source\PSoC4/CapSense.c ****     #else
2259:Generated_Source\PSoC4/CapSense.c ****         CapSense_unscannedSnsDriveMode[sensor] = (uint8)sensorState;
 2828              		.loc 1 2259 0
 2829 000a 3B68     		ldr	r3, [r7]
 2830 000c D9B2     		uxtb	r1, r3
 2831 000e 044A     		ldr	r2, .L160
 2832 0010 7B68     		ldr	r3, [r7, #4]
 2833 0012 D318     		adds	r3, r2, r3
 2834 0014 0A1C     		adds	r2, r1, #0
 2835 0016 1A70     		strb	r2, [r3]
2260:Generated_Source\PSoC4/CapSense.c ****     #endif /* (CapSense_IS_COMPLEX_SCANSLOTS) */
2261:Generated_Source\PSoC4/CapSense.c **** }
 2836              		.loc 1 2261 0
 2837 0018 C046     		nop
 2838 001a BD46     		mov	sp, r7
 2839 001c 02B0     		add	sp, sp, #8
 2840              		@ sp needed
 2841 001e 80BD     		pop	{r7, pc}
 2842              	.L161:
 2843              		.align	2
 2844              	.L160:
 2845 0020 00000000 		.word	CapSense_unscannedSnsDriveMode
 2846              		.cfi_endproc
 2847              	.LFE72:
 2848              		.size	CapSense_SetUnscannedSensorState, .-CapSense_SetUnscannedSensorState
 2849              		.section	.text.CapSense_NormalizeWidgets,"ax",%progbits
 2850              		.align	2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 91


 2851              		.global	CapSense_NormalizeWidgets
 2852              		.code	16
 2853              		.thumb_func
 2854              		.type	CapSense_NormalizeWidgets, %function
 2855              	CapSense_NormalizeWidgets:
 2856              	.LFB73:
2262:Generated_Source\PSoC4/CapSense.c **** 
2263:Generated_Source\PSoC4/CapSense.c **** #if(0u != CapSense_TOTAL_CENTROIDS_COUNT)
2264:Generated_Source\PSoC4/CapSense.c **** /*******************************************************************************
2265:Generated_Source\PSoC4/CapSense.c **** * Function Name: CapSense_NormalizeWidgets
2266:Generated_Source\PSoC4/CapSense.c **** ********************************************************************************
2267:Generated_Source\PSoC4/CapSense.c **** *
2268:Generated_Source\PSoC4/CapSense.c **** * Summary:
2269:Generated_Source\PSoC4/CapSense.c **** *  This API aligns all the parameters of the widget to the maximum parameter.
2270:Generated_Source\PSoC4/CapSense.c **** *
2271:Generated_Source\PSoC4/CapSense.c **** * Parameters:
2272:Generated_Source\PSoC4/CapSense.c **** *  uint32 widgetsNum: Number of widgets.
2273:Generated_Source\PSoC4/CapSense.c **** *  uint8 *dataPrt: pointer to array with widget parameters.
2274:Generated_Source\PSoC4/CapSense.c **** *
2275:Generated_Source\PSoC4/CapSense.c **** * Return:
2276:Generated_Source\PSoC4/CapSense.c **** *  None
2277:Generated_Source\PSoC4/CapSense.c **** *
2278:Generated_Source\PSoC4/CapSense.c **** * Global Variables:
2279:Generated_Source\PSoC4/CapSense.c **** *  CapSense_numberOfSensors[] - Number of sensors in the widget.
2280:Generated_Source\PSoC4/CapSense.c **** *  CapSense_rawDataIndex[currentWidget] - Contains the  1st sensor
2281:Generated_Source\PSoC4/CapSense.c **** *  position in the widget.
2282:Generated_Source\PSoC4/CapSense.c **** *
2283:Generated_Source\PSoC4/CapSense.c **** * Side Effects:
2284:Generated_Source\PSoC4/CapSense.c **** *  None
2285:Generated_Source\PSoC4/CapSense.c **** *
2286:Generated_Source\PSoC4/CapSense.c **** *******************************************************************************/
2287:Generated_Source\PSoC4/CapSense.c **** void CapSense_NormalizeWidgets(uint32 widgetsNum, uint8 dataPtr[])
2288:Generated_Source\PSoC4/CapSense.c **** {
 2857              		.loc 1 2288 0
 2858              		.cfi_startproc
 2859              		@ args = 0, pretend = 0, frame = 32
 2860              		@ frame_needed = 1, uses_anonymous_args = 0
 2861 0000 80B5     		push	{r7, lr}
 2862              		.cfi_def_cfa_offset 8
 2863              		.cfi_offset 7, -8
 2864              		.cfi_offset 14, -4
 2865 0002 88B0     		sub	sp, sp, #32
 2866              		.cfi_def_cfa_offset 40
 2867 0004 00AF     		add	r7, sp, #0
 2868              		.cfi_def_cfa_register 7
 2869 0006 7860     		str	r0, [r7, #4]
 2870 0008 3960     		str	r1, [r7]
2289:Generated_Source\PSoC4/CapSense.c ****     uint32 currentWidget;
2290:Generated_Source\PSoC4/CapSense.c ****     uint32 currentSensor;
2291:Generated_Source\PSoC4/CapSense.c ****     uint32 lastSensor;
2292:Generated_Source\PSoC4/CapSense.c ****     uint32 sensorsPerWidget;
2293:Generated_Source\PSoC4/CapSense.c ****     uint32 maxPerWidget;
2294:Generated_Source\PSoC4/CapSense.c **** 
2295:Generated_Source\PSoC4/CapSense.c ****     for(currentWidget = 0u; currentWidget < widgetsNum; currentWidget++)
 2871              		.loc 1 2295 0
 2872 000a 0023     		movs	r3, #0
 2873 000c FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 92


 2874 000e 3AE0     		b	.L163
 2875              	.L169:
2296:Generated_Source\PSoC4/CapSense.c ****     {
2297:Generated_Source\PSoC4/CapSense.c ****         maxPerWidget = 0u;
 2876              		.loc 1 2297 0
 2877 0010 0023     		movs	r3, #0
 2878 0012 7B61     		str	r3, [r7, #20]
2298:Generated_Source\PSoC4/CapSense.c **** 
2299:Generated_Source\PSoC4/CapSense.c ****         sensorsPerWidget = CapSense_numberOfSensors[currentWidget];
 2879              		.loc 1 2299 0
 2880 0014 204A     		ldr	r2, .L170
 2881 0016 FB69     		ldr	r3, [r7, #28]
 2882 0018 D318     		adds	r3, r2, r3
 2883 001a 1B78     		ldrb	r3, [r3]
 2884 001c 3B61     		str	r3, [r7, #16]
2300:Generated_Source\PSoC4/CapSense.c ****         currentSensor = CapSense_rawDataIndex[currentWidget];
 2885              		.loc 1 2300 0
 2886 001e 1F4A     		ldr	r2, .L170+4
 2887 0020 FB69     		ldr	r3, [r7, #28]
 2888 0022 D318     		adds	r3, r2, r3
 2889 0024 1B78     		ldrb	r3, [r3]
 2890 0026 BB61     		str	r3, [r7, #24]
2301:Generated_Source\PSoC4/CapSense.c ****         lastSensor = currentSensor + sensorsPerWidget;
 2891              		.loc 1 2301 0
 2892 0028 BA69     		ldr	r2, [r7, #24]
 2893 002a 3B69     		ldr	r3, [r7, #16]
 2894 002c D318     		adds	r3, r2, r3
 2895 002e FB60     		str	r3, [r7, #12]
2302:Generated_Source\PSoC4/CapSense.c **** 
2303:Generated_Source\PSoC4/CapSense.c ****         while(currentSensor < lastSensor)
 2896              		.loc 1 2303 0
 2897 0030 0FE0     		b	.L164
 2898              	.L166:
2304:Generated_Source\PSoC4/CapSense.c ****         {
2305:Generated_Source\PSoC4/CapSense.c ****             if(maxPerWidget < dataPtr[currentSensor])
 2899              		.loc 1 2305 0
 2900 0032 3A68     		ldr	r2, [r7]
 2901 0034 BB69     		ldr	r3, [r7, #24]
 2902 0036 D318     		adds	r3, r2, r3
 2903 0038 1B78     		ldrb	r3, [r3]
 2904 003a 1A00     		movs	r2, r3
 2905 003c 7B69     		ldr	r3, [r7, #20]
 2906 003e 9A42     		cmp	r2, r3
 2907 0040 04D9     		bls	.L165
2306:Generated_Source\PSoC4/CapSense.c ****             {
2307:Generated_Source\PSoC4/CapSense.c ****                 maxPerWidget = dataPtr[currentSensor];
 2908              		.loc 1 2307 0
 2909 0042 3A68     		ldr	r2, [r7]
 2910 0044 BB69     		ldr	r3, [r7, #24]
 2911 0046 D318     		adds	r3, r2, r3
 2912 0048 1B78     		ldrb	r3, [r3]
 2913 004a 7B61     		str	r3, [r7, #20]
 2914              	.L165:
2308:Generated_Source\PSoC4/CapSense.c ****             }
2309:Generated_Source\PSoC4/CapSense.c ****             currentSensor++;
 2915              		.loc 1 2309 0
 2916 004c BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 93


 2917 004e 0133     		adds	r3, r3, #1
 2918 0050 BB61     		str	r3, [r7, #24]
 2919              	.L164:
2303:Generated_Source\PSoC4/CapSense.c ****         {
 2920              		.loc 1 2303 0
 2921 0052 BA69     		ldr	r2, [r7, #24]
 2922 0054 FB68     		ldr	r3, [r7, #12]
 2923 0056 9A42     		cmp	r2, r3
 2924 0058 EBD3     		bcc	.L166
2310:Generated_Source\PSoC4/CapSense.c ****         }
2311:Generated_Source\PSoC4/CapSense.c **** 
2312:Generated_Source\PSoC4/CapSense.c ****         currentSensor = CapSense_rawDataIndex[currentWidget];
 2925              		.loc 1 2312 0
 2926 005a 104A     		ldr	r2, .L170+4
 2927 005c FB69     		ldr	r3, [r7, #28]
 2928 005e D318     		adds	r3, r2, r3
 2929 0060 1B78     		ldrb	r3, [r3]
 2930 0062 BB61     		str	r3, [r7, #24]
2313:Generated_Source\PSoC4/CapSense.c **** 
2314:Generated_Source\PSoC4/CapSense.c ****         while(currentSensor < lastSensor)
 2931              		.loc 1 2314 0
 2932 0064 08E0     		b	.L167
 2933              	.L168:
2315:Generated_Source\PSoC4/CapSense.c ****         {
2316:Generated_Source\PSoC4/CapSense.c ****             dataPtr[currentSensor] = (uint8)maxPerWidget;
 2934              		.loc 1 2316 0
 2935 0066 3A68     		ldr	r2, [r7]
 2936 0068 BB69     		ldr	r3, [r7, #24]
 2937 006a D318     		adds	r3, r2, r3
 2938 006c 7A69     		ldr	r2, [r7, #20]
 2939 006e D2B2     		uxtb	r2, r2
 2940 0070 1A70     		strb	r2, [r3]
2317:Generated_Source\PSoC4/CapSense.c ****             currentSensor++;
 2941              		.loc 1 2317 0
 2942 0072 BB69     		ldr	r3, [r7, #24]
 2943 0074 0133     		adds	r3, r3, #1
 2944 0076 BB61     		str	r3, [r7, #24]
 2945              	.L167:
2314:Generated_Source\PSoC4/CapSense.c ****         {
 2946              		.loc 1 2314 0
 2947 0078 BA69     		ldr	r2, [r7, #24]
 2948 007a FB68     		ldr	r3, [r7, #12]
 2949 007c 9A42     		cmp	r2, r3
 2950 007e F2D3     		bcc	.L168
2295:Generated_Source\PSoC4/CapSense.c ****     {
 2951              		.loc 1 2295 0 discriminator 2
 2952 0080 FB69     		ldr	r3, [r7, #28]
 2953 0082 0133     		adds	r3, r3, #1
 2954 0084 FB61     		str	r3, [r7, #28]
 2955              	.L163:
2295:Generated_Source\PSoC4/CapSense.c ****     {
 2956              		.loc 1 2295 0 is_stmt 0 discriminator 1
 2957 0086 FA69     		ldr	r2, [r7, #28]
 2958 0088 7B68     		ldr	r3, [r7, #4]
 2959 008a 9A42     		cmp	r2, r3
 2960 008c C0D3     		bcc	.L169
2318:Generated_Source\PSoC4/CapSense.c ****         }
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 94


2319:Generated_Source\PSoC4/CapSense.c ****     }
2320:Generated_Source\PSoC4/CapSense.c **** }
 2961              		.loc 1 2320 0 is_stmt 1
 2962 008e C046     		nop
 2963 0090 BD46     		mov	sp, r7
 2964 0092 08B0     		add	sp, sp, #32
 2965              		@ sp needed
 2966 0094 80BD     		pop	{r7, pc}
 2967              	.L171:
 2968 0096 C046     		.align	2
 2969              	.L170:
 2970 0098 00000000 		.word	CapSense_numberOfSensors
 2971 009c 00000000 		.word	CapSense_rawDataIndex
 2972              		.cfi_endproc
 2973              	.LFE73:
 2974              		.size	CapSense_NormalizeWidgets, .-CapSense_NormalizeWidgets
 2975              		.bss
 2976              	CapSense_initVar.5426:
 2977 000e 00       		.space	1
 2978              		.text
 2979              	.Letext0:
 2980              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2981              		.file 3 "Generated_Source\\PSoC4\\CapSense_CSHL.h"
 2982              		.section	.debug_info,"",%progbits
 2983              	.Ldebug_info0:
 2984 0000 400C0000 		.4byte	0xc40
 2985 0004 0400     		.2byte	0x4
 2986 0006 00000000 		.4byte	.Ldebug_abbrev0
 2987 000a 04       		.byte	0x4
 2988 000b 01       		.uleb128 0x1
 2989 000c B4000000 		.4byte	.LASF125
 2990 0010 0C       		.byte	0xc
 2991 0011 25030000 		.4byte	.LASF126
 2992 0015 3F090000 		.4byte	.LASF127
 2993 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2994 001d 00000000 		.4byte	0
 2995 0021 00000000 		.4byte	.Ldebug_line0
 2996 0025 02       		.uleb128 0x2
 2997 0026 01       		.byte	0x1
 2998 0027 06       		.byte	0x6
 2999 0028 D8080000 		.4byte	.LASF0
 3000 002c 02       		.uleb128 0x2
 3001 002d 01       		.byte	0x1
 3002 002e 08       		.byte	0x8
 3003 002f 08080000 		.4byte	.LASF1
 3004 0033 02       		.uleb128 0x2
 3005 0034 02       		.byte	0x2
 3006 0035 05       		.byte	0x5
 3007 0036 B8060000 		.4byte	.LASF2
 3008 003a 02       		.uleb128 0x2
 3009 003b 02       		.byte	0x2
 3010 003c 07       		.byte	0x7
 3011 003d EC080000 		.4byte	.LASF3
 3012 0041 02       		.uleb128 0x2
 3013 0042 04       		.byte	0x4
 3014 0043 05       		.byte	0x5
 3015 0044 C2060000 		.4byte	.LASF4
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 95


 3016 0048 02       		.uleb128 0x2
 3017 0049 04       		.byte	0x4
 3018 004a 07       		.byte	0x7
 3019 004b EA070000 		.4byte	.LASF5
 3020 004f 02       		.uleb128 0x2
 3021 0050 08       		.byte	0x8
 3022 0051 05       		.byte	0x5
 3023 0052 3F050000 		.4byte	.LASF6
 3024 0056 02       		.uleb128 0x2
 3025 0057 08       		.byte	0x8
 3026 0058 07       		.byte	0x7
 3027 0059 96020000 		.4byte	.LASF7
 3028 005d 03       		.uleb128 0x3
 3029 005e 04       		.byte	0x4
 3030 005f 05       		.byte	0x5
 3031 0060 696E7400 		.ascii	"int\000"
 3032 0064 02       		.uleb128 0x2
 3033 0065 04       		.byte	0x4
 3034 0066 07       		.byte	0x7
 3035 0067 6B000000 		.4byte	.LASF8
 3036 006b 04       		.uleb128 0x4
 3037 006c 0B090000 		.4byte	.LASF9
 3038 0070 02       		.byte	0x2
 3039 0071 E401     		.2byte	0x1e4
 3040 0073 2C000000 		.4byte	0x2c
 3041 0077 04       		.uleb128 0x4
 3042 0078 BC040000 		.4byte	.LASF10
 3043 007c 02       		.byte	0x2
 3044 007d E501     		.2byte	0x1e5
 3045 007f 3A000000 		.4byte	0x3a
 3046 0083 04       		.uleb128 0x4
 3047 0084 EC050000 		.4byte	.LASF11
 3048 0088 02       		.byte	0x2
 3049 0089 E601     		.2byte	0x1e6
 3050 008b 48000000 		.4byte	0x48
 3051 008f 02       		.uleb128 0x2
 3052 0090 04       		.byte	0x4
 3053 0091 04       		.byte	0x4
 3054 0092 90020000 		.4byte	.LASF12
 3055 0096 02       		.uleb128 0x2
 3056 0097 08       		.byte	0x8
 3057 0098 04       		.byte	0x4
 3058 0099 11090000 		.4byte	.LASF13
 3059 009d 02       		.uleb128 0x2
 3060 009e 01       		.byte	0x1
 3061 009f 08       		.byte	0x8
 3062 00a0 88040000 		.4byte	.LASF14
 3063 00a4 04       		.uleb128 0x4
 3064 00a5 A4000000 		.4byte	.LASF15
 3065 00a9 02       		.byte	0x2
 3066 00aa 8E02     		.2byte	0x28e
 3067 00ac B0000000 		.4byte	0xb0
 3068 00b0 05       		.uleb128 0x5
 3069 00b1 6B000000 		.4byte	0x6b
 3070 00b5 04       		.uleb128 0x4
 3071 00b6 1D060000 		.4byte	.LASF16
 3072 00ba 02       		.byte	0x2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 96


 3073 00bb 9002     		.2byte	0x290
 3074 00bd C1000000 		.4byte	0xc1
 3075 00c1 05       		.uleb128 0x5
 3076 00c2 83000000 		.4byte	0x83
 3077 00c6 02       		.uleb128 0x2
 3078 00c7 04       		.byte	0x4
 3079 00c8 07       		.byte	0x7
 3080 00c9 E1070000 		.4byte	.LASF17
 3081 00cd 02       		.uleb128 0x2
 3082 00ce 08       		.byte	0x8
 3083 00cf 04       		.byte	0x4
 3084 00d0 06060000 		.4byte	.LASF18
 3085 00d4 06       		.uleb128 0x6
 3086 00d5 04       		.byte	0x4
 3087 00d6 6B000000 		.4byte	0x6b
 3088 00da 06       		.uleb128 0x6
 3089 00db 04       		.byte	0x4
 3090 00dc E0000000 		.4byte	0xe0
 3091 00e0 07       		.uleb128 0x7
 3092 00e1 6B000000 		.4byte	0x6b
 3093 00e5 08       		.uleb128 0x8
 3094 00e6 88060000 		.4byte	.LASF19
 3095 00ea 01       		.byte	0x1
 3096 00eb A7       		.byte	0xa7
 3097 00ec 00000000 		.4byte	.LFB34
 3098 00f0 38000000 		.4byte	.LFE34-.LFB34
 3099 00f4 01       		.uleb128 0x1
 3100 00f5 9C       		.byte	0x9c
 3101 00f6 09010000 		.4byte	0x109
 3102 00fa 09       		.uleb128 0x9
 3103 00fb 18090000 		.4byte	.LASF21
 3104 00ff 01       		.byte	0x1
 3105 0100 A9       		.byte	0xa9
 3106 0101 83000000 		.4byte	0x83
 3107 0105 02       		.uleb128 0x2
 3108 0106 91       		.byte	0x91
 3109 0107 74       		.sleb128 -12
 3110 0108 00       		.byte	0
 3111 0109 08       		.uleb128 0x8
 3112 010a EE010000 		.4byte	.LASF20
 3113 010e 01       		.byte	0x1
 3114 010f E8       		.byte	0xe8
 3115 0110 00000000 		.4byte	.LFB35
 3116 0114 BC000000 		.4byte	.LFE35-.LFB35
 3117 0118 01       		.uleb128 0x1
 3118 0119 9C       		.byte	0x9c
 3119 011a 2D010000 		.4byte	0x12d
 3120 011e 09       		.uleb128 0x9
 3121 011f FF080000 		.4byte	.LASF22
 3122 0123 01       		.byte	0x1
 3123 0124 EA       		.byte	0xea
 3124 0125 83000000 		.4byte	0x83
 3125 0129 02       		.uleb128 0x2
 3126 012a 91       		.byte	0x91
 3127 012b 74       		.sleb128 -12
 3128 012c 00       		.byte	0
 3129 012d 0A       		.uleb128 0xa
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 97


 3130 012e B9030000 		.4byte	.LASF23
 3131 0132 01       		.byte	0x1
 3132 0133 3D01     		.2byte	0x13d
 3133 0135 00000000 		.4byte	.LFB36
 3134 0139 54000000 		.4byte	.LFE36-.LFB36
 3135 013d 01       		.uleb128 0x1
 3136 013e 9C       		.byte	0x9c
 3137 013f 53010000 		.4byte	0x153
 3138 0143 0B       		.uleb128 0xb
 3139 0144 FF080000 		.4byte	.LASF22
 3140 0148 01       		.byte	0x1
 3141 0149 3F01     		.2byte	0x13f
 3142 014b 83000000 		.4byte	0x83
 3143 014f 02       		.uleb128 0x2
 3144 0150 91       		.byte	0x91
 3145 0151 74       		.sleb128 -12
 3146 0152 00       		.byte	0
 3147 0153 0A       		.uleb128 0xa
 3148 0154 D2070000 		.4byte	.LASF24
 3149 0158 01       		.byte	0x1
 3150 0159 7801     		.2byte	0x178
 3151 015b 00000000 		.4byte	.LFB37
 3152 015f 44000000 		.4byte	.LFE37-.LFB37
 3153 0163 01       		.uleb128 0x1
 3154 0164 9C       		.byte	0x9c
 3155 0165 7C010000 		.4byte	0x17c
 3156 0169 0B       		.uleb128 0xb
 3157 016a 3A040000 		.4byte	.LASF25
 3158 016e 01       		.byte	0x1
 3159 016f 7B01     		.2byte	0x17b
 3160 0171 6B000000 		.4byte	0x6b
 3161 0175 05       		.uleb128 0x5
 3162 0176 03       		.byte	0x3
 3163 0177 0E000000 		.4byte	CapSense_initVar.5426
 3164 017b 00       		.byte	0
 3165 017c 0C       		.uleb128 0xc
 3166 017d 28020000 		.4byte	.LASF34
 3167 0181 01       		.byte	0x1
 3168 0182 D401     		.2byte	0x1d4
 3169 0184 00000000 		.4byte	.LFB38
 3170 0188 38000000 		.4byte	.LFE38-.LFB38
 3171 018c 01       		.uleb128 0x1
 3172 018d 9C       		.byte	0x9c
 3173 018e 0D       		.uleb128 0xd
 3174 018f 93040000 		.4byte	.LASF36
 3175 0193 01       		.byte	0x1
 3176 0194 FA01     		.2byte	0x1fa
 3177 0196 6B000000 		.4byte	0x6b
 3178 019a 00000000 		.4byte	.LFB39
 3179 019e 4C000000 		.4byte	.LFE39-.LFB39
 3180 01a2 01       		.uleb128 0x1
 3181 01a3 9C       		.byte	0x9c
 3182 01a4 C7010000 		.4byte	0x1c7
 3183 01a8 0E       		.uleb128 0xe
 3184 01a9 FD050000 		.4byte	.LASF28
 3185 01ad 01       		.byte	0x1
 3186 01ae FA01     		.2byte	0x1fa
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 98


 3187 01b0 6B000000 		.4byte	0x6b
 3188 01b4 02       		.uleb128 0x2
 3189 01b5 91       		.byte	0x91
 3190 01b6 6F       		.sleb128 -17
 3191 01b7 0B       		.uleb128 0xb
 3192 01b8 4D050000 		.4byte	.LASF26
 3193 01bc 01       		.byte	0x1
 3194 01bd FC01     		.2byte	0x1fc
 3195 01bf 83000000 		.4byte	0x83
 3196 01c3 02       		.uleb128 0x2
 3197 01c4 91       		.byte	0x91
 3198 01c5 74       		.sleb128 -12
 3199 01c6 00       		.byte	0
 3200 01c7 0A       		.uleb128 0xa
 3201 01c8 08040000 		.4byte	.LASF27
 3202 01cc 01       		.byte	0x1
 3203 01cd 2A02     		.2byte	0x22a
 3204 01cf 00000000 		.4byte	.LFB40
 3205 01d3 34000000 		.4byte	.LFE40-.LFB40
 3206 01d7 01       		.uleb128 0x1
 3207 01d8 9C       		.byte	0x9c
 3208 01d9 ED010000 		.4byte	0x1ed
 3209 01dd 0E       		.uleb128 0xe
 3210 01de 6E040000 		.4byte	.LASF29
 3211 01e2 01       		.byte	0x1
 3212 01e3 2A02     		.2byte	0x22a
 3213 01e5 83000000 		.4byte	0x83
 3214 01e9 02       		.uleb128 0x2
 3215 01ea 91       		.byte	0x91
 3216 01eb 74       		.sleb128 -12
 3217 01ec 00       		.byte	0
 3218 01ed 0A       		.uleb128 0xa
 3219 01ee 42010000 		.4byte	.LASF30
 3220 01f2 01       		.byte	0x1
 3221 01f3 5102     		.2byte	0x251
 3222 01f5 00000000 		.4byte	.LFB41
 3223 01f9 DC000000 		.4byte	.LFE41-.LFB41
 3224 01fd 01       		.uleb128 0x1
 3225 01fe 9C       		.byte	0x9c
 3226 01ff 40020000 		.4byte	0x240
 3227 0203 0E       		.uleb128 0xe
 3228 0204 C2020000 		.4byte	.LASF31
 3229 0208 01       		.byte	0x1
 3230 0209 5102     		.2byte	0x251
 3231 020b 83000000 		.4byte	0x83
 3232 020f 02       		.uleb128 0x2
 3233 0210 91       		.byte	0x91
 3234 0211 64       		.sleb128 -28
 3235 0212 0B       		.uleb128 0xb
 3236 0213 29040000 		.4byte	.LASF32
 3237 0217 01       		.byte	0x1
 3238 0218 5302     		.2byte	0x253
 3239 021a 83000000 		.4byte	0x83
 3240 021e 02       		.uleb128 0x2
 3241 021f 91       		.byte	0x91
 3242 0220 74       		.sleb128 -12
 3243 0221 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 99


 3244 0222 12060000 		.4byte	.LASF33
 3245 0226 01       		.byte	0x1
 3246 0227 5402     		.2byte	0x254
 3247 0229 83000000 		.4byte	0x83
 3248 022d 02       		.uleb128 0x2
 3249 022e 91       		.byte	0x91
 3250 022f 6C       		.sleb128 -20
 3251 0230 0B       		.uleb128 0xb
 3252 0231 FD050000 		.4byte	.LASF28
 3253 0235 01       		.byte	0x1
 3254 0236 5502     		.2byte	0x255
 3255 0238 83000000 		.4byte	0x83
 3256 023c 02       		.uleb128 0x2
 3257 023d 91       		.byte	0x91
 3258 023e 70       		.sleb128 -16
 3259 023f 00       		.byte	0
 3260 0240 0C       		.uleb128 0xc
 3261 0241 0B050000 		.4byte	.LASF35
 3262 0245 01       		.byte	0x1
 3263 0246 A602     		.2byte	0x2a6
 3264 0248 00000000 		.4byte	.LFB42
 3265 024c 58000000 		.4byte	.LFE42-.LFB42
 3266 0250 01       		.uleb128 0x1
 3267 0251 9C       		.byte	0x9c
 3268 0252 0F       		.uleb128 0xf
 3269 0253 87010000 		.4byte	.LASF68
 3270 0257 01       		.byte	0x1
 3271 0258 CF02     		.2byte	0x2cf
 3272 025a 83000000 		.4byte	0x83
 3273 025e 00000000 		.4byte	.LFB43
 3274 0262 1C000000 		.4byte	.LFE43-.LFB43
 3275 0266 01       		.uleb128 0x1
 3276 0267 9C       		.byte	0x9c
 3277 0268 10       		.uleb128 0x10
 3278 0269 28080000 		.4byte	.LASF37
 3279 026d 01       		.byte	0x1
 3280 026e ED02     		.2byte	0x2ed
 3281 0270 77000000 		.4byte	0x77
 3282 0274 00000000 		.4byte	.LFB44
 3283 0278 1C000000 		.4byte	.LFE44-.LFB44
 3284 027c 01       		.uleb128 0x1
 3285 027d 9C       		.byte	0x9c
 3286 027e 92020000 		.4byte	0x292
 3287 0282 0E       		.uleb128 0xe
 3288 0283 6E040000 		.4byte	.LASF29
 3289 0287 01       		.byte	0x1
 3290 0288 ED02     		.2byte	0x2ed
 3291 028a 83000000 		.4byte	0x83
 3292 028e 02       		.uleb128 0x2
 3293 028f 91       		.byte	0x91
 3294 0290 74       		.sleb128 -12
 3295 0291 00       		.byte	0
 3296 0292 11       		.uleb128 0x11
 3297 0293 85030000 		.4byte	.LASF38
 3298 0297 01       		.byte	0x1
 3299 0298 0803     		.2byte	0x308
 3300 029a 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 100


 3301 029e 28000000 		.4byte	.LFE45-.LFB45
 3302 02a2 01       		.uleb128 0x1
 3303 02a3 9C       		.byte	0x9c
 3304 02a4 C7020000 		.4byte	0x2c7
 3305 02a8 0E       		.uleb128 0xe
 3306 02a9 6E040000 		.4byte	.LASF29
 3307 02ad 01       		.byte	0x1
 3308 02ae 0803     		.2byte	0x308
 3309 02b0 83000000 		.4byte	0x83
 3310 02b4 02       		.uleb128 0x2
 3311 02b5 91       		.byte	0x91
 3312 02b6 74       		.sleb128 -12
 3313 02b7 0E       		.uleb128 0xe
 3314 02b8 6E030000 		.4byte	.LASF39
 3315 02bc 01       		.byte	0x1
 3316 02bd 0803     		.2byte	0x308
 3317 02bf 77000000 		.4byte	0x77
 3318 02c3 02       		.uleb128 0x2
 3319 02c4 91       		.byte	0x91
 3320 02c5 72       		.sleb128 -14
 3321 02c6 00       		.byte	0
 3322 02c7 11       		.uleb128 0x11
 3323 02c8 ED030000 		.4byte	.LASF40
 3324 02cc 01       		.byte	0x1
 3325 02cd 3203     		.2byte	0x332
 3326 02cf 00000000 		.4byte	.LFB46
 3327 02d3 20000000 		.4byte	.LFE46-.LFB46
 3328 02d7 01       		.uleb128 0x1
 3329 02d8 9C       		.byte	0x9c
 3330 02d9 FC020000 		.4byte	0x2fc
 3331 02dd 0E       		.uleb128 0xe
 3332 02de C2020000 		.4byte	.LASF31
 3333 02e2 01       		.byte	0x1
 3334 02e3 3203     		.2byte	0x332
 3335 02e5 83000000 		.4byte	0x83
 3336 02e9 02       		.uleb128 0x2
 3337 02ea 91       		.byte	0x91
 3338 02eb 74       		.sleb128 -12
 3339 02ec 0E       		.uleb128 0xe
 3340 02ed C3040000 		.4byte	.LASF41
 3341 02f1 01       		.byte	0x1
 3342 02f2 3203     		.2byte	0x332
 3343 02f4 83000000 		.4byte	0x83
 3344 02f8 02       		.uleb128 0x2
 3345 02f9 91       		.byte	0x91
 3346 02fa 70       		.sleb128 -16
 3347 02fb 00       		.byte	0
 3348 02fc 10       		.uleb128 0x10
 3349 02fd 0A030000 		.4byte	.LASF42
 3350 0301 01       		.byte	0x1
 3351 0302 5B03     		.2byte	0x35b
 3352 0304 83000000 		.4byte	0x83
 3353 0308 00000000 		.4byte	.LFB47
 3354 030c 1C000000 		.4byte	.LFE47-.LFB47
 3355 0310 01       		.uleb128 0x1
 3356 0311 9C       		.byte	0x9c
 3357 0312 26030000 		.4byte	0x326
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 101


 3358 0316 0E       		.uleb128 0xe
 3359 0317 C2020000 		.4byte	.LASF31
 3360 031b 01       		.byte	0x1
 3361 031c 5B03     		.2byte	0x35b
 3362 031e 83000000 		.4byte	0x83
 3363 0322 02       		.uleb128 0x2
 3364 0323 91       		.byte	0x91
 3365 0324 74       		.sleb128 -12
 3366 0325 00       		.byte	0
 3367 0326 0A       		.uleb128 0xa
 3368 0327 49020000 		.4byte	.LASF43
 3369 032b 01       		.byte	0x1
 3370 032c 7603     		.2byte	0x376
 3371 032e 00000000 		.4byte	.LFB48
 3372 0332 28000000 		.4byte	.LFE48-.LFB48
 3373 0336 01       		.uleb128 0x1
 3374 0337 9C       		.byte	0x9c
 3375 0338 4C030000 		.4byte	0x34c
 3376 033c 0B       		.uleb128 0xb
 3377 033d FD050000 		.4byte	.LASF28
 3378 0341 01       		.byte	0x1
 3379 0342 7803     		.2byte	0x378
 3380 0344 83000000 		.4byte	0x83
 3381 0348 02       		.uleb128 0x2
 3382 0349 91       		.byte	0x91
 3383 034a 74       		.sleb128 -12
 3384 034b 00       		.byte	0
 3385 034c 0A       		.uleb128 0xa
 3386 034d 7B050000 		.4byte	.LASF44
 3387 0351 01       		.byte	0x1
 3388 0352 1404     		.2byte	0x414
 3389 0354 00000000 		.4byte	.LFB49
 3390 0358 CC000000 		.4byte	.LFE49-.LFB49
 3391 035c 01       		.uleb128 0x1
 3392 035d 9C       		.byte	0x9c
 3393 035e BD030000 		.4byte	0x3bd
 3394 0362 0E       		.uleb128 0xe
 3395 0363 6E040000 		.4byte	.LASF29
 3396 0367 01       		.byte	0x1
 3397 0368 1404     		.2byte	0x414
 3398 036a 83000000 		.4byte	0x83
 3399 036e 02       		.uleb128 0x2
 3400 036f 91       		.byte	0x91
 3401 0370 5C       		.sleb128 -36
 3402 0371 0B       		.uleb128 0xb
 3403 0372 97010000 		.4byte	.LASF45
 3404 0376 01       		.byte	0x1
 3405 0377 1604     		.2byte	0x416
 3406 0379 6B000000 		.4byte	0x6b
 3407 037d 02       		.uleb128 0x2
 3408 037e 91       		.byte	0x91
 3409 037f 6B       		.sleb128 -21
 3410 0380 0B       		.uleb128 0xb
 3411 0381 56010000 		.4byte	.LASF46
 3412 0385 01       		.byte	0x1
 3413 0386 1704     		.2byte	0x417
 3414 0388 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 102


 3415 038c 02       		.uleb128 0x2
 3416 038d 91       		.byte	0x91
 3417 038e 6A       		.sleb128 -22
 3418 038f 0B       		.uleb128 0xb
 3419 0390 95000000 		.4byte	.LASF47
 3420 0394 01       		.byte	0x1
 3421 0395 1804     		.2byte	0x418
 3422 0397 6B000000 		.4byte	0x6b
 3423 039b 02       		.uleb128 0x2
 3424 039c 91       		.byte	0x91
 3425 039d 69       		.sleb128 -23
 3426 039e 0B       		.uleb128 0xb
 3427 039f 74030000 		.4byte	.LASF48
 3428 03a3 01       		.byte	0x1
 3429 03a4 1904     		.2byte	0x419
 3430 03a6 83000000 		.4byte	0x83
 3431 03aa 02       		.uleb128 0x2
 3432 03ab 91       		.byte	0x91
 3433 03ac 64       		.sleb128 -28
 3434 03ad 0B       		.uleb128 0xb
 3435 03ae FC070000 		.4byte	.LASF49
 3436 03b2 01       		.byte	0x1
 3437 03b3 1A04     		.2byte	0x41a
 3438 03b5 83000000 		.4byte	0x83
 3439 03b9 02       		.uleb128 0x2
 3440 03ba 91       		.byte	0x91
 3441 03bb 6C       		.sleb128 -20
 3442 03bc 00       		.byte	0
 3443 03bd 0A       		.uleb128 0xa
 3444 03be D7010000 		.4byte	.LASF50
 3445 03c2 01       		.byte	0x1
 3446 03c3 4904     		.2byte	0x449
 3447 03c5 00000000 		.4byte	.LFB50
 3448 03c9 1C010000 		.4byte	.LFE50-.LFB50
 3449 03cd 01       		.uleb128 0x1
 3450 03ce 9C       		.byte	0x9c
 3451 03cf 4C040000 		.4byte	0x44c
 3452 03d3 0E       		.uleb128 0xe
 3453 03d4 6E040000 		.4byte	.LASF29
 3454 03d8 01       		.byte	0x1
 3455 03d9 4904     		.2byte	0x449
 3456 03db 83000000 		.4byte	0x83
 3457 03df 02       		.uleb128 0x2
 3458 03e0 91       		.byte	0x91
 3459 03e1 54       		.sleb128 -44
 3460 03e2 0B       		.uleb128 0xb
 3461 03e3 95000000 		.4byte	.LASF47
 3462 03e7 01       		.byte	0x1
 3463 03e8 4B04     		.2byte	0x44b
 3464 03ea 6B000000 		.4byte	0x6b
 3465 03ee 02       		.uleb128 0x2
 3466 03ef 91       		.byte	0x91
 3467 03f0 61       		.sleb128 -31
 3468 03f1 0B       		.uleb128 0xb
 3469 03f2 74030000 		.4byte	.LASF48
 3470 03f6 01       		.byte	0x1
 3471 03f7 4C04     		.2byte	0x44c
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 103


 3472 03f9 83000000 		.4byte	0x83
 3473 03fd 02       		.uleb128 0x2
 3474 03fe 91       		.byte	0x91
 3475 03ff 5C       		.sleb128 -36
 3476 0400 0B       		.uleb128 0xb
 3477 0401 FC070000 		.4byte	.LASF49
 3478 0405 01       		.byte	0x1
 3479 0406 4E04     		.2byte	0x44e
 3480 0408 83000000 		.4byte	0x83
 3481 040c 02       		.uleb128 0x2
 3482 040d 91       		.byte	0x91
 3483 040e 64       		.sleb128 -28
 3484 040f 0B       		.uleb128 0xb
 3485 0410 56010000 		.4byte	.LASF46
 3486 0414 01       		.byte	0x1
 3487 0415 4F04     		.2byte	0x44f
 3488 0417 6B000000 		.4byte	0x6b
 3489 041b 02       		.uleb128 0x2
 3490 041c 91       		.byte	0x91
 3491 041d 63       		.sleb128 -29
 3492 041e 0B       		.uleb128 0xb
 3493 041f 97010000 		.4byte	.LASF45
 3494 0423 01       		.byte	0x1
 3495 0424 5004     		.2byte	0x450
 3496 0426 6B000000 		.4byte	0x6b
 3497 042a 02       		.uleb128 0x2
 3498 042b 91       		.byte	0x91
 3499 042c 62       		.sleb128 -30
 3500 042d 0B       		.uleb128 0xb
 3501 042e 06020000 		.4byte	.LASF51
 3502 0432 01       		.byte	0x1
 3503 0433 5204     		.2byte	0x452
 3504 0435 83000000 		.4byte	0x83
 3505 0439 02       		.uleb128 0x2
 3506 043a 91       		.byte	0x91
 3507 043b 6C       		.sleb128 -20
 3508 043c 0B       		.uleb128 0xb
 3509 043d C9030000 		.4byte	.LASF52
 3510 0441 01       		.byte	0x1
 3511 0442 5304     		.2byte	0x453
 3512 0444 83000000 		.4byte	0x83
 3513 0448 02       		.uleb128 0x2
 3514 0449 91       		.byte	0x91
 3515 044a 68       		.sleb128 -24
 3516 044b 00       		.byte	0
 3517 044c 0A       		.uleb128 0xa
 3518 044d F4060000 		.4byte	.LASF53
 3519 0451 01       		.byte	0x1
 3520 0452 9604     		.2byte	0x496
 3521 0454 00000000 		.4byte	.LFB51
 3522 0458 6C000000 		.4byte	.LFE51-.LFB51
 3523 045c 01       		.uleb128 0x1
 3524 045d 9C       		.byte	0x9c
 3525 045e 9F040000 		.4byte	0x49f
 3526 0462 0E       		.uleb128 0xe
 3527 0463 35090000 		.4byte	.LASF54
 3528 0467 01       		.byte	0x1
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 104


 3529 0468 9604     		.2byte	0x496
 3530 046a 83000000 		.4byte	0x83
 3531 046e 02       		.uleb128 0x2
 3532 046f 91       		.byte	0x91
 3533 0470 64       		.sleb128 -28
 3534 0471 0B       		.uleb128 0xb
 3535 0472 18090000 		.4byte	.LASF21
 3536 0476 01       		.byte	0x1
 3537 0477 9804     		.2byte	0x498
 3538 0479 6B000000 		.4byte	0x6b
 3539 047d 02       		.uleb128 0x2
 3540 047e 91       		.byte	0x91
 3541 047f 77       		.sleb128 -9
 3542 0480 0B       		.uleb128 0xb
 3543 0481 1C040000 		.4byte	.LASF55
 3544 0485 01       		.byte	0x1
 3545 0486 9D04     		.2byte	0x49d
 3546 0488 83000000 		.4byte	0x83
 3547 048c 02       		.uleb128 0x2
 3548 048d 91       		.byte	0x91
 3549 048e 70       		.sleb128 -16
 3550 048f 0B       		.uleb128 0xb
 3551 0490 E8040000 		.4byte	.LASF56
 3552 0494 01       		.byte	0x1
 3553 0495 9E04     		.2byte	0x49e
 3554 0497 83000000 		.4byte	0x83
 3555 049b 02       		.uleb128 0x2
 3556 049c 91       		.byte	0x91
 3557 049d 6C       		.sleb128 -20
 3558 049e 00       		.byte	0
 3559 049f 0A       		.uleb128 0xa
 3560 04a0 23060000 		.4byte	.LASF57
 3561 04a4 01       		.byte	0x1
 3562 04a5 DF04     		.2byte	0x4df
 3563 04a7 00000000 		.4byte	.LFB52
 3564 04ab 34000000 		.4byte	.LFE52-.LFB52
 3565 04af 01       		.uleb128 0x1
 3566 04b0 9C       		.byte	0x9c
 3567 04b1 C5040000 		.4byte	0x4c5
 3568 04b5 0B       		.uleb128 0xb
 3569 04b6 74030000 		.4byte	.LASF48
 3570 04ba 01       		.byte	0x1
 3571 04bb E104     		.2byte	0x4e1
 3572 04bd 83000000 		.4byte	0x83
 3573 04c1 02       		.uleb128 0x2
 3574 04c2 91       		.byte	0x91
 3575 04c3 74       		.sleb128 -12
 3576 04c4 00       		.byte	0
 3577 04c5 11       		.uleb128 0x11
 3578 04c6 9F060000 		.4byte	.LASF58
 3579 04ca 01       		.byte	0x1
 3580 04cb 1305     		.2byte	0x513
 3581 04cd 00000000 		.4byte	.LFB53
 3582 04d1 58000000 		.4byte	.LFE53-.LFB53
 3583 04d5 01       		.uleb128 0x1
 3584 04d6 9C       		.byte	0x9c
 3585 04d7 27050000 		.4byte	0x527
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 105


 3586 04db 0E       		.uleb128 0xe
 3587 04dc 35090000 		.4byte	.LASF54
 3588 04e0 01       		.byte	0x1
 3589 04e1 1305     		.2byte	0x513
 3590 04e3 83000000 		.4byte	0x83
 3591 04e7 02       		.uleb128 0x2
 3592 04e8 91       		.byte	0x91
 3593 04e9 6C       		.sleb128 -20
 3594 04ea 0E       		.uleb128 0xe
 3595 04eb F3050000 		.4byte	.LASF59
 3596 04ef 01       		.byte	0x1
 3597 04f0 1305     		.2byte	0x513
 3598 04f2 83000000 		.4byte	0x83
 3599 04f6 02       		.uleb128 0x2
 3600 04f7 91       		.byte	0x91
 3601 04f8 68       		.sleb128 -24
 3602 04f9 0E       		.uleb128 0xe
 3603 04fa 5A060000 		.4byte	.LASF60
 3604 04fe 01       		.byte	0x1
 3605 04ff 1305     		.2byte	0x513
 3606 0501 83000000 		.4byte	0x83
 3607 0505 02       		.uleb128 0x2
 3608 0506 91       		.byte	0x91
 3609 0507 64       		.sleb128 -28
 3610 0508 0B       		.uleb128 0xb
 3611 0509 97010000 		.4byte	.LASF45
 3612 050d 01       		.byte	0x1
 3613 050e 1505     		.2byte	0x515
 3614 0510 83000000 		.4byte	0x83
 3615 0514 02       		.uleb128 0x2
 3616 0515 91       		.byte	0x91
 3617 0516 74       		.sleb128 -12
 3618 0517 0B       		.uleb128 0xb
 3619 0518 74030000 		.4byte	.LASF48
 3620 051c 01       		.byte	0x1
 3621 051d 1605     		.2byte	0x516
 3622 051f 83000000 		.4byte	0x83
 3623 0523 02       		.uleb128 0x2
 3624 0524 91       		.byte	0x91
 3625 0525 70       		.sleb128 -16
 3626 0526 00       		.byte	0
 3627 0527 0A       		.uleb128 0xa
 3628 0528 D5030000 		.4byte	.LASF61
 3629 052c 01       		.byte	0x1
 3630 052d 3705     		.2byte	0x537
 3631 052f 00000000 		.4byte	.LFB54
 3632 0533 84010000 		.4byte	.LFE54-.LFB54
 3633 0537 01       		.uleb128 0x1
 3634 0538 9C       		.byte	0x9c
 3635 0539 98050000 		.4byte	0x598
 3636 053d 0E       		.uleb128 0xe
 3637 053e 6E040000 		.4byte	.LASF29
 3638 0542 01       		.byte	0x1
 3639 0543 3705     		.2byte	0x537
 3640 0545 83000000 		.4byte	0x83
 3641 0549 02       		.uleb128 0x2
 3642 054a 91       		.byte	0x91
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 106


 3643 054b 54       		.sleb128 -44
 3644 054c 0B       		.uleb128 0xb
 3645 054d C2020000 		.4byte	.LASF31
 3646 0551 01       		.byte	0x1
 3647 0552 3905     		.2byte	0x539
 3648 0554 6B000000 		.4byte	0x6b
 3649 0558 02       		.uleb128 0x2
 3650 0559 91       		.byte	0x91
 3651 055a 6B       		.sleb128 -21
 3652 055b 0B       		.uleb128 0xb
 3653 055c 95000000 		.4byte	.LASF47
 3654 0560 01       		.byte	0x1
 3655 0561 3A05     		.2byte	0x53a
 3656 0563 6B000000 		.4byte	0x6b
 3657 0567 02       		.uleb128 0x2
 3658 0568 91       		.byte	0x91
 3659 0569 5F       		.sleb128 -33
 3660 056a 0B       		.uleb128 0xb
 3661 056b FF080000 		.4byte	.LASF22
 3662 056f 01       		.byte	0x1
 3663 0570 3B05     		.2byte	0x53b
 3664 0572 83000000 		.4byte	0x83
 3665 0576 02       		.uleb128 0x2
 3666 0577 91       		.byte	0x91
 3667 0578 60       		.sleb128 -32
 3668 0579 0B       		.uleb128 0xb
 3669 057a 16080000 		.4byte	.LASF62
 3670 057e 01       		.byte	0x1
 3671 057f 3C05     		.2byte	0x53c
 3672 0581 83000000 		.4byte	0x83
 3673 0585 02       		.uleb128 0x2
 3674 0586 91       		.byte	0x91
 3675 0587 6C       		.sleb128 -20
 3676 0588 0B       		.uleb128 0xb
 3677 0589 22090000 		.4byte	.LASF63
 3678 058d 01       		.byte	0x1
 3679 058e 4505     		.2byte	0x545
 3680 0590 83000000 		.4byte	0x83
 3681 0594 02       		.uleb128 0x2
 3682 0595 91       		.byte	0x91
 3683 0596 64       		.sleb128 -28
 3684 0597 00       		.byte	0
 3685 0598 0A       		.uleb128 0xa
 3686 0599 16000000 		.4byte	.LASF64
 3687 059d 01       		.byte	0x1
 3688 059e FC05     		.2byte	0x5fc
 3689 05a0 00000000 		.4byte	.LFB55
 3690 05a4 C8000000 		.4byte	.LFE55-.LFB55
 3691 05a8 01       		.uleb128 0x1
 3692 05a9 9C       		.byte	0x9c
 3693 05aa EB050000 		.4byte	0x5eb
 3694 05ae 0E       		.uleb128 0xe
 3695 05af 6E040000 		.4byte	.LASF29
 3696 05b3 01       		.byte	0x1
 3697 05b4 FC05     		.2byte	0x5fc
 3698 05b6 83000000 		.4byte	0x83
 3699 05ba 02       		.uleb128 0x2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 107


 3700 05bb 91       		.byte	0x91
 3701 05bc 64       		.sleb128 -28
 3702 05bd 0B       		.uleb128 0xb
 3703 05be FF080000 		.4byte	.LASF22
 3704 05c2 01       		.byte	0x1
 3705 05c3 FE05     		.2byte	0x5fe
 3706 05c5 83000000 		.4byte	0x83
 3707 05c9 02       		.uleb128 0x2
 3708 05ca 91       		.byte	0x91
 3709 05cb 6C       		.sleb128 -20
 3710 05cc 0B       		.uleb128 0xb
 3711 05cd 22090000 		.4byte	.LASF63
 3712 05d1 01       		.byte	0x1
 3713 05d2 0106     		.2byte	0x601
 3714 05d4 83000000 		.4byte	0x83
 3715 05d8 02       		.uleb128 0x2
 3716 05d9 91       		.byte	0x91
 3717 05da 70       		.sleb128 -16
 3718 05db 0B       		.uleb128 0xb
 3719 05dc C2020000 		.4byte	.LASF31
 3720 05e0 01       		.byte	0x1
 3721 05e1 0206     		.2byte	0x602
 3722 05e3 83000000 		.4byte	0x83
 3723 05e7 02       		.uleb128 0x2
 3724 05e8 91       		.byte	0x91
 3725 05e9 74       		.sleb128 -12
 3726 05ea 00       		.byte	0
 3727 05eb 11       		.uleb128 0x11
 3728 05ec 71020000 		.4byte	.LASF65
 3729 05f0 01       		.byte	0x1
 3730 05f1 5906     		.2byte	0x659
 3731 05f3 00000000 		.4byte	.LFB56
 3732 05f7 7C000000 		.4byte	.LFE56-.LFB56
 3733 05fb 01       		.uleb128 0x1
 3734 05fc 9C       		.byte	0x9c
 3735 05fd 2F060000 		.4byte	0x62f
 3736 0601 0E       		.uleb128 0xe
 3737 0602 F3050000 		.4byte	.LASF59
 3738 0606 01       		.byte	0x1
 3739 0607 5906     		.2byte	0x659
 3740 0609 83000000 		.4byte	0x83
 3741 060d 02       		.uleb128 0x2
 3742 060e 91       		.byte	0x91
 3743 060f 6C       		.sleb128 -20
 3744 0610 0E       		.uleb128 0xe
 3745 0611 5A060000 		.4byte	.LASF60
 3746 0615 01       		.byte	0x1
 3747 0616 5906     		.2byte	0x659
 3748 0618 83000000 		.4byte	0x83
 3749 061c 02       		.uleb128 0x2
 3750 061d 91       		.byte	0x91
 3751 061e 68       		.sleb128 -24
 3752 061f 0B       		.uleb128 0xb
 3753 0620 FF080000 		.4byte	.LASF22
 3754 0624 01       		.byte	0x1
 3755 0625 5B06     		.2byte	0x65b
 3756 0627 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 108


 3757 062b 02       		.uleb128 0x2
 3758 062c 91       		.byte	0x91
 3759 062d 74       		.sleb128 -12
 3760 062e 00       		.byte	0
 3761 062f 11       		.uleb128 0x11
 3762 0630 C9020000 		.4byte	.LASF66
 3763 0634 01       		.byte	0x1
 3764 0635 7C06     		.2byte	0x67c
 3765 0637 00000000 		.4byte	.LFB57
 3766 063b 34000000 		.4byte	.LFE57-.LFB57
 3767 063f 01       		.uleb128 0x1
 3768 0640 9C       		.byte	0x9c
 3769 0641 64060000 		.4byte	0x664
 3770 0645 0E       		.uleb128 0xe
 3771 0646 CB060000 		.4byte	.LASF67
 3772 064a 01       		.byte	0x1
 3773 064b 7C06     		.2byte	0x67c
 3774 064d 83000000 		.4byte	0x83
 3775 0651 02       		.uleb128 0x2
 3776 0652 91       		.byte	0x91
 3777 0653 6C       		.sleb128 -20
 3778 0654 0B       		.uleb128 0xb
 3779 0655 FF080000 		.4byte	.LASF22
 3780 0659 01       		.byte	0x1
 3781 065a 7E06     		.2byte	0x67e
 3782 065c 83000000 		.4byte	0x83
 3783 0660 02       		.uleb128 0x2
 3784 0661 91       		.byte	0x91
 3785 0662 74       		.sleb128 -12
 3786 0663 00       		.byte	0
 3787 0664 0F       		.uleb128 0xf
 3788 0665 D1060000 		.4byte	.LASF69
 3789 0669 01       		.byte	0x1
 3790 066a A006     		.2byte	0x6a0
 3791 066c 83000000 		.4byte	0x83
 3792 0670 00000000 		.4byte	.LFB58
 3793 0674 2C000000 		.4byte	.LFE58-.LFB58
 3794 0678 01       		.uleb128 0x1
 3795 0679 9C       		.byte	0x9c
 3796 067a 10       		.uleb128 0x10
 3797 067b 6F080000 		.4byte	.LASF70
 3798 067f 01       		.byte	0x1
 3799 0680 BC06     		.2byte	0x6bc
 3800 0682 83000000 		.4byte	0x83
 3801 0686 00000000 		.4byte	.LFB59
 3802 068a 44000000 		.4byte	.LFE59-.LFB59
 3803 068e 01       		.uleb128 0x1
 3804 068f 9C       		.byte	0x9c
 3805 0690 D1060000 		.4byte	0x6d1
 3806 0694 0E       		.uleb128 0xe
 3807 0695 8D040000 		.4byte	.LASF71
 3808 0699 01       		.byte	0x1
 3809 069a BC06     		.2byte	0x6bc
 3810 069c DA000000 		.4byte	0xda
 3811 06a0 02       		.uleb128 0x2
 3812 06a1 91       		.byte	0x91
 3813 06a2 6C       		.sleb128 -20
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 109


 3814 06a3 0E       		.uleb128 0xe
 3815 06a4 C0090000 		.4byte	.LASF72
 3816 06a8 01       		.byte	0x1
 3817 06a9 BC06     		.2byte	0x6bc
 3818 06ab 83000000 		.4byte	0x83
 3819 06af 02       		.uleb128 0x2
 3820 06b0 91       		.byte	0x91
 3821 06b1 68       		.sleb128 -24
 3822 06b2 0B       		.uleb128 0xb
 3823 06b3 E6030000 		.4byte	.LASF73
 3824 06b7 01       		.byte	0x1
 3825 06b8 BE06     		.2byte	0x6be
 3826 06ba 83000000 		.4byte	0x83
 3827 06be 02       		.uleb128 0x2
 3828 06bf 91       		.byte	0x91
 3829 06c0 74       		.sleb128 -12
 3830 06c1 0B       		.uleb128 0xb
 3831 06c2 01080000 		.4byte	.LASF74
 3832 06c6 01       		.byte	0x1
 3833 06c7 BF06     		.2byte	0x6bf
 3834 06c9 6B000000 		.4byte	0x6b
 3835 06cd 02       		.uleb128 0x2
 3836 06ce 91       		.byte	0x91
 3837 06cf 73       		.sleb128 -13
 3838 06d0 00       		.byte	0
 3839 06d1 11       		.uleb128 0x11
 3840 06d2 5A080000 		.4byte	.LASF75
 3841 06d6 01       		.byte	0x1
 3842 06d7 E706     		.2byte	0x6e7
 3843 06d9 00000000 		.4byte	.LFB60
 3844 06dd 6A000000 		.4byte	.LFE60-.LFB60
 3845 06e1 01       		.uleb128 0x1
 3846 06e2 9C       		.byte	0x9c
 3847 06e3 33070000 		.4byte	0x733
 3848 06e7 0E       		.uleb128 0xe
 3849 06e8 8D040000 		.4byte	.LASF71
 3850 06ec 01       		.byte	0x1
 3851 06ed E706     		.2byte	0x6e7
 3852 06ef D4000000 		.4byte	0xd4
 3853 06f3 02       		.uleb128 0x2
 3854 06f4 91       		.byte	0x91
 3855 06f5 6C       		.sleb128 -20
 3856 06f6 0E       		.uleb128 0xe
 3857 06f7 C0090000 		.4byte	.LASF72
 3858 06fb 01       		.byte	0x1
 3859 06fc E706     		.2byte	0x6e7
 3860 06fe 83000000 		.4byte	0x83
 3861 0702 02       		.uleb128 0x2
 3862 0703 91       		.byte	0x91
 3863 0704 68       		.sleb128 -24
 3864 0705 0E       		.uleb128 0xe
 3865 0706 6E030000 		.4byte	.LASF39
 3866 070a 01       		.byte	0x1
 3867 070b E706     		.2byte	0x6e7
 3868 070d 83000000 		.4byte	0x83
 3869 0711 02       		.uleb128 0x2
 3870 0712 91       		.byte	0x91
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 110


 3871 0713 64       		.sleb128 -28
 3872 0714 0B       		.uleb128 0xb
 3873 0715 E6030000 		.4byte	.LASF73
 3874 0719 01       		.byte	0x1
 3875 071a E906     		.2byte	0x6e9
 3876 071c 83000000 		.4byte	0x83
 3877 0720 02       		.uleb128 0x2
 3878 0721 91       		.byte	0x91
 3879 0722 74       		.sleb128 -12
 3880 0723 0B       		.uleb128 0xb
 3881 0724 01080000 		.4byte	.LASF74
 3882 0728 01       		.byte	0x1
 3883 0729 EA06     		.2byte	0x6ea
 3884 072b 6B000000 		.4byte	0x6b
 3885 072f 02       		.uleb128 0x2
 3886 0730 91       		.byte	0x91
 3887 0731 73       		.sleb128 -13
 3888 0732 00       		.byte	0
 3889 0733 10       		.uleb128 0x10
 3890 0734 D0050000 		.4byte	.LASF76
 3891 0738 01       		.byte	0x1
 3892 0739 1907     		.2byte	0x719
 3893 073b 83000000 		.4byte	0x83
 3894 073f 00000000 		.4byte	.LFB61
 3895 0743 1C000000 		.4byte	.LFE61-.LFB61
 3896 0747 01       		.uleb128 0x1
 3897 0748 9C       		.byte	0x9c
 3898 0749 5D070000 		.4byte	0x75d
 3899 074d 0E       		.uleb128 0xe
 3900 074e 6E040000 		.4byte	.LASF29
 3901 0752 01       		.byte	0x1
 3902 0753 1907     		.2byte	0x719
 3903 0755 83000000 		.4byte	0x83
 3904 0759 02       		.uleb128 0x2
 3905 075a 91       		.byte	0x91
 3906 075b 74       		.sleb128 -12
 3907 075c 00       		.byte	0
 3908 075d 11       		.uleb128 0x11
 3909 075e 64010000 		.4byte	.LASF77
 3910 0762 01       		.byte	0x1
 3911 0763 3807     		.2byte	0x738
 3912 0765 00000000 		.4byte	.LFB62
 3913 0769 24000000 		.4byte	.LFE62-.LFB62
 3914 076d 01       		.uleb128 0x1
 3915 076e 9C       		.byte	0x9c
 3916 076f 92070000 		.4byte	0x792
 3917 0773 0E       		.uleb128 0xe
 3918 0774 6E040000 		.4byte	.LASF29
 3919 0778 01       		.byte	0x1
 3920 0779 3807     		.2byte	0x738
 3921 077b 83000000 		.4byte	0x83
 3922 077f 02       		.uleb128 0x2
 3923 0780 91       		.byte	0x91
 3924 0781 74       		.sleb128 -12
 3925 0782 0E       		.uleb128 0xe
 3926 0783 96060000 		.4byte	.LASF78
 3927 0787 01       		.byte	0x1
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 111


 3928 0788 3807     		.2byte	0x738
 3929 078a 83000000 		.4byte	0x83
 3930 078e 02       		.uleb128 0x2
 3931 078f 91       		.byte	0x91
 3932 0790 70       		.sleb128 -16
 3933 0791 00       		.byte	0
 3934 0792 10       		.uleb128 0x10
 3935 0793 52070000 		.4byte	.LASF79
 3936 0797 01       		.byte	0x1
 3937 0798 5807     		.2byte	0x758
 3938 079a 83000000 		.4byte	0x83
 3939 079e 00000000 		.4byte	.LFB63
 3940 07a2 1C000000 		.4byte	.LFE63-.LFB63
 3941 07a6 01       		.uleb128 0x1
 3942 07a7 9C       		.byte	0x9c
 3943 07a8 BC070000 		.4byte	0x7bc
 3944 07ac 0E       		.uleb128 0xe
 3945 07ad 6E040000 		.4byte	.LASF29
 3946 07b1 01       		.byte	0x1
 3947 07b2 5807     		.2byte	0x758
 3948 07b4 83000000 		.4byte	0x83
 3949 07b8 02       		.uleb128 0x2
 3950 07b9 91       		.byte	0x91
 3951 07ba 74       		.sleb128 -12
 3952 07bb 00       		.byte	0
 3953 07bc 11       		.uleb128 0x11
 3954 07bd 91050000 		.4byte	.LASF80
 3955 07c1 01       		.byte	0x1
 3956 07c2 7707     		.2byte	0x777
 3957 07c4 00000000 		.4byte	.LFB64
 3958 07c8 24000000 		.4byte	.LFE64-.LFB64
 3959 07cc 01       		.uleb128 0x1
 3960 07cd 9C       		.byte	0x9c
 3961 07ce F1070000 		.4byte	0x7f1
 3962 07d2 0E       		.uleb128 0xe
 3963 07d3 6E040000 		.4byte	.LASF29
 3964 07d7 01       		.byte	0x1
 3965 07d8 7707     		.2byte	0x777
 3966 07da 83000000 		.4byte	0x83
 3967 07de 02       		.uleb128 0x2
 3968 07df 91       		.byte	0x91
 3969 07e0 74       		.sleb128 -12
 3970 07e1 0E       		.uleb128 0xe
 3971 07e2 61030000 		.4byte	.LASF81
 3972 07e6 01       		.byte	0x1
 3973 07e7 7707     		.2byte	0x777
 3974 07e9 83000000 		.4byte	0x83
 3975 07ed 02       		.uleb128 0x2
 3976 07ee 91       		.byte	0x91
 3977 07ef 70       		.sleb128 -16
 3978 07f0 00       		.byte	0
 3979 07f1 10       		.uleb128 0x10
 3980 07f2 BD080000 		.4byte	.LASF82
 3981 07f6 01       		.byte	0x1
 3982 07f7 9607     		.2byte	0x796
 3983 07f9 83000000 		.4byte	0x83
 3984 07fd 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 112


 3985 0801 1C000000 		.4byte	.LFE65-.LFB65
 3986 0805 01       		.uleb128 0x1
 3987 0806 9C       		.byte	0x9c
 3988 0807 1B080000 		.4byte	0x81b
 3989 080b 0E       		.uleb128 0xe
 3990 080c 6E040000 		.4byte	.LASF29
 3991 0810 01       		.byte	0x1
 3992 0811 9607     		.2byte	0x796
 3993 0813 83000000 		.4byte	0x83
 3994 0817 02       		.uleb128 0x2
 3995 0818 91       		.byte	0x91
 3996 0819 74       		.sleb128 -12
 3997 081a 00       		.byte	0
 3998 081b 11       		.uleb128 0x11
 3999 081c 3F080000 		.4byte	.LASF83
 4000 0820 01       		.byte	0x1
 4001 0821 B107     		.2byte	0x7b1
 4002 0823 00000000 		.4byte	.LFB66
 4003 0827 24000000 		.4byte	.LFE66-.LFB66
 4004 082b 01       		.uleb128 0x1
 4005 082c 9C       		.byte	0x9c
 4006 082d 50080000 		.4byte	0x850
 4007 0831 0E       		.uleb128 0xe
 4008 0832 6E040000 		.4byte	.LASF29
 4009 0836 01       		.byte	0x1
 4010 0837 B107     		.2byte	0x7b1
 4011 0839 83000000 		.4byte	0x83
 4012 083d 02       		.uleb128 0x2
 4013 083e 91       		.byte	0x91
 4014 083f 74       		.sleb128 -12
 4015 0840 0E       		.uleb128 0xe
 4016 0841 C5070000 		.4byte	.LASF84
 4017 0845 01       		.byte	0x1
 4018 0846 B107     		.2byte	0x7b1
 4019 0848 83000000 		.4byte	0x83
 4020 084c 02       		.uleb128 0x2
 4021 084d 91       		.byte	0x91
 4022 084e 70       		.sleb128 -16
 4023 084f 00       		.byte	0
 4024 0850 10       		.uleb128 0x10
 4025 0851 84080000 		.4byte	.LASF85
 4026 0855 01       		.byte	0x1
 4027 0856 CE07     		.2byte	0x7ce
 4028 0858 83000000 		.4byte	0x83
 4029 085c 00000000 		.4byte	.LFB67
 4030 0860 1C000000 		.4byte	.LFE67-.LFB67
 4031 0864 01       		.uleb128 0x1
 4032 0865 9C       		.byte	0x9c
 4033 0866 7A080000 		.4byte	0x87a
 4034 086a 0E       		.uleb128 0xe
 4035 086b 6E040000 		.4byte	.LASF29
 4036 086f 01       		.byte	0x1
 4037 0870 CE07     		.2byte	0x7ce
 4038 0872 83000000 		.4byte	0x83
 4039 0876 02       		.uleb128 0x2
 4040 0877 91       		.byte	0x91
 4041 0878 74       		.sleb128 -12
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 113


 4042 0879 00       		.byte	0
 4043 087a 11       		.uleb128 0x11
 4044 087b A4010000 		.4byte	.LASF86
 4045 087f 01       		.byte	0x1
 4046 0880 EB07     		.2byte	0x7eb
 4047 0882 00000000 		.4byte	.LFB68
 4048 0886 24000000 		.4byte	.LFE68-.LFB68
 4049 088a 01       		.uleb128 0x1
 4050 088b 9C       		.byte	0x9c
 4051 088c AF080000 		.4byte	0x8af
 4052 0890 0E       		.uleb128 0xe
 4053 0891 6E040000 		.4byte	.LASF29
 4054 0895 01       		.byte	0x1
 4055 0896 EB07     		.2byte	0x7eb
 4056 0898 83000000 		.4byte	0x83
 4057 089c 02       		.uleb128 0x2
 4058 089d 91       		.byte	0x91
 4059 089e 74       		.sleb128 -12
 4060 089f 0E       		.uleb128 0xe
 4061 08a0 B7070000 		.4byte	.LASF87
 4062 08a4 01       		.byte	0x1
 4063 08a5 EB07     		.2byte	0x7eb
 4064 08a7 83000000 		.4byte	0x83
 4065 08ab 02       		.uleb128 0x2
 4066 08ac 91       		.byte	0x91
 4067 08ad 70       		.sleb128 -16
 4068 08ae 00       		.byte	0
 4069 08af 0F       		.uleb128 0xf
 4070 08b0 F5040000 		.4byte	.LASF88
 4071 08b4 01       		.byte	0x1
 4072 08b5 0808     		.2byte	0x808
 4073 08b7 83000000 		.4byte	0x83
 4074 08bb 00000000 		.4byte	.LFB69
 4075 08bf 20000000 		.4byte	.LFE69-.LFB69
 4076 08c3 01       		.uleb128 0x1
 4077 08c4 9C       		.byte	0x9c
 4078 08c5 11       		.uleb128 0x11
 4079 08c6 44060000 		.4byte	.LASF89
 4080 08ca 01       		.byte	0x1
 4081 08cb 2608     		.2byte	0x826
 4082 08cd 00000000 		.4byte	.LFB70
 4083 08d1 3C000000 		.4byte	.LFE70-.LFB70
 4084 08d5 01       		.uleb128 0x1
 4085 08d6 9C       		.byte	0x9c
 4086 08d7 EB080000 		.4byte	0x8eb
 4087 08db 0E       		.uleb128 0xe
 4088 08dc 8C070000 		.4byte	.LASF90
 4089 08e0 01       		.byte	0x1
 4090 08e1 2608     		.2byte	0x826
 4091 08e3 83000000 		.4byte	0x83
 4092 08e7 02       		.uleb128 0x2
 4093 08e8 91       		.byte	0x91
 4094 08e9 74       		.sleb128 -12
 4095 08ea 00       		.byte	0
 4096 08eb 0D       		.uleb128 0xd
 4097 08ec 72060000 		.4byte	.LASF91
 4098 08f0 01       		.byte	0x1
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 114


 4099 08f1 4E08     		.2byte	0x84e
 4100 08f3 77000000 		.4byte	0x77
 4101 08f7 00000000 		.4byte	.LFB71
 4102 08fb 50000000 		.4byte	.LFE71-.LFB71
 4103 08ff 01       		.uleb128 0x1
 4104 0900 9C       		.byte	0x9c
 4105 0901 33090000 		.4byte	0x933
 4106 0905 0E       		.uleb128 0xe
 4107 0906 6E040000 		.4byte	.LASF29
 4108 090a 01       		.byte	0x1
 4109 090b 4E08     		.2byte	0x84e
 4110 090d 83000000 		.4byte	0x83
 4111 0911 02       		.uleb128 0x2
 4112 0912 91       		.byte	0x91
 4113 0913 6C       		.sleb128 -20
 4114 0914 0B       		.uleb128 0xb
 4115 0915 64040000 		.4byte	.LASF92
 4116 0919 01       		.byte	0x1
 4117 091a 5008     		.2byte	0x850
 4118 091c 83000000 		.4byte	0x83
 4119 0920 02       		.uleb128 0x2
 4120 0921 91       		.byte	0x91
 4121 0922 74       		.sleb128 -12
 4122 0923 0B       		.uleb128 0xb
 4123 0924 80010000 		.4byte	.LASF93
 4124 0928 01       		.byte	0x1
 4125 0929 5108     		.2byte	0x851
 4126 092b 83000000 		.4byte	0x83
 4127 092f 02       		.uleb128 0x2
 4128 0930 91       		.byte	0x91
 4129 0931 70       		.sleb128 -16
 4130 0932 00       		.byte	0
 4131 0933 11       		.uleb128 0x11
 4132 0934 31070000 		.4byte	.LASF94
 4133 0938 01       		.byte	0x1
 4134 0939 B808     		.2byte	0x8b8
 4135 093b 00000000 		.4byte	.LFB72
 4136 093f 24000000 		.4byte	.LFE72-.LFB72
 4137 0943 01       		.uleb128 0x1
 4138 0944 9C       		.byte	0x9c
 4139 0945 68090000 		.4byte	0x968
 4140 0949 0E       		.uleb128 0xe
 4141 094a 6E040000 		.4byte	.LASF29
 4142 094e 01       		.byte	0x1
 4143 094f B808     		.2byte	0x8b8
 4144 0951 83000000 		.4byte	0x83
 4145 0955 02       		.uleb128 0x2
 4146 0956 91       		.byte	0x91
 4147 0957 74       		.sleb128 -12
 4148 0958 0E       		.uleb128 0xe
 4149 0959 C9030000 		.4byte	.LASF52
 4150 095d 01       		.byte	0x1
 4151 095e B808     		.2byte	0x8b8
 4152 0960 83000000 		.4byte	0x83
 4153 0964 02       		.uleb128 0x2
 4154 0965 91       		.byte	0x91
 4155 0966 70       		.sleb128 -16
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 115


 4156 0967 00       		.byte	0
 4157 0968 11       		.uleb128 0x11
 4158 0969 47030000 		.4byte	.LASF95
 4159 096d 01       		.byte	0x1
 4160 096e EF08     		.2byte	0x8ef
 4161 0970 00000000 		.4byte	.LFB73
 4162 0974 A0000000 		.4byte	.LFE73-.LFB73
 4163 0978 01       		.uleb128 0x1
 4164 0979 9C       		.byte	0x9c
 4165 097a E8090000 		.4byte	0x9e8
 4166 097e 0E       		.uleb128 0xe
 4167 097f A9000000 		.4byte	.LASF96
 4168 0983 01       		.byte	0x1
 4169 0984 EF08     		.2byte	0x8ef
 4170 0986 83000000 		.4byte	0x83
 4171 098a 02       		.uleb128 0x2
 4172 098b 91       		.byte	0x91
 4173 098c 5C       		.sleb128 -36
 4174 098d 0E       		.uleb128 0xe
 4175 098e E4080000 		.4byte	.LASF97
 4176 0992 01       		.byte	0x1
 4177 0993 EF08     		.2byte	0x8ef
 4178 0995 D4000000 		.4byte	0xd4
 4179 0999 02       		.uleb128 0x2
 4180 099a 91       		.byte	0x91
 4181 099b 58       		.sleb128 -40
 4182 099c 0B       		.uleb128 0xb
 4183 099d 6D050000 		.4byte	.LASF98
 4184 09a1 01       		.byte	0x1
 4185 09a2 F108     		.2byte	0x8f1
 4186 09a4 83000000 		.4byte	0x83
 4187 09a8 02       		.uleb128 0x2
 4188 09a9 91       		.byte	0x91
 4189 09aa 74       		.sleb128 -12
 4190 09ab 0B       		.uleb128 0xb
 4191 09ac A9070000 		.4byte	.LASF99
 4192 09b0 01       		.byte	0x1
 4193 09b1 F208     		.2byte	0x8f2
 4194 09b3 83000000 		.4byte	0x83
 4195 09b7 02       		.uleb128 0x2
 4196 09b8 91       		.byte	0x91
 4197 09b9 70       		.sleb128 -16
 4198 09ba 0B       		.uleb128 0xb
 4199 09bb 12060000 		.4byte	.LASF33
 4200 09bf 01       		.byte	0x1
 4201 09c0 F308     		.2byte	0x8f3
 4202 09c2 83000000 		.4byte	0x83
 4203 09c6 02       		.uleb128 0x2
 4204 09c7 91       		.byte	0x91
 4205 09c8 64       		.sleb128 -28
 4206 09c9 0B       		.uleb128 0xb
 4207 09ca 29040000 		.4byte	.LASF32
 4208 09ce 01       		.byte	0x1
 4209 09cf F408     		.2byte	0x8f4
 4210 09d1 83000000 		.4byte	0x83
 4211 09d5 02       		.uleb128 0x2
 4212 09d6 91       		.byte	0x91
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 116


 4213 09d7 68       		.sleb128 -24
 4214 09d8 0B       		.uleb128 0xb
 4215 09d9 65060000 		.4byte	.LASF100
 4216 09dd 01       		.byte	0x1
 4217 09de F508     		.2byte	0x8f5
 4218 09e0 83000000 		.4byte	0x83
 4219 09e4 02       		.uleb128 0x2
 4220 09e5 91       		.byte	0x91
 4221 09e6 6C       		.sleb128 -20
 4222 09e7 00       		.byte	0
 4223 09e8 12       		.uleb128 0x12
 4224 09e9 A1080000 		.4byte	.LASF101
 4225 09ed 01       		.byte	0x1
 4226 09ee 24       		.byte	0x24
 4227 09ef 6B000000 		.4byte	0x6b
 4228 09f3 05       		.uleb128 0x5
 4229 09f4 03       		.byte	0x3
 4230 09f5 00000000 		.4byte	CapSense_lowLevelTuningDone
 4231 09f9 13       		.uleb128 0x13
 4232 09fa 6B000000 		.4byte	0x6b
 4233 09fe 090A0000 		.4byte	0xa09
 4234 0a02 14       		.uleb128 0x14
 4235 0a03 C6000000 		.4byte	0xc6
 4236 0a07 00       		.byte	0
 4237 0a08 00       		.byte	0
 4238 0a09 12       		.uleb128 0x12
 4239 0a0a 00000000 		.4byte	.LASF102
 4240 0a0e 01       		.byte	0x1
 4241 0a0f 25       		.byte	0x25
 4242 0a10 F9090000 		.4byte	0x9f9
 4243 0a14 05       		.uleb128 0x5
 4244 0a15 03       		.byte	0x3
 4245 0a16 00000000 		.4byte	CapSense_scanSpeedTbl
 4246 0a1a 12       		.uleb128 0x12
 4247 0a1b 28000000 		.4byte	.LASF103
 4248 0a1f 01       		.byte	0x1
 4249 0a20 2D       		.byte	0x2d
 4250 0a21 B0000000 		.4byte	0xb0
 4251 0a25 05       		.uleb128 0x5
 4252 0a26 03       		.byte	0x3
 4253 0a27 00000000 		.4byte	CapSense_csdStatusVar
 4254 0a2b 12       		.uleb128 0x12
 4255 0a2c AD020000 		.4byte	.LASF104
 4256 0a30 01       		.byte	0x1
 4257 0a31 2E       		.byte	0x2e
 4258 0a32 B0000000 		.4byte	0xb0
 4259 0a36 05       		.uleb128 0x5
 4260 0a37 03       		.byte	0x3
 4261 0a38 00000000 		.4byte	CapSense_sensorIndex
 4262 0a3c 13       		.uleb128 0x13
 4263 0a3d 77000000 		.4byte	0x77
 4264 0a41 4C0A0000 		.4byte	0xa4c
 4265 0a45 14       		.uleb128 0x14
 4266 0a46 C6000000 		.4byte	0xc6
 4267 0a4a 04       		.byte	0x4
 4268 0a4b 00       		.byte	0
 4269 0a4c 12       		.uleb128 0x12
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 117


 4270 0a4d 75040000 		.4byte	.LASF105
 4271 0a51 01       		.byte	0x1
 4272 0a52 31       		.byte	0x31
 4273 0a53 3C0A0000 		.4byte	0xa3c
 4274 0a57 05       		.uleb128 0x5
 4275 0a58 03       		.byte	0x3
 4276 0a59 00000000 		.4byte	CapSense_sensorRaw
 4277 0a5d 13       		.uleb128 0x13
 4278 0a5e 6B000000 		.4byte	0x6b
 4279 0a62 6D0A0000 		.4byte	0xa6d
 4280 0a66 14       		.uleb128 0x14
 4281 0a67 C6000000 		.4byte	0xc6
 4282 0a6b 04       		.byte	0x4
 4283 0a6c 00       		.byte	0
 4284 0a6d 12       		.uleb128 0x12
 4285 0a6e B1050000 		.4byte	.LASF106
 4286 0a72 01       		.byte	0x1
 4287 0a73 3B       		.byte	0x3b
 4288 0a74 5D0A0000 		.4byte	0xa5d
 4289 0a78 05       		.uleb128 0x5
 4290 0a79 03       		.byte	0x3
 4291 0a7a 00000000 		.4byte	CapSense_unscannedSnsDriveMode
 4292 0a7e 12       		.uleb128 0x12
 4293 0a7f 11070000 		.4byte	.LASF107
 4294 0a83 01       		.byte	0x1
 4295 0a84 3E       		.byte	0x3e
 4296 0a85 F9090000 		.4byte	0x9f9
 4297 0a89 05       		.uleb128 0x5
 4298 0a8a 03       		.byte	0x3
 4299 0a8b 00000000 		.4byte	CapSense_sensorEnableMaskBackup
 4300 0a8f 12       		.uleb128 0x12
 4301 0a90 72070000 		.4byte	.LASF108
 4302 0a94 01       		.byte	0x1
 4303 0a95 41       		.byte	0x41
 4304 0a96 F9090000 		.4byte	0x9f9
 4305 0a9a 05       		.uleb128 0x5
 4306 0a9b 03       		.byte	0x3
 4307 0a9c 00000000 		.4byte	CapSense_sensorEnableMask
 4308 0aa0 12       		.uleb128 0x12
 4309 0aa1 27050000 		.4byte	.LASF109
 4310 0aa5 01       		.byte	0x1
 4311 0aa6 64       		.byte	0x64
 4312 0aa7 5D0A0000 		.4byte	0xa5d
 4313 0aab 05       		.uleb128 0x5
 4314 0aac 03       		.byte	0x3
 4315 0aad 00000000 		.4byte	CapSense_modulationIDAC
 4316 0ab1 12       		.uleb128 0x12
 4317 0ab2 3E000000 		.4byte	.LASF110
 4318 0ab6 01       		.byte	0x1
 4319 0ab7 65       		.byte	0x65
 4320 0ab8 5D0A0000 		.4byte	0xa5d
 4321 0abc 05       		.uleb128 0x5
 4322 0abd 03       		.byte	0x3
 4323 0abe 00000000 		.4byte	CapSense_compensationIDAC
 4324 0ac2 13       		.uleb128 0x13
 4325 0ac3 83000000 		.4byte	0x83
 4326 0ac7 D20A0000 		.4byte	0xad2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 118


 4327 0acb 14       		.uleb128 0x14
 4328 0acc C6000000 		.4byte	0xc6
 4329 0ad0 00       		.byte	0
 4330 0ad1 00       		.byte	0
 4331 0ad2 12       		.uleb128 0x12
 4332 0ad3 CE040000 		.4byte	.LASF111
 4333 0ad7 01       		.byte	0x1
 4334 0ad8 67       		.byte	0x67
 4335 0ad9 C20A0000 		.4byte	0xac2
 4336 0add 05       		.uleb128 0x5
 4337 0ade 03       		.byte	0x3
 4338 0adf 00000000 		.4byte	CapSense_widgetResolution
 4339 0ae3 12       		.uleb128 0x12
 4340 0ae4 9D030000 		.4byte	.LASF112
 4341 0ae8 01       		.byte	0x1
 4342 0ae9 6B       		.byte	0x6b
 4343 0aea 5D0A0000 		.4byte	0xa5d
 4344 0aee 05       		.uleb128 0x5
 4345 0aef 03       		.byte	0x3
 4346 0af0 00000000 		.4byte	CapSense_senseClkDividerVal
 4347 0af4 12       		.uleb128 0x12
 4348 0af5 78000000 		.4byte	.LASF113
 4349 0af9 01       		.byte	0x1
 4350 0afa 6C       		.byte	0x6c
 4351 0afb 5D0A0000 		.4byte	0xa5d
 4352 0aff 05       		.uleb128 0x5
 4353 0b00 03       		.byte	0x3
 4354 0b01 00000000 		.4byte	CapSense_sampleClkDividerVal
 4355 0b05 13       		.uleb128 0x13
 4356 0b06 E0000000 		.4byte	0xe0
 4357 0b0a 150B0000 		.4byte	0xb15
 4358 0b0e 14       		.uleb128 0x14
 4359 0b0f C6000000 		.4byte	0xc6
 4360 0b13 04       		.byte	0x4
 4361 0b14 00       		.byte	0
 4362 0b15 12       		.uleb128 0x12
 4363 0b16 E1020000 		.4byte	.LASF114
 4364 0b1a 01       		.byte	0x1
 4365 0b1b 6E       		.byte	0x6e
 4366 0b1c 260B0000 		.4byte	0xb26
 4367 0b20 05       		.uleb128 0x5
 4368 0b21 03       		.byte	0x3
 4369 0b22 00000000 		.4byte	CapSense_widgetNumber
 4370 0b26 07       		.uleb128 0x7
 4371 0b27 050B0000 		.4byte	0xb05
 4372 0b2b 13       		.uleb128 0x13
 4373 0b2c 410B0000 		.4byte	0xb41
 4374 0b30 3B0B0000 		.4byte	0xb3b
 4375 0b34 14       		.uleb128 0x14
 4376 0b35 C6000000 		.4byte	0xc6
 4377 0b39 06       		.byte	0x6
 4378 0b3a 00       		.byte	0
 4379 0b3b 06       		.uleb128 0x6
 4380 0b3c 04       		.byte	0x4
 4381 0b3d B5000000 		.4byte	0xb5
 4382 0b41 07       		.uleb128 0x7
 4383 0b42 3B0B0000 		.4byte	0xb3b
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 119


 4384 0b46 12       		.uleb128 0x12
 4385 0b47 36020000 		.4byte	.LASF115
 4386 0b4b 01       		.byte	0x1
 4387 0b4c 72       		.byte	0x72
 4388 0b4d 570B0000 		.4byte	0xb57
 4389 0b51 05       		.uleb128 0x5
 4390 0b52 03       		.byte	0x3
 4391 0b53 00000000 		.4byte	CapSense_prtSelTbl
 4392 0b57 07       		.uleb128 0x7
 4393 0b58 2B0B0000 		.4byte	0xb2b
 4394 0b5c 12       		.uleb128 0x12
 4395 0b5d F7020000 		.4byte	.LASF116
 4396 0b61 01       		.byte	0x1
 4397 0b62 7C       		.byte	0x7c
 4398 0b63 6D0B0000 		.4byte	0xb6d
 4399 0b67 05       		.uleb128 0x5
 4400 0b68 03       		.byte	0x3
 4401 0b69 00000000 		.4byte	CapSense_prtCfgTbl
 4402 0b6d 07       		.uleb128 0x7
 4403 0b6e 2B0B0000 		.4byte	0xb2b
 4404 0b72 12       		.uleb128 0x12
 4405 0b73 5F020000 		.4byte	.LASF117
 4406 0b77 01       		.byte	0x1
 4407 0b78 86       		.byte	0x86
 4408 0b79 830B0000 		.4byte	0xb83
 4409 0b7d 05       		.uleb128 0x5
 4410 0b7e 03       		.byte	0x3
 4411 0b7f 00000000 		.4byte	CapSense_prtDRTbl
 4412 0b83 07       		.uleb128 0x7
 4413 0b84 2B0B0000 		.4byte	0xb2b
 4414 0b88 13       		.uleb128 0x13
 4415 0b89 3B0B0000 		.4byte	0xb3b
 4416 0b8d 980B0000 		.4byte	0xb98
 4417 0b91 14       		.uleb128 0x14
 4418 0b92 C6000000 		.4byte	0xc6
 4419 0b96 04       		.byte	0x4
 4420 0b97 00       		.byte	0
 4421 0b98 12       		.uleb128 0x12
 4422 0b99 AB040000 		.4byte	.LASF118
 4423 0b9d 01       		.byte	0x1
 4424 0b9e 44       		.byte	0x44
 4425 0b9f 880B0000 		.4byte	0xb88
 4426 0ba3 05       		.uleb128 0x5
 4427 0ba4 03       		.byte	0x3
 4428 0ba5 00000000 		.4byte	CapSense_pcTable
 4429 0ba9 12       		.uleb128 0x12
 4430 0baa 96070000 		.4byte	.LASF119
 4431 0bae 01       		.byte	0x1
 4432 0baf 4C       		.byte	0x4c
 4433 0bb0 BA0B0000 		.4byte	0xbba
 4434 0bb4 05       		.uleb128 0x5
 4435 0bb5 03       		.byte	0x3
 4436 0bb6 00000000 		.4byte	CapSense_portTable
 4437 0bba 07       		.uleb128 0x7
 4438 0bbb 050B0000 		.4byte	0xb05
 4439 0bbf 13       		.uleb128 0x13
 4440 0bc0 CF0B0000 		.4byte	0xbcf
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 120


 4441 0bc4 CF0B0000 		.4byte	0xbcf
 4442 0bc8 14       		.uleb128 0x14
 4443 0bc9 C6000000 		.4byte	0xc6
 4444 0bcd 04       		.byte	0x4
 4445 0bce 00       		.byte	0
 4446 0bcf 07       		.uleb128 0x7
 4447 0bd0 83000000 		.4byte	0x83
 4448 0bd4 12       		.uleb128 0x12
 4449 0bd5 58000000 		.4byte	.LASF120
 4450 0bd9 01       		.byte	0x1
 4451 0bda 54       		.byte	0x54
 4452 0bdb E50B0000 		.4byte	0xbe5
 4453 0bdf 05       		.uleb128 0x5
 4454 0be0 03       		.byte	0x3
 4455 0be1 00000000 		.4byte	CapSense_maskTable
 4456 0be5 07       		.uleb128 0x7
 4457 0be6 BF0B0000 		.4byte	0xbbf
 4458 0bea 12       		.uleb128 0x12
 4459 0beb 58050000 		.4byte	.LASF121
 4460 0bef 01       		.byte	0x1
 4461 0bf0 5C       		.byte	0x5c
 4462 0bf1 FB0B0000 		.4byte	0xbfb
 4463 0bf5 05       		.uleb128 0x5
 4464 0bf6 03       		.byte	0x3
 4465 0bf7 00000000 		.4byte	CapSense_pinShiftTbl
 4466 0bfb 07       		.uleb128 0x7
 4467 0bfc 050B0000 		.4byte	0xb05
 4468 0c00 13       		.uleb128 0x13
 4469 0c01 E0000000 		.4byte	0xe0
 4470 0c05 100C0000 		.4byte	0xc10
 4471 0c09 14       		.uleb128 0x14
 4472 0c0a C6000000 		.4byte	0xc6
 4473 0c0e 00       		.byte	0
 4474 0c0f 00       		.byte	0
 4475 0c10 15       		.uleb128 0x15
 4476 0c11 C1010000 		.4byte	.LASF122
 4477 0c15 03       		.byte	0x3
 4478 0c16 3A01     		.2byte	0x13a
 4479 0c18 1C0C0000 		.4byte	0xc1c
 4480 0c1c 07       		.uleb128 0x7
 4481 0c1d 000C0000 		.4byte	0xc00
 4482 0c21 15       		.uleb128 0x15
 4483 0c22 4B040000 		.4byte	.LASF123
 4484 0c26 03       		.byte	0x3
 4485 0c27 3B01     		.2byte	0x13b
 4486 0c29 2D0C0000 		.4byte	0xc2d
 4487 0c2d 07       		.uleb128 0x7
 4488 0c2e 000C0000 		.4byte	0xc00
 4489 0c32 12       		.uleb128 0x12
 4490 0c33 16020000 		.4byte	.LASF124
 4491 0c37 01       		.byte	0x1
 4492 0c38 37       		.byte	0x37
 4493 0c39 6B000000 		.4byte	0x6b
 4494 0c3d 05       		.uleb128 0x5
 4495 0c3e 03       		.byte	0x3
 4496 0c3f 00000000 		.4byte	CapSense_csdTrim1
 4497 0c43 00       		.byte	0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 121


 4498              		.section	.debug_abbrev,"",%progbits
 4499              	.Ldebug_abbrev0:
 4500 0000 01       		.uleb128 0x1
 4501 0001 11       		.uleb128 0x11
 4502 0002 01       		.byte	0x1
 4503 0003 25       		.uleb128 0x25
 4504 0004 0E       		.uleb128 0xe
 4505 0005 13       		.uleb128 0x13
 4506 0006 0B       		.uleb128 0xb
 4507 0007 03       		.uleb128 0x3
 4508 0008 0E       		.uleb128 0xe
 4509 0009 1B       		.uleb128 0x1b
 4510 000a 0E       		.uleb128 0xe
 4511 000b 55       		.uleb128 0x55
 4512 000c 17       		.uleb128 0x17
 4513 000d 11       		.uleb128 0x11
 4514 000e 01       		.uleb128 0x1
 4515 000f 10       		.uleb128 0x10
 4516 0010 17       		.uleb128 0x17
 4517 0011 00       		.byte	0
 4518 0012 00       		.byte	0
 4519 0013 02       		.uleb128 0x2
 4520 0014 24       		.uleb128 0x24
 4521 0015 00       		.byte	0
 4522 0016 0B       		.uleb128 0xb
 4523 0017 0B       		.uleb128 0xb
 4524 0018 3E       		.uleb128 0x3e
 4525 0019 0B       		.uleb128 0xb
 4526 001a 03       		.uleb128 0x3
 4527 001b 0E       		.uleb128 0xe
 4528 001c 00       		.byte	0
 4529 001d 00       		.byte	0
 4530 001e 03       		.uleb128 0x3
 4531 001f 24       		.uleb128 0x24
 4532 0020 00       		.byte	0
 4533 0021 0B       		.uleb128 0xb
 4534 0022 0B       		.uleb128 0xb
 4535 0023 3E       		.uleb128 0x3e
 4536 0024 0B       		.uleb128 0xb
 4537 0025 03       		.uleb128 0x3
 4538 0026 08       		.uleb128 0x8
 4539 0027 00       		.byte	0
 4540 0028 00       		.byte	0
 4541 0029 04       		.uleb128 0x4
 4542 002a 16       		.uleb128 0x16
 4543 002b 00       		.byte	0
 4544 002c 03       		.uleb128 0x3
 4545 002d 0E       		.uleb128 0xe
 4546 002e 3A       		.uleb128 0x3a
 4547 002f 0B       		.uleb128 0xb
 4548 0030 3B       		.uleb128 0x3b
 4549 0031 05       		.uleb128 0x5
 4550 0032 49       		.uleb128 0x49
 4551 0033 13       		.uleb128 0x13
 4552 0034 00       		.byte	0
 4553 0035 00       		.byte	0
 4554 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 122


 4555 0037 35       		.uleb128 0x35
 4556 0038 00       		.byte	0
 4557 0039 49       		.uleb128 0x49
 4558 003a 13       		.uleb128 0x13
 4559 003b 00       		.byte	0
 4560 003c 00       		.byte	0
 4561 003d 06       		.uleb128 0x6
 4562 003e 0F       		.uleb128 0xf
 4563 003f 00       		.byte	0
 4564 0040 0B       		.uleb128 0xb
 4565 0041 0B       		.uleb128 0xb
 4566 0042 49       		.uleb128 0x49
 4567 0043 13       		.uleb128 0x13
 4568 0044 00       		.byte	0
 4569 0045 00       		.byte	0
 4570 0046 07       		.uleb128 0x7
 4571 0047 26       		.uleb128 0x26
 4572 0048 00       		.byte	0
 4573 0049 49       		.uleb128 0x49
 4574 004a 13       		.uleb128 0x13
 4575 004b 00       		.byte	0
 4576 004c 00       		.byte	0
 4577 004d 08       		.uleb128 0x8
 4578 004e 2E       		.uleb128 0x2e
 4579 004f 01       		.byte	0x1
 4580 0050 3F       		.uleb128 0x3f
 4581 0051 19       		.uleb128 0x19
 4582 0052 03       		.uleb128 0x3
 4583 0053 0E       		.uleb128 0xe
 4584 0054 3A       		.uleb128 0x3a
 4585 0055 0B       		.uleb128 0xb
 4586 0056 3B       		.uleb128 0x3b
 4587 0057 0B       		.uleb128 0xb
 4588 0058 27       		.uleb128 0x27
 4589 0059 19       		.uleb128 0x19
 4590 005a 11       		.uleb128 0x11
 4591 005b 01       		.uleb128 0x1
 4592 005c 12       		.uleb128 0x12
 4593 005d 06       		.uleb128 0x6
 4594 005e 40       		.uleb128 0x40
 4595 005f 18       		.uleb128 0x18
 4596 0060 9642     		.uleb128 0x2116
 4597 0062 19       		.uleb128 0x19
 4598 0063 01       		.uleb128 0x1
 4599 0064 13       		.uleb128 0x13
 4600 0065 00       		.byte	0
 4601 0066 00       		.byte	0
 4602 0067 09       		.uleb128 0x9
 4603 0068 34       		.uleb128 0x34
 4604 0069 00       		.byte	0
 4605 006a 03       		.uleb128 0x3
 4606 006b 0E       		.uleb128 0xe
 4607 006c 3A       		.uleb128 0x3a
 4608 006d 0B       		.uleb128 0xb
 4609 006e 3B       		.uleb128 0x3b
 4610 006f 0B       		.uleb128 0xb
 4611 0070 49       		.uleb128 0x49
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 123


 4612 0071 13       		.uleb128 0x13
 4613 0072 02       		.uleb128 0x2
 4614 0073 18       		.uleb128 0x18
 4615 0074 00       		.byte	0
 4616 0075 00       		.byte	0
 4617 0076 0A       		.uleb128 0xa
 4618 0077 2E       		.uleb128 0x2e
 4619 0078 01       		.byte	0x1
 4620 0079 3F       		.uleb128 0x3f
 4621 007a 19       		.uleb128 0x19
 4622 007b 03       		.uleb128 0x3
 4623 007c 0E       		.uleb128 0xe
 4624 007d 3A       		.uleb128 0x3a
 4625 007e 0B       		.uleb128 0xb
 4626 007f 3B       		.uleb128 0x3b
 4627 0080 05       		.uleb128 0x5
 4628 0081 27       		.uleb128 0x27
 4629 0082 19       		.uleb128 0x19
 4630 0083 11       		.uleb128 0x11
 4631 0084 01       		.uleb128 0x1
 4632 0085 12       		.uleb128 0x12
 4633 0086 06       		.uleb128 0x6
 4634 0087 40       		.uleb128 0x40
 4635 0088 18       		.uleb128 0x18
 4636 0089 9642     		.uleb128 0x2116
 4637 008b 19       		.uleb128 0x19
 4638 008c 01       		.uleb128 0x1
 4639 008d 13       		.uleb128 0x13
 4640 008e 00       		.byte	0
 4641 008f 00       		.byte	0
 4642 0090 0B       		.uleb128 0xb
 4643 0091 34       		.uleb128 0x34
 4644 0092 00       		.byte	0
 4645 0093 03       		.uleb128 0x3
 4646 0094 0E       		.uleb128 0xe
 4647 0095 3A       		.uleb128 0x3a
 4648 0096 0B       		.uleb128 0xb
 4649 0097 3B       		.uleb128 0x3b
 4650 0098 05       		.uleb128 0x5
 4651 0099 49       		.uleb128 0x49
 4652 009a 13       		.uleb128 0x13
 4653 009b 02       		.uleb128 0x2
 4654 009c 18       		.uleb128 0x18
 4655 009d 00       		.byte	0
 4656 009e 00       		.byte	0
 4657 009f 0C       		.uleb128 0xc
 4658 00a0 2E       		.uleb128 0x2e
 4659 00a1 00       		.byte	0
 4660 00a2 3F       		.uleb128 0x3f
 4661 00a3 19       		.uleb128 0x19
 4662 00a4 03       		.uleb128 0x3
 4663 00a5 0E       		.uleb128 0xe
 4664 00a6 3A       		.uleb128 0x3a
 4665 00a7 0B       		.uleb128 0xb
 4666 00a8 3B       		.uleb128 0x3b
 4667 00a9 05       		.uleb128 0x5
 4668 00aa 27       		.uleb128 0x27
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 124


 4669 00ab 19       		.uleb128 0x19
 4670 00ac 11       		.uleb128 0x11
 4671 00ad 01       		.uleb128 0x1
 4672 00ae 12       		.uleb128 0x12
 4673 00af 06       		.uleb128 0x6
 4674 00b0 40       		.uleb128 0x40
 4675 00b1 18       		.uleb128 0x18
 4676 00b2 9642     		.uleb128 0x2116
 4677 00b4 19       		.uleb128 0x19
 4678 00b5 00       		.byte	0
 4679 00b6 00       		.byte	0
 4680 00b7 0D       		.uleb128 0xd
 4681 00b8 2E       		.uleb128 0x2e
 4682 00b9 01       		.byte	0x1
 4683 00ba 3F       		.uleb128 0x3f
 4684 00bb 19       		.uleb128 0x19
 4685 00bc 03       		.uleb128 0x3
 4686 00bd 0E       		.uleb128 0xe
 4687 00be 3A       		.uleb128 0x3a
 4688 00bf 0B       		.uleb128 0xb
 4689 00c0 3B       		.uleb128 0x3b
 4690 00c1 05       		.uleb128 0x5
 4691 00c2 27       		.uleb128 0x27
 4692 00c3 19       		.uleb128 0x19
 4693 00c4 49       		.uleb128 0x49
 4694 00c5 13       		.uleb128 0x13
 4695 00c6 11       		.uleb128 0x11
 4696 00c7 01       		.uleb128 0x1
 4697 00c8 12       		.uleb128 0x12
 4698 00c9 06       		.uleb128 0x6
 4699 00ca 40       		.uleb128 0x40
 4700 00cb 18       		.uleb128 0x18
 4701 00cc 9642     		.uleb128 0x2116
 4702 00ce 19       		.uleb128 0x19
 4703 00cf 01       		.uleb128 0x1
 4704 00d0 13       		.uleb128 0x13
 4705 00d1 00       		.byte	0
 4706 00d2 00       		.byte	0
 4707 00d3 0E       		.uleb128 0xe
 4708 00d4 05       		.uleb128 0x5
 4709 00d5 00       		.byte	0
 4710 00d6 03       		.uleb128 0x3
 4711 00d7 0E       		.uleb128 0xe
 4712 00d8 3A       		.uleb128 0x3a
 4713 00d9 0B       		.uleb128 0xb
 4714 00da 3B       		.uleb128 0x3b
 4715 00db 05       		.uleb128 0x5
 4716 00dc 49       		.uleb128 0x49
 4717 00dd 13       		.uleb128 0x13
 4718 00de 02       		.uleb128 0x2
 4719 00df 18       		.uleb128 0x18
 4720 00e0 00       		.byte	0
 4721 00e1 00       		.byte	0
 4722 00e2 0F       		.uleb128 0xf
 4723 00e3 2E       		.uleb128 0x2e
 4724 00e4 00       		.byte	0
 4725 00e5 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 125


 4726 00e6 19       		.uleb128 0x19
 4727 00e7 03       		.uleb128 0x3
 4728 00e8 0E       		.uleb128 0xe
 4729 00e9 3A       		.uleb128 0x3a
 4730 00ea 0B       		.uleb128 0xb
 4731 00eb 3B       		.uleb128 0x3b
 4732 00ec 05       		.uleb128 0x5
 4733 00ed 27       		.uleb128 0x27
 4734 00ee 19       		.uleb128 0x19
 4735 00ef 49       		.uleb128 0x49
 4736 00f0 13       		.uleb128 0x13
 4737 00f1 11       		.uleb128 0x11
 4738 00f2 01       		.uleb128 0x1
 4739 00f3 12       		.uleb128 0x12
 4740 00f4 06       		.uleb128 0x6
 4741 00f5 40       		.uleb128 0x40
 4742 00f6 18       		.uleb128 0x18
 4743 00f7 9742     		.uleb128 0x2117
 4744 00f9 19       		.uleb128 0x19
 4745 00fa 00       		.byte	0
 4746 00fb 00       		.byte	0
 4747 00fc 10       		.uleb128 0x10
 4748 00fd 2E       		.uleb128 0x2e
 4749 00fe 01       		.byte	0x1
 4750 00ff 3F       		.uleb128 0x3f
 4751 0100 19       		.uleb128 0x19
 4752 0101 03       		.uleb128 0x3
 4753 0102 0E       		.uleb128 0xe
 4754 0103 3A       		.uleb128 0x3a
 4755 0104 0B       		.uleb128 0xb
 4756 0105 3B       		.uleb128 0x3b
 4757 0106 05       		.uleb128 0x5
 4758 0107 27       		.uleb128 0x27
 4759 0108 19       		.uleb128 0x19
 4760 0109 49       		.uleb128 0x49
 4761 010a 13       		.uleb128 0x13
 4762 010b 11       		.uleb128 0x11
 4763 010c 01       		.uleb128 0x1
 4764 010d 12       		.uleb128 0x12
 4765 010e 06       		.uleb128 0x6
 4766 010f 40       		.uleb128 0x40
 4767 0110 18       		.uleb128 0x18
 4768 0111 9742     		.uleb128 0x2117
 4769 0113 19       		.uleb128 0x19
 4770 0114 01       		.uleb128 0x1
 4771 0115 13       		.uleb128 0x13
 4772 0116 00       		.byte	0
 4773 0117 00       		.byte	0
 4774 0118 11       		.uleb128 0x11
 4775 0119 2E       		.uleb128 0x2e
 4776 011a 01       		.byte	0x1
 4777 011b 3F       		.uleb128 0x3f
 4778 011c 19       		.uleb128 0x19
 4779 011d 03       		.uleb128 0x3
 4780 011e 0E       		.uleb128 0xe
 4781 011f 3A       		.uleb128 0x3a
 4782 0120 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 126


 4783 0121 3B       		.uleb128 0x3b
 4784 0122 05       		.uleb128 0x5
 4785 0123 27       		.uleb128 0x27
 4786 0124 19       		.uleb128 0x19
 4787 0125 11       		.uleb128 0x11
 4788 0126 01       		.uleb128 0x1
 4789 0127 12       		.uleb128 0x12
 4790 0128 06       		.uleb128 0x6
 4791 0129 40       		.uleb128 0x40
 4792 012a 18       		.uleb128 0x18
 4793 012b 9742     		.uleb128 0x2117
 4794 012d 19       		.uleb128 0x19
 4795 012e 01       		.uleb128 0x1
 4796 012f 13       		.uleb128 0x13
 4797 0130 00       		.byte	0
 4798 0131 00       		.byte	0
 4799 0132 12       		.uleb128 0x12
 4800 0133 34       		.uleb128 0x34
 4801 0134 00       		.byte	0
 4802 0135 03       		.uleb128 0x3
 4803 0136 0E       		.uleb128 0xe
 4804 0137 3A       		.uleb128 0x3a
 4805 0138 0B       		.uleb128 0xb
 4806 0139 3B       		.uleb128 0x3b
 4807 013a 0B       		.uleb128 0xb
 4808 013b 49       		.uleb128 0x49
 4809 013c 13       		.uleb128 0x13
 4810 013d 3F       		.uleb128 0x3f
 4811 013e 19       		.uleb128 0x19
 4812 013f 02       		.uleb128 0x2
 4813 0140 18       		.uleb128 0x18
 4814 0141 00       		.byte	0
 4815 0142 00       		.byte	0
 4816 0143 13       		.uleb128 0x13
 4817 0144 01       		.uleb128 0x1
 4818 0145 01       		.byte	0x1
 4819 0146 49       		.uleb128 0x49
 4820 0147 13       		.uleb128 0x13
 4821 0148 01       		.uleb128 0x1
 4822 0149 13       		.uleb128 0x13
 4823 014a 00       		.byte	0
 4824 014b 00       		.byte	0
 4825 014c 14       		.uleb128 0x14
 4826 014d 21       		.uleb128 0x21
 4827 014e 00       		.byte	0
 4828 014f 49       		.uleb128 0x49
 4829 0150 13       		.uleb128 0x13
 4830 0151 2F       		.uleb128 0x2f
 4831 0152 0B       		.uleb128 0xb
 4832 0153 00       		.byte	0
 4833 0154 00       		.byte	0
 4834 0155 15       		.uleb128 0x15
 4835 0156 34       		.uleb128 0x34
 4836 0157 00       		.byte	0
 4837 0158 03       		.uleb128 0x3
 4838 0159 0E       		.uleb128 0xe
 4839 015a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 127


 4840 015b 0B       		.uleb128 0xb
 4841 015c 3B       		.uleb128 0x3b
 4842 015d 05       		.uleb128 0x5
 4843 015e 49       		.uleb128 0x49
 4844 015f 13       		.uleb128 0x13
 4845 0160 3F       		.uleb128 0x3f
 4846 0161 19       		.uleb128 0x19
 4847 0162 3C       		.uleb128 0x3c
 4848 0163 19       		.uleb128 0x19
 4849 0164 00       		.byte	0
 4850 0165 00       		.byte	0
 4851 0166 00       		.byte	0
 4852              		.section	.debug_aranges,"",%progbits
 4853 0000 54010000 		.4byte	0x154
 4854 0004 0200     		.2byte	0x2
 4855 0006 00000000 		.4byte	.Ldebug_info0
 4856 000a 04       		.byte	0x4
 4857 000b 00       		.byte	0
 4858 000c 0000     		.2byte	0
 4859 000e 0000     		.2byte	0
 4860 0010 00000000 		.4byte	.LFB34
 4861 0014 38000000 		.4byte	.LFE34-.LFB34
 4862 0018 00000000 		.4byte	.LFB35
 4863 001c BC000000 		.4byte	.LFE35-.LFB35
 4864 0020 00000000 		.4byte	.LFB36
 4865 0024 54000000 		.4byte	.LFE36-.LFB36
 4866 0028 00000000 		.4byte	.LFB37
 4867 002c 44000000 		.4byte	.LFE37-.LFB37
 4868 0030 00000000 		.4byte	.LFB38
 4869 0034 38000000 		.4byte	.LFE38-.LFB38
 4870 0038 00000000 		.4byte	.LFB39
 4871 003c 4C000000 		.4byte	.LFE39-.LFB39
 4872 0040 00000000 		.4byte	.LFB40
 4873 0044 34000000 		.4byte	.LFE40-.LFB40
 4874 0048 00000000 		.4byte	.LFB41
 4875 004c DC000000 		.4byte	.LFE41-.LFB41
 4876 0050 00000000 		.4byte	.LFB42
 4877 0054 58000000 		.4byte	.LFE42-.LFB42
 4878 0058 00000000 		.4byte	.LFB43
 4879 005c 1C000000 		.4byte	.LFE43-.LFB43
 4880 0060 00000000 		.4byte	.LFB44
 4881 0064 1C000000 		.4byte	.LFE44-.LFB44
 4882 0068 00000000 		.4byte	.LFB45
 4883 006c 28000000 		.4byte	.LFE45-.LFB45
 4884 0070 00000000 		.4byte	.LFB46
 4885 0074 20000000 		.4byte	.LFE46-.LFB46
 4886 0078 00000000 		.4byte	.LFB47
 4887 007c 1C000000 		.4byte	.LFE47-.LFB47
 4888 0080 00000000 		.4byte	.LFB48
 4889 0084 28000000 		.4byte	.LFE48-.LFB48
 4890 0088 00000000 		.4byte	.LFB49
 4891 008c CC000000 		.4byte	.LFE49-.LFB49
 4892 0090 00000000 		.4byte	.LFB50
 4893 0094 1C010000 		.4byte	.LFE50-.LFB50
 4894 0098 00000000 		.4byte	.LFB51
 4895 009c 6C000000 		.4byte	.LFE51-.LFB51
 4896 00a0 00000000 		.4byte	.LFB52
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 128


 4897 00a4 34000000 		.4byte	.LFE52-.LFB52
 4898 00a8 00000000 		.4byte	.LFB53
 4899 00ac 58000000 		.4byte	.LFE53-.LFB53
 4900 00b0 00000000 		.4byte	.LFB54
 4901 00b4 84010000 		.4byte	.LFE54-.LFB54
 4902 00b8 00000000 		.4byte	.LFB55
 4903 00bc C8000000 		.4byte	.LFE55-.LFB55
 4904 00c0 00000000 		.4byte	.LFB56
 4905 00c4 7C000000 		.4byte	.LFE56-.LFB56
 4906 00c8 00000000 		.4byte	.LFB57
 4907 00cc 34000000 		.4byte	.LFE57-.LFB57
 4908 00d0 00000000 		.4byte	.LFB58
 4909 00d4 2C000000 		.4byte	.LFE58-.LFB58
 4910 00d8 00000000 		.4byte	.LFB59
 4911 00dc 44000000 		.4byte	.LFE59-.LFB59
 4912 00e0 00000000 		.4byte	.LFB60
 4913 00e4 6A000000 		.4byte	.LFE60-.LFB60
 4914 00e8 00000000 		.4byte	.LFB61
 4915 00ec 1C000000 		.4byte	.LFE61-.LFB61
 4916 00f0 00000000 		.4byte	.LFB62
 4917 00f4 24000000 		.4byte	.LFE62-.LFB62
 4918 00f8 00000000 		.4byte	.LFB63
 4919 00fc 1C000000 		.4byte	.LFE63-.LFB63
 4920 0100 00000000 		.4byte	.LFB64
 4921 0104 24000000 		.4byte	.LFE64-.LFB64
 4922 0108 00000000 		.4byte	.LFB65
 4923 010c 1C000000 		.4byte	.LFE65-.LFB65
 4924 0110 00000000 		.4byte	.LFB66
 4925 0114 24000000 		.4byte	.LFE66-.LFB66
 4926 0118 00000000 		.4byte	.LFB67
 4927 011c 1C000000 		.4byte	.LFE67-.LFB67
 4928 0120 00000000 		.4byte	.LFB68
 4929 0124 24000000 		.4byte	.LFE68-.LFB68
 4930 0128 00000000 		.4byte	.LFB69
 4931 012c 20000000 		.4byte	.LFE69-.LFB69
 4932 0130 00000000 		.4byte	.LFB70
 4933 0134 3C000000 		.4byte	.LFE70-.LFB70
 4934 0138 00000000 		.4byte	.LFB71
 4935 013c 50000000 		.4byte	.LFE71-.LFB71
 4936 0140 00000000 		.4byte	.LFB72
 4937 0144 24000000 		.4byte	.LFE72-.LFB72
 4938 0148 00000000 		.4byte	.LFB73
 4939 014c A0000000 		.4byte	.LFE73-.LFB73
 4940 0150 00000000 		.4byte	0
 4941 0154 00000000 		.4byte	0
 4942              		.section	.debug_ranges,"",%progbits
 4943              	.Ldebug_ranges0:
 4944 0000 00000000 		.4byte	.LFB34
 4945 0004 38000000 		.4byte	.LFE34
 4946 0008 00000000 		.4byte	.LFB35
 4947 000c BC000000 		.4byte	.LFE35
 4948 0010 00000000 		.4byte	.LFB36
 4949 0014 54000000 		.4byte	.LFE36
 4950 0018 00000000 		.4byte	.LFB37
 4951 001c 44000000 		.4byte	.LFE37
 4952 0020 00000000 		.4byte	.LFB38
 4953 0024 38000000 		.4byte	.LFE38
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 129


 4954 0028 00000000 		.4byte	.LFB39
 4955 002c 4C000000 		.4byte	.LFE39
 4956 0030 00000000 		.4byte	.LFB40
 4957 0034 34000000 		.4byte	.LFE40
 4958 0038 00000000 		.4byte	.LFB41
 4959 003c DC000000 		.4byte	.LFE41
 4960 0040 00000000 		.4byte	.LFB42
 4961 0044 58000000 		.4byte	.LFE42
 4962 0048 00000000 		.4byte	.LFB43
 4963 004c 1C000000 		.4byte	.LFE43
 4964 0050 00000000 		.4byte	.LFB44
 4965 0054 1C000000 		.4byte	.LFE44
 4966 0058 00000000 		.4byte	.LFB45
 4967 005c 28000000 		.4byte	.LFE45
 4968 0060 00000000 		.4byte	.LFB46
 4969 0064 20000000 		.4byte	.LFE46
 4970 0068 00000000 		.4byte	.LFB47
 4971 006c 1C000000 		.4byte	.LFE47
 4972 0070 00000000 		.4byte	.LFB48
 4973 0074 28000000 		.4byte	.LFE48
 4974 0078 00000000 		.4byte	.LFB49
 4975 007c CC000000 		.4byte	.LFE49
 4976 0080 00000000 		.4byte	.LFB50
 4977 0084 1C010000 		.4byte	.LFE50
 4978 0088 00000000 		.4byte	.LFB51
 4979 008c 6C000000 		.4byte	.LFE51
 4980 0090 00000000 		.4byte	.LFB52
 4981 0094 34000000 		.4byte	.LFE52
 4982 0098 00000000 		.4byte	.LFB53
 4983 009c 58000000 		.4byte	.LFE53
 4984 00a0 00000000 		.4byte	.LFB54
 4985 00a4 84010000 		.4byte	.LFE54
 4986 00a8 00000000 		.4byte	.LFB55
 4987 00ac C8000000 		.4byte	.LFE55
 4988 00b0 00000000 		.4byte	.LFB56
 4989 00b4 7C000000 		.4byte	.LFE56
 4990 00b8 00000000 		.4byte	.LFB57
 4991 00bc 34000000 		.4byte	.LFE57
 4992 00c0 00000000 		.4byte	.LFB58
 4993 00c4 2C000000 		.4byte	.LFE58
 4994 00c8 00000000 		.4byte	.LFB59
 4995 00cc 44000000 		.4byte	.LFE59
 4996 00d0 00000000 		.4byte	.LFB60
 4997 00d4 6A000000 		.4byte	.LFE60
 4998 00d8 00000000 		.4byte	.LFB61
 4999 00dc 1C000000 		.4byte	.LFE61
 5000 00e0 00000000 		.4byte	.LFB62
 5001 00e4 24000000 		.4byte	.LFE62
 5002 00e8 00000000 		.4byte	.LFB63
 5003 00ec 1C000000 		.4byte	.LFE63
 5004 00f0 00000000 		.4byte	.LFB64
 5005 00f4 24000000 		.4byte	.LFE64
 5006 00f8 00000000 		.4byte	.LFB65
 5007 00fc 1C000000 		.4byte	.LFE65
 5008 0100 00000000 		.4byte	.LFB66
 5009 0104 24000000 		.4byte	.LFE66
 5010 0108 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 130


 5011 010c 1C000000 		.4byte	.LFE67
 5012 0110 00000000 		.4byte	.LFB68
 5013 0114 24000000 		.4byte	.LFE68
 5014 0118 00000000 		.4byte	.LFB69
 5015 011c 20000000 		.4byte	.LFE69
 5016 0120 00000000 		.4byte	.LFB70
 5017 0124 3C000000 		.4byte	.LFE70
 5018 0128 00000000 		.4byte	.LFB71
 5019 012c 50000000 		.4byte	.LFE71
 5020 0130 00000000 		.4byte	.LFB72
 5021 0134 24000000 		.4byte	.LFE72
 5022 0138 00000000 		.4byte	.LFB73
 5023 013c A0000000 		.4byte	.LFE73
 5024 0140 00000000 		.4byte	0
 5025 0144 00000000 		.4byte	0
 5026              		.section	.debug_line,"",%progbits
 5027              	.Ldebug_line0:
 5028 0000 D8040000 		.section	.debug_str,"MS",%progbits,1
 5028      02005800 
 5028      00000201 
 5028      FB0E0D00 
 5028      01010101 
 5029              	.LASF102:
 5030 0000 43617053 		.ascii	"CapSense_scanSpeedTbl\000"
 5030      656E7365 
 5030      5F736361 
 5030      6E537065 
 5030      65645462 
 5031              	.LASF64:
 5032 0016 43617053 		.ascii	"CapSense_PostScan\000"
 5032      656E7365 
 5032      5F506F73 
 5032      74536361 
 5032      6E00
 5033              	.LASF103:
 5034 0028 43617053 		.ascii	"CapSense_csdStatusVar\000"
 5034      656E7365 
 5034      5F637364 
 5034      53746174 
 5034      75735661 
 5035              	.LASF110:
 5036 003e 43617053 		.ascii	"CapSense_compensationIDAC\000"
 5036      656E7365 
 5036      5F636F6D 
 5036      70656E73 
 5036      6174696F 
 5037              	.LASF120:
 5038 0058 43617053 		.ascii	"CapSense_maskTable\000"
 5038      656E7365 
 5038      5F6D6173 
 5038      6B546162 
 5038      6C6500
 5039              	.LASF8:
 5040 006b 756E7369 		.ascii	"unsigned int\000"
 5040      676E6564 
 5040      20696E74 
 5040      00
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 131


 5041              	.LASF113:
 5042 0078 43617053 		.ascii	"CapSense_sampleClkDividerVal\000"
 5042      656E7365 
 5042      5F73616D 
 5042      706C6543 
 5042      6C6B4469 
 5043              	.LASF47:
 5044 0095 696E7465 		.ascii	"interruptState\000"
 5044      72727570 
 5044      74537461 
 5044      746500
 5045              	.LASF15:
 5046 00a4 72656738 		.ascii	"reg8\000"
 5046      00
 5047              	.LASF96:
 5048 00a9 77696467 		.ascii	"widgetsNum\000"
 5048      6574734E 
 5048      756D00
 5049              	.LASF125:
 5050 00b4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5050      43313120 
 5050      352E342E 
 5050      31203230 
 5050      31363036 
 5051 00e7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5051      20726576 
 5051      6973696F 
 5051      6E203233 
 5051      37373135 
 5052 011a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5052      66756E63 
 5052      74696F6E 
 5052      2D736563 
 5052      74696F6E 
 5053              	.LASF30:
 5054 0142 43617053 		.ascii	"CapSense_ScanWidget\000"
 5054      656E7365 
 5054      5F536361 
 5054      6E576964 
 5054      67657400 
 5055              	.LASF46:
 5056 0156 70696E48 		.ascii	"pinHSIOMShift\000"
 5056      53494F4D 
 5056      53686966 
 5056      7400
 5057              	.LASF77:
 5058 0164 43617053 		.ascii	"CapSense_SetSenseClkDivider\000"
 5058      656E7365 
 5058      5F536574 
 5058      53656E73 
 5058      65436C6B 
 5059              	.LASF93:
 5060 0180 61766756 		.ascii	"avgVal\000"
 5060      616C00
 5061              	.LASF68:
 5062 0187 43617053 		.ascii	"CapSense_IsBusy\000"
 5062      656E7365 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 132


 5062      5F497342 
 5062      75737900 
 5063              	.LASF45:
 5064 0197 70696E4D 		.ascii	"pinModeShift\000"
 5064      6F646553 
 5064      68696674 
 5064      00
 5065              	.LASF86:
 5066 01a4 43617053 		.ascii	"CapSense_SetCompensationIDAC\000"
 5066      656E7365 
 5066      5F536574 
 5066      436F6D70 
 5066      656E7361 
 5067              	.LASF122:
 5068 01c1 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5068      656E7365 
 5068      5F726177 
 5068      44617461 
 5068      496E6465 
 5069              	.LASF50:
 5070 01d7 43617053 		.ascii	"CapSense_DisableSensor\000"
 5070      656E7365 
 5070      5F446973 
 5070      61626C65 
 5070      53656E73 
 5071              	.LASF20:
 5072 01ee 43617053 		.ascii	"CapSense_CsdHwBlockInit\000"
 5072      656E7365 
 5072      5F437364 
 5072      4877426C 
 5072      6F636B49 
 5073              	.LASF51:
 5074 0206 696E6163 		.ascii	"inactiveConnect\000"
 5074      74697665 
 5074      436F6E6E 
 5074      65637400 
 5075              	.LASF124:
 5076 0216 43617053 		.ascii	"CapSense_csdTrim1\000"
 5076      656E7365 
 5076      5F637364 
 5076      5472696D 
 5076      3100
 5077              	.LASF34:
 5078 0228 43617053 		.ascii	"CapSense_Stop\000"
 5078      656E7365 
 5078      5F53746F 
 5078      7000
 5079              	.LASF115:
 5080 0236 43617053 		.ascii	"CapSense_prtSelTbl\000"
 5080      656E7365 
 5080      5F707274 
 5080      53656C54 
 5080      626C00
 5081              	.LASF43:
 5082 0249 43617053 		.ascii	"CapSense_ClearSensors\000"
 5082      656E7365 
 5082      5F436C65 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 133


 5082      61725365 
 5082      6E736F72 
 5083              	.LASF117:
 5084 025f 43617053 		.ascii	"CapSense_prtDRTbl\000"
 5084      656E7365 
 5084      5F707274 
 5084      44525462 
 5084      6C00
 5085              	.LASF65:
 5086 0271 43617053 		.ascii	"CapSense_EnableShieldElectrode\000"
 5086      656E7365 
 5086      5F456E61 
 5086      626C6553 
 5086      6869656C 
 5087              	.LASF12:
 5088 0290 666C6F61 		.ascii	"float\000"
 5088      7400
 5089              	.LASF7:
 5090 0296 6C6F6E67 		.ascii	"long long unsigned int\000"
 5090      206C6F6E 
 5090      6720756E 
 5090      7369676E 
 5090      65642069 
 5091              	.LASF104:
 5092 02ad 43617053 		.ascii	"CapSense_sensorIndex\000"
 5092      656E7365 
 5092      5F73656E 
 5092      736F7249 
 5092      6E646578 
 5093              	.LASF31:
 5094 02c2 77696467 		.ascii	"widget\000"
 5094      657400
 5095              	.LASF66:
 5096 02c9 43617053 		.ascii	"CapSense_SetShieldDelay\000"
 5096      656E7365 
 5096      5F536574 
 5096      53686965 
 5096      6C644465 
 5097              	.LASF114:
 5098 02e1 43617053 		.ascii	"CapSense_widgetNumber\000"
 5098      656E7365 
 5098      5F776964 
 5098      6765744E 
 5098      756D6265 
 5099              	.LASF116:
 5100 02f7 43617053 		.ascii	"CapSense_prtCfgTbl\000"
 5100      656E7365 
 5100      5F707274 
 5100      43666754 
 5100      626C00
 5101              	.LASF42:
 5102 030a 43617053 		.ascii	"CapSense_GetScanResolution\000"
 5102      656E7365 
 5102      5F476574 
 5102      5363616E 
 5102      5265736F 
 5103              	.LASF126:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 134


 5104 0325 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense.c\000"
 5104      72617465 
 5104      645F536F 
 5104      75726365 
 5104      5C50536F 
 5105              	.LASF95:
 5106 0347 43617053 		.ascii	"CapSense_NormalizeWidgets\000"
 5106      656E7365 
 5106      5F4E6F72 
 5106      6D616C69 
 5106      7A655769 
 5107              	.LASF81:
 5108 0361 6D6F6475 		.ascii	"modulatorClk\000"
 5108      6C61746F 
 5108      72436C6B 
 5108      00
 5109              	.LASF39:
 5110 036e 76616C75 		.ascii	"value\000"
 5110      6500
 5111              	.LASF48:
 5112 0374 6E657752 		.ascii	"newRegisterValue\000"
 5112      65676973 
 5112      74657256 
 5112      616C7565 
 5112      00
 5113              	.LASF38:
 5114 0385 43617053 		.ascii	"CapSense_WriteSensorRaw\000"
 5114      656E7365 
 5114      5F577269 
 5114      74655365 
 5114      6E736F72 
 5115              	.LASF112:
 5116 039d 43617053 		.ascii	"CapSense_senseClkDividerVal\000"
 5116      656E7365 
 5116      5F73656E 
 5116      7365436C 
 5116      6B446976 
 5117              	.LASF23:
 5118 03b9 43617053 		.ascii	"CapSense_Enable\000"
 5118      656E7365 
 5118      5F456E61 
 5118      626C6500 
 5119              	.LASF52:
 5120 03c9 73656E73 		.ascii	"sensorState\000"
 5120      6F725374 
 5120      61746500 
 5121              	.LASF61:
 5122 03d5 43617053 		.ascii	"CapSense_PreScan\000"
 5122      656E7365 
 5122      5F507265 
 5122      5363616E 
 5122      00
 5123              	.LASF73:
 5124 03e6 6F666673 		.ascii	"offset\000"
 5124      657400
 5125              	.LASF40:
 5126 03ed 43617053 		.ascii	"CapSense_SetScanResolution\000"
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 135


 5126      656E7365 
 5126      5F536574 
 5126      5363616E 
 5126      5265736F 
 5127              	.LASF27:
 5128 0408 43617053 		.ascii	"CapSense_ScanSensor\000"
 5128      656E7365 
 5128      5F536361 
 5128      6E53656E 
 5128      736F7200 
 5129              	.LASF55:
 5130 041c 7072744E 		.ascii	"prtNumberTmp\000"
 5130      756D6265 
 5130      72546D70 
 5130      00
 5131              	.LASF32:
 5132 0429 73656E73 		.ascii	"sensorsPerWidget\000"
 5132      6F727350 
 5132      65725769 
 5132      64676574 
 5132      00
 5133              	.LASF25:
 5134 043a 43617053 		.ascii	"CapSense_initVar\000"
 5134      656E7365 
 5134      5F696E69 
 5134      74566172 
 5134      00
 5135              	.LASF123:
 5136 044b 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5136      656E7365 
 5136      5F6E756D 
 5136      6265724F 
 5136      6653656E 
 5137              	.LASF92:
 5138 0464 63757253 		.ascii	"curSample\000"
 5138      616D706C 
 5138      6500
 5139              	.LASF29:
 5140 046e 73656E73 		.ascii	"sensor\000"
 5140      6F7200
 5141              	.LASF105:
 5142 0475 43617053 		.ascii	"CapSense_sensorRaw\000"
 5142      656E7365 
 5142      5F73656E 
 5142      736F7252 
 5142      617700
 5143              	.LASF14:
 5144 0488 63686172 		.ascii	"char\000"
 5144      00
 5145              	.LASF71:
 5146 048d 7461626C 		.ascii	"table\000"
 5146      6500
 5147              	.LASF36:
 5148 0493 43617053 		.ascii	"CapSense_FindNextSensor\000"
 5148      656E7365 
 5148      5F46696E 
 5148      644E6578 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 136


 5148      7453656E 
 5149              	.LASF118:
 5150 04ab 43617053 		.ascii	"CapSense_pcTable\000"
 5150      656E7365 
 5150      5F706354 
 5150      61626C65 
 5150      00
 5151              	.LASF10:
 5152 04bc 75696E74 		.ascii	"uint16\000"
 5152      313600
 5153              	.LASF41:
 5154 04c3 7265736F 		.ascii	"resolution\000"
 5154      6C757469 
 5154      6F6E00
 5155              	.LASF111:
 5156 04ce 43617053 		.ascii	"CapSense_widgetResolution\000"
 5156      656E7365 
 5156      5F776964 
 5156      67657452 
 5156      65736F6C 
 5157              	.LASF56:
 5158 04e8 70696E4E 		.ascii	"pinNumberTmp\000"
 5158      756D6265 
 5158      72546D70 
 5158      00
 5159              	.LASF88:
 5160 04f5 43617053 		.ascii	"CapSense_GetIDACRange\000"
 5160      656E7365 
 5160      5F476574 
 5160      49444143 
 5160      52616E67 
 5161              	.LASF35:
 5162 050b 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 5162      656E7365 
 5162      5F536361 
 5162      6E456E61 
 5162      626C6564 
 5163              	.LASF109:
 5164 0527 43617053 		.ascii	"CapSense_modulationIDAC\000"
 5164      656E7365 
 5164      5F6D6F64 
 5164      756C6174 
 5164      696F6E49 
 5165              	.LASF6:
 5166 053f 6C6F6E67 		.ascii	"long long int\000"
 5166      206C6F6E 
 5166      6720696E 
 5166      7400
 5167              	.LASF26:
 5168 054d 656E6162 		.ascii	"enableFlag\000"
 5168      6C65466C 
 5168      616700
 5169              	.LASF121:
 5170 0558 43617053 		.ascii	"CapSense_pinShiftTbl\000"
 5170      656E7365 
 5170      5F70696E 
 5170      53686966 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 137


 5170      7454626C 
 5171              	.LASF98:
 5172 056d 63757272 		.ascii	"currentWidget\000"
 5172      656E7457 
 5172      69646765 
 5172      7400
 5173              	.LASF44:
 5174 057b 43617053 		.ascii	"CapSense_EnableSensor\000"
 5174      656E7365 
 5174      5F456E61 
 5174      626C6553 
 5174      656E736F 
 5175              	.LASF80:
 5176 0591 43617053 		.ascii	"CapSense_SetModulatorClkDivider\000"
 5176      656E7365 
 5176      5F536574 
 5176      4D6F6475 
 5176      6C61746F 
 5177              	.LASF106:
 5178 05b1 43617053 		.ascii	"CapSense_unscannedSnsDriveMode\000"
 5178      656E7365 
 5178      5F756E73 
 5178      63616E6E 
 5178      6564536E 
 5179              	.LASF76:
 5180 05d0 43617053 		.ascii	"CapSense_GetSenseClkDivider\000"
 5180      656E7365 
 5180      5F476574 
 5180      53656E73 
 5180      65436C6B 
 5181              	.LASF11:
 5182 05ec 75696E74 		.ascii	"uint32\000"
 5182      333200
 5183              	.LASF59:
 5184 05f3 70696E4E 		.ascii	"pinNumber\000"
 5184      756D6265 
 5184      7200
 5185              	.LASF28:
 5186 05fd 736E7349 		.ascii	"snsIndex\000"
 5186      6E646578 
 5186      00
 5187              	.LASF18:
 5188 0606 6C6F6E67 		.ascii	"long double\000"
 5188      20646F75 
 5188      626C6500 
 5189              	.LASF33:
 5190 0612 6C617374 		.ascii	"lastSensor\000"
 5190      53656E73 
 5190      6F7200
 5191              	.LASF16:
 5192 061d 72656733 		.ascii	"reg32\000"
 5192      3200
 5193              	.LASF57:
 5194 0623 43617053 		.ascii	"CapSense_RestoreDriveModeAllPins\000"
 5194      656E7365 
 5194      5F526573 
 5194      746F7265 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 138


 5194      44726976 
 5195              	.LASF89:
 5196 0644 43617053 		.ascii	"CapSense_SetIDACRange\000"
 5196      656E7365 
 5196      5F536574 
 5196      49444143 
 5196      52616E67 
 5197              	.LASF60:
 5198 065a 706F7274 		.ascii	"portNumber\000"
 5198      4E756D62 
 5198      657200
 5199              	.LASF100:
 5200 0665 6D617850 		.ascii	"maxPerWidget\000"
 5200      65725769 
 5200      64676574 
 5200      00
 5201              	.LASF91:
 5202 0672 43617053 		.ascii	"CapSense_GetSensorRaw\000"
 5202      656E7365 
 5202      5F476574 
 5202      53656E73 
 5202      6F725261 
 5203              	.LASF19:
 5204 0688 43617053 		.ascii	"CapSense_Init\000"
 5204      656E7365 
 5204      5F496E69 
 5204      7400
 5205              	.LASF78:
 5206 0696 73656E73 		.ascii	"senseClk\000"
 5206      65436C6B 
 5206      00
 5207              	.LASF58:
 5208 069f 43617053 		.ascii	"CapSense_SetPinDriveMode\000"
 5208      656E7365 
 5208      5F536574 
 5208      50696E44 
 5208      72697665 
 5209              	.LASF2:
 5210 06b8 73686F72 		.ascii	"short int\000"
 5210      7420696E 
 5210      7400
 5211              	.LASF4:
 5212 06c2 6C6F6E67 		.ascii	"long int\000"
 5212      20696E74 
 5212      00
 5213              	.LASF67:
 5214 06cb 64656C61 		.ascii	"delay\000"
 5214      7900
 5215              	.LASF69:
 5216 06d1 43617053 		.ascii	"CapSense_ReadCurrentScanningSensor\000"
 5216      656E7365 
 5216      5F526561 
 5216      64437572 
 5216      72656E74 
 5217              	.LASF53:
 5218 06f4 43617053 		.ascii	"CapSense_SetDriveModeAllPins\000"
 5218      656E7365 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 139


 5218      5F536574 
 5218      44726976 
 5218      654D6F64 
 5219              	.LASF107:
 5220 0711 43617053 		.ascii	"CapSense_sensorEnableMaskBackup\000"
 5220      656E7365 
 5220      5F73656E 
 5220      736F7245 
 5220      6E61626C 
 5221              	.LASF94:
 5222 0731 43617053 		.ascii	"CapSense_SetUnscannedSensorState\000"
 5222      656E7365 
 5222      5F536574 
 5222      556E7363 
 5222      616E6E65 
 5223              	.LASF79:
 5224 0752 43617053 		.ascii	"CapSense_GetModulatorClkDivider\000"
 5224      656E7365 
 5224      5F476574 
 5224      4D6F6475 
 5224      6C61746F 
 5225              	.LASF108:
 5226 0772 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5226      656E7365 
 5226      5F73656E 
 5226      736F7245 
 5226      6E61626C 
 5227              	.LASF90:
 5228 078c 69446163 		.ascii	"iDacRange\000"
 5228      52616E67 
 5228      6500
 5229              	.LASF119:
 5230 0796 43617053 		.ascii	"CapSense_portTable\000"
 5230      656E7365 
 5230      5F706F72 
 5230      74546162 
 5230      6C6500
 5231              	.LASF99:
 5232 07a9 63757272 		.ascii	"currentSensor\000"
 5232      656E7453 
 5232      656E736F 
 5232      7200
 5233              	.LASF87:
 5234 07b7 636F6D70 		.ascii	"compIdacValue\000"
 5234      49646163 
 5234      56616C75 
 5234      6500
 5235              	.LASF84:
 5236 07c5 6D6F6449 		.ascii	"modIdacValue\000"
 5236      64616356 
 5236      616C7565 
 5236      00
 5237              	.LASF24:
 5238 07d2 43617053 		.ascii	"CapSense_Start\000"
 5238      656E7365 
 5238      5F537461 
 5238      727400
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 140


 5239              	.LASF17:
 5240 07e1 73697A65 		.ascii	"sizetype\000"
 5240      74797065 
 5240      00
 5241              	.LASF5:
 5242 07ea 6C6F6E67 		.ascii	"long unsigned int\000"
 5242      20756E73 
 5242      69676E65 
 5242      6420696E 
 5242      7400
 5243              	.LASF49:
 5244 07fc 706F7274 		.ascii	"port\000"
 5244      00
 5245              	.LASF74:
 5246 0801 656E4D61 		.ascii	"enMask\000"
 5246      736B00
 5247              	.LASF1:
 5248 0808 756E7369 		.ascii	"unsigned char\000"
 5248      676E6564 
 5248      20636861 
 5248      7200
 5249              	.LASF62:
 5250 0816 636F756E 		.ascii	"counterResolution\000"
 5250      74657252 
 5250      65736F6C 
 5250      7574696F 
 5250      6E00
 5251              	.LASF37:
 5252 0828 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 5252      656E7365 
 5252      5F526561 
 5252      6453656E 
 5252      736F7252 
 5253              	.LASF83:
 5254 083f 43617053 		.ascii	"CapSense_SetModulationIDAC\000"
 5254      656E7365 
 5254      5F536574 
 5254      4D6F6475 
 5254      6C617469 
 5255              	.LASF75:
 5256 085a 43617053 		.ascii	"CapSense_SetBitValue\000"
 5256      656E7365 
 5256      5F536574 
 5256      42697456 
 5256      616C7565 
 5257              	.LASF70:
 5258 086f 43617053 		.ascii	"CapSense_GetBitValue\000"
 5258      656E7365 
 5258      5F476574 
 5258      42697456 
 5258      616C7565 
 5259              	.LASF85:
 5260 0884 43617053 		.ascii	"CapSense_GetCompensationIDAC\000"
 5260      656E7365 
 5260      5F476574 
 5260      436F6D70 
 5260      656E7361 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 141


 5261              	.LASF101:
 5262 08a1 43617053 		.ascii	"CapSense_lowLevelTuningDone\000"
 5262      656E7365 
 5262      5F6C6F77 
 5262      4C657665 
 5262      6C54756E 
 5263              	.LASF82:
 5264 08bd 43617053 		.ascii	"CapSense_GetModulationIDAC\000"
 5264      656E7365 
 5264      5F476574 
 5264      4D6F6475 
 5264      6C617469 
 5265              	.LASF0:
 5266 08d8 7369676E 		.ascii	"signed char\000"
 5266      65642063 
 5266      68617200 
 5267              	.LASF97:
 5268 08e4 64617461 		.ascii	"dataPtr\000"
 5268      50747200 
 5269              	.LASF3:
 5270 08ec 73686F72 		.ascii	"short unsigned int\000"
 5270      7420756E 
 5270      7369676E 
 5270      65642069 
 5270      6E7400
 5271              	.LASF22:
 5272 08ff 6E657752 		.ascii	"newRegValue\000"
 5272      65675661 
 5272      6C756500 
 5273              	.LASF9:
 5274 090b 75696E74 		.ascii	"uint8\000"
 5274      3800
 5275              	.LASF13:
 5276 0911 646F7562 		.ascii	"double\000"
 5276      6C6500
 5277              	.LASF21:
 5278 0918 63757253 		.ascii	"curSensor\000"
 5278      656E736F 
 5278      7200
 5279              	.LASF63:
 5280 0922 6F766572 		.ascii	"oversamplingFactor\000"
 5280      73616D70 
 5280      6C696E67 
 5280      46616374 
 5280      6F7200
 5281              	.LASF54:
 5282 0935 64726976 		.ascii	"driveMode\000"
 5282      654D6F64 
 5282      6500
 5283              	.LASF127:
 5284 093f 433A5C55 		.ascii	"C:\\Users\\Jack\\Documents\\PSoC Creator\\LED capse"
 5284      73657273 
 5284      5C4A6163 
 5284      6B5C446F 
 5284      63756D65 
 5285 096d 6E736520 		.ascii	"nse slider\\PSoC_4_BLE_CapSense_Slider_LED01\\PSoC_"
 5285      736C6964 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccQSNWtO.s 			page 142


 5285      65725C50 
 5285      536F435F 
 5285      345F424C 
 5286 099e 345F424C 		.ascii	"4_BLE_CapSense_Slider_LED01.cydsn\000"
 5286      455F4361 
 5286      7053656E 
 5286      73655F53 
 5286      6C696465 
 5287              	.LASF72:
 5288 09c0 706F7369 		.ascii	"position\000"
 5288      74696F6E 
 5288      00
 5289              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
