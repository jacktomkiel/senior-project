ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_rawFilterData1,10,4
  20              		.comm	CapSense_rawFilterData2,10,4
  21              		.global	CapSense_sensorBaseline
  22              		.bss
  23              		.align	2
  24              		.type	CapSense_sensorBaseline, %object
  25              		.size	CapSense_sensorBaseline, 10
  26              	CapSense_sensorBaseline:
  27 0000 00000000 		.space	10
  27      00000000 
  27      0000
  28              		.global	CapSense_sensorBaselineLow
  29 000a 0000     		.align	2
  30              		.type	CapSense_sensorBaselineLow, %object
  31              		.size	CapSense_sensorBaselineLow, 5
  32              	CapSense_sensorBaselineLow:
  33 000c 00000000 		.space	5
  33      00
  34              		.global	CapSense_sensorSignal
  35 0011 000000   		.align	2
  36              		.type	CapSense_sensorSignal, %object
  37              		.size	CapSense_sensorSignal, 5
  38              	CapSense_sensorSignal:
  39 0014 00000000 		.space	5
  39      00
  40              		.global	CapSense_sensorOnMask
  41 0019 000000   		.align	2
  42              		.type	CapSense_sensorOnMask, %object
  43              		.size	CapSense_sensorOnMask, 1
  44              	CapSense_sensorOnMask:
  45 001c 00       		.space	1
  46              		.comm	CapSense_lowBaselineResetCnt,5,4
  47              		.global	CapSense_lowBaselineReset
  48              		.data
  49              		.align	2
  50              		.type	CapSense_lowBaselineReset, %object
  51              		.size	CapSense_lowBaselineReset, 5
  52              	CapSense_lowBaselineReset:
  53 0000 1E       		.byte	30
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 2


  54 0001 1E       		.byte	30
  55 0002 1E       		.byte	30
  56 0003 1E       		.byte	30
  57 0004 1E       		.byte	30
  58              		.global	CapSense_enableRawFilters
  59              		.type	CapSense_enableRawFilters, %object
  60              		.size	CapSense_enableRawFilters, 1
  61              	CapSense_enableRawFilters:
  62 0005 01       		.byte	1
  63              		.comm	CapSense_fingerThreshold,1,4
  64              		.comm	CapSense_noiseThreshold,1,4
  65              		.comm	CapSense_negativeNoiseThreshold,1,4
  66              		.comm	CapSense_hysteresis,1,4
  67              		.global	CapSense_debounce
  68 0006 0000     		.align	2
  69              		.type	CapSense_debounce, %object
  70              		.size	CapSense_debounce, 1
  71              	CapSense_debounce:
  72 0008 01       		.byte	1
  73              		.global	CapSense_rawDataIndex
  74              		.section	.rodata
  75              		.align	2
  76              		.type	CapSense_rawDataIndex, %object
  77              		.size	CapSense_rawDataIndex, 1
  78              	CapSense_rawDataIndex:
  79 0000 00       		.space	1
  80              		.global	CapSense_numberOfSensors
  81 0001 000000   		.align	2
  82              		.type	CapSense_numberOfSensors, %object
  83              		.size	CapSense_numberOfSensors, 1
  84              	CapSense_numberOfSensors:
  85 0004 05       		.byte	5
  86 0005 000000   		.align	2
  87              		.type	CapSense_centroidMult, %object
  88              		.size	CapSense_centroidMult, 2
  89              	CapSense_centroidMult:
  90 0008 0019     		.short	6400
  91              		.data
  92 0009 000000   		.align	2
  93              		.type	CapSense_posFiltersMask, %object
  94              		.size	CapSense_posFiltersMask, 1
  95              	CapSense_posFiltersMask:
  96 000c 02       		.byte	2
  97 000d 000000   		.align	2
  98              		.type	CapSense_posFiltersData, %object
  99              		.size	CapSense_posFiltersData, 4
 100              	CapSense_posFiltersData:
 101 0010 01       		.byte	1
 102 0011 00       		.byte	0
 103 0012 00       		.byte	0
 104 0013 00       		.byte	0
 105              		.section	.text.CapSense_BaseInit,"ax",%progbits
 106              		.align	2
 107              		.global	CapSense_BaseInit
 108              		.code	16
 109              		.thumb_func
 110              		.type	CapSense_BaseInit, %function
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 3


 111              	CapSense_BaseInit:
 112              	.LFB34:
 113              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 4


  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_60 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  91:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  94:Generated_Source\PSoC4/CapSense_CSHL.c ****     6400u, 
  95:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
  98:Generated_Source\PSoC4/CapSense_CSHL.c ****     0x2u, 
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 102:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 0u, 
 103:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 5


 112:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 114:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 136:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 138:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 139:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 140:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 141:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 142:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 143:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 114              		.loc 1 143 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 8
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118 0000 80B5     		push	{r7, lr}
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 7, -8
 121              		.cfi_offset 14, -4
 122 0002 82B0     		sub	sp, sp, #8
 123              		.cfi_def_cfa_offset 16
 124 0004 00AF     		add	r7, sp, #0
 125              		.cfi_def_cfa_register 7
 126 0006 7860     		str	r0, [r7, #4]
 144:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 146:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 147:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 149:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 150:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 151:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 153:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 154:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 155:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 6


 156:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 157:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 158:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 159:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 160:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 127              		.loc 1 160 0
 128 0008 124B     		ldr	r3, .L2
 129 000a 7A68     		ldr	r2, [r7, #4]
 130 000c 5200     		lsls	r2, r2, #1
 131 000e D15A     		ldrh	r1, [r2, r3]
 132 0010 114B     		ldr	r3, .L2+4
 133 0012 7A68     		ldr	r2, [r7, #4]
 134 0014 5200     		lsls	r2, r2, #1
 135 0016 D152     		strh	r1, [r2, r3]
 161:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 136              		.loc 1 161 0
 137 0018 104A     		ldr	r2, .L2+8
 138 001a 7B68     		ldr	r3, [r7, #4]
 139 001c D318     		adds	r3, r2, r3
 140 001e 0022     		movs	r2, #0
 141 0020 1A70     		strb	r2, [r3]
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 142              		.loc 1 162 0
 143 0022 0F4A     		ldr	r2, .L2+12
 144 0024 7B68     		ldr	r3, [r7, #4]
 145 0026 D318     		adds	r3, r2, r3
 146 0028 0022     		movs	r2, #0
 147 002a 1A70     		strb	r2, [r3]
 163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 166:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 168:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 169:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 148              		.loc 1 169 0
 149 002c 094B     		ldr	r3, .L2
 150 002e 7A68     		ldr	r2, [r7, #4]
 151 0030 5200     		lsls	r2, r2, #1
 152 0032 D15A     		ldrh	r1, [r2, r3]
 153 0034 0B4B     		ldr	r3, .L2+16
 154 0036 7A68     		ldr	r2, [r7, #4]
 155 0038 5200     		lsls	r2, r2, #1
 156 003a D152     		strh	r1, [r2, r3]
 170:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 157              		.loc 1 170 0
 158 003c 054B     		ldr	r3, .L2
 159 003e 7A68     		ldr	r2, [r7, #4]
 160 0040 5200     		lsls	r2, r2, #1
 161 0042 D15A     		ldrh	r1, [r2, r3]
 162 0044 084B     		ldr	r3, .L2+20
 163 0046 7A68     		ldr	r2, [r7, #4]
 164 0048 5200     		lsls	r2, r2, #1
 165 004a D152     		strh	r1, [r2, r3]
 171:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 172:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 7


 174:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 175:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 176:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 177:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 178:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 179:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 180:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 181:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 183:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 184:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 186:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 187:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 188:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 189:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 190:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 166              		.loc 1 190 0
 167 004c C046     		nop
 168 004e BD46     		mov	sp, r7
 169 0050 02B0     		add	sp, sp, #8
 170              		@ sp needed
 171 0052 80BD     		pop	{r7, pc}
 172              	.L3:
 173              		.align	2
 174              	.L2:
 175 0054 00000000 		.word	CapSense_sensorRaw
 176 0058 00000000 		.word	CapSense_sensorBaseline
 177 005c 00000000 		.word	CapSense_sensorBaselineLow
 178 0060 00000000 		.word	CapSense_sensorSignal
 179 0064 00000000 		.word	CapSense_rawFilterData1
 180 0068 00000000 		.word	CapSense_rawFilterData2
 181              		.cfi_endproc
 182              	.LFE34:
 183              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 184              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 185              		.align	2
 186              		.global	CapSense_InitializeSensorBaseline
 187              		.code	16
 188              		.thumb_func
 189              		.type	CapSense_InitializeSensorBaseline, %function
 190              	CapSense_InitializeSensorBaseline:
 191              	.LFB35:
 191:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 192:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 194:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 195:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 196:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 198:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 200:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 201:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 202:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 203:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 204:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 8


 205:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 212:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 213:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 214:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 215:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 216:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 217:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 218:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 192              		.loc 1 218 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 8
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196 0000 80B5     		push	{r7, lr}
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 82B0     		sub	sp, sp, #8
 201              		.cfi_def_cfa_offset 16
 202 0004 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
 204 0006 7860     		str	r0, [r7, #4]
 219:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 220:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 205              		.loc 1 220 0
 206 0008 7B68     		ldr	r3, [r7, #4]
 207 000a 1800     		movs	r0, r3
 208 000c FFF7FEFF 		bl	CapSense_ScanSensor
 221:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 209              		.loc 1 221 0
 210 0010 C046     		nop
 211              	.L5:
 212              		.loc 1 221 0 is_stmt 0 discriminator 1
 213 0012 FFF7FEFF 		bl	CapSense_IsBusy
 214 0016 031E     		subs	r3, r0, #0
 215 0018 FBD1     		bne	.L5
 222:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 223:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 224:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 226:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 227:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 216              		.loc 1 227 0 is_stmt 1
 217 001a 7B68     		ldr	r3, [r7, #4]
 218 001c 1800     		movs	r0, r3
 219 001e FFF7FEFF 		bl	CapSense_BaseInit
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 220              		.loc 1 228 0
 221 0022 C046     		nop
 222 0024 BD46     		mov	sp, r7
 223 0026 02B0     		add	sp, sp, #8
 224              		@ sp needed
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 9


 225 0028 80BD     		pop	{r7, pc}
 226              		.cfi_endproc
 227              	.LFE35:
 228              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 229 002a C046     		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 230              		.align	2
 231              		.global	CapSense_InitializeAllBaselines
 232              		.code	16
 233              		.thumb_func
 234              		.type	CapSense_InitializeAllBaselines, %function
 235              	CapSense_InitializeAllBaselines:
 236              	.LFB36:
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 231:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 242:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 243:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 249:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 251:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 252:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 253:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 254:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 255:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 237              		.loc 1 255 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241 0000 80B5     		push	{r7, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 14, -4
 245 0002 82B0     		sub	sp, sp, #8
 246              		.cfi_def_cfa_offset 16
 247 0004 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
 256:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 258:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 249              		.loc 1 258 0
 250 0006 0023     		movs	r3, #0
 251 0008 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 10


 252 000a 06E0     		b	.L7
 253              	.L8:
 259:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 260:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 254              		.loc 1 260 0 discriminator 3
 255 000c 7B68     		ldr	r3, [r7, #4]
 256 000e 1800     		movs	r0, r3
 257 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 258:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 258              		.loc 1 258 0 discriminator 3
 259 0014 7B68     		ldr	r3, [r7, #4]
 260 0016 0133     		adds	r3, r3, #1
 261 0018 7B60     		str	r3, [r7, #4]
 262              	.L7:
 258:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 263              		.loc 1 258 0 is_stmt 0 discriminator 1
 264 001a 7B68     		ldr	r3, [r7, #4]
 265 001c 042B     		cmp	r3, #4
 266 001e F5D9     		bls	.L8
 261:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 267              		.loc 1 262 0 is_stmt 1
 268 0020 C046     		nop
 269 0022 BD46     		mov	sp, r7
 270 0024 02B0     		add	sp, sp, #8
 271              		@ sp needed
 272 0026 80BD     		pop	{r7, pc}
 273              		.cfi_endproc
 274              	.LFE36:
 275              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 276              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 277              		.align	2
 278              		.global	CapSense_InitializeEnabledBaselines
 279              		.code	16
 280              		.thumb_func
 281              		.type	CapSense_InitializeEnabledBaselines, %function
 282              	CapSense_InitializeEnabledBaselines:
 283              	.LFB37:
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 11


 282:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 286:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 287:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 288:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 289:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 290:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 284              		.loc 1 290 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 8
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288 0000 80B5     		push	{r7, lr}
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 7, -8
 291              		.cfi_offset 14, -4
 292 0002 82B0     		sub	sp, sp, #8
 293              		.cfi_def_cfa_offset 16
 294 0004 00AF     		add	r7, sp, #0
 295              		.cfi_def_cfa_register 7
 291:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 292:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 293:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 294:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 296              		.loc 1 294 0
 297 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 298              		.loc 1 295 0
 299 000a C046     		nop
 300              	.L10:
 301              		.loc 1 295 0 is_stmt 0 discriminator 1
 302 000c FFF7FEFF 		bl	CapSense_IsBusy
 303 0010 031E     		subs	r3, r0, #0
 304 0012 FBD1     		bne	.L10
 296:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 298:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 299:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 305              		.loc 1 300 0 is_stmt 1
 306 0014 0023     		movs	r3, #0
 307 0016 7B60     		str	r3, [r7, #4]
 308 0018 11E0     		b	.L11
 309              	.L13:
 301:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 302:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 310              		.loc 1 302 0
 311 001a 7A68     		ldr	r2, [r7, #4]
 312 001c 0B4B     		ldr	r3, .L14
 313 001e 1100     		movs	r1, r2
 314 0020 1800     		movs	r0, r3
 315 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 316 0026 0300     		movs	r3, r0
 317 0028 3B60     		str	r3, [r7]
 303:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 304:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 12


 305:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 318              		.loc 1 305 0
 319 002a 3B68     		ldr	r3, [r7]
 320 002c 002B     		cmp	r3, #0
 321 002e 03D0     		beq	.L12
 306:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 307:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 308:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 322              		.loc 1 308 0
 323 0030 7B68     		ldr	r3, [r7, #4]
 324 0032 1800     		movs	r0, r3
 325 0034 FFF7FEFF 		bl	CapSense_BaseInit
 326              	.L12:
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 327              		.loc 1 300 0 discriminator 2
 328 0038 7B68     		ldr	r3, [r7, #4]
 329 003a 0133     		adds	r3, r3, #1
 330 003c 7B60     		str	r3, [r7, #4]
 331              	.L11:
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 332              		.loc 1 300 0 is_stmt 0 discriminator 1
 333 003e 7B68     		ldr	r3, [r7, #4]
 334 0040 042B     		cmp	r3, #4
 335 0042 EAD9     		bls	.L13
 309:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 310:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 311:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 336              		.loc 1 311 0 is_stmt 1
 337 0044 C046     		nop
 338 0046 BD46     		mov	sp, r7
 339 0048 02B0     		add	sp, sp, #8
 340              		@ sp needed
 341 004a 80BD     		pop	{r7, pc}
 342              	.L15:
 343              		.align	2
 344              	.L14:
 345 004c 00000000 		.word	CapSense_sensorEnableMask
 346              		.cfi_endproc
 347              	.LFE37:
 348              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 349              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 350              		.align	2
 351              		.global	CapSense_UpdateBaselineNoThreshold
 352              		.code	16
 353              		.thumb_func
 354              		.type	CapSense_UpdateBaselineNoThreshold, %function
 355              	CapSense_UpdateBaselineNoThreshold:
 356              	.LFB38:
 312:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 313:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 316:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 317:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 318:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 13


 321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 324:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 326:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 328:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 350:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 351:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 352:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 353:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 354:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 355:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 357              		.loc 1 355 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 24
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361 0000 90B5     		push	{r4, r7, lr}
 362              		.cfi_def_cfa_offset 12
 363              		.cfi_offset 4, -12
 364              		.cfi_offset 7, -8
 365              		.cfi_offset 14, -4
 366 0002 87B0     		sub	sp, sp, #28
 367              		.cfi_def_cfa_offset 40
 368 0004 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 370 0006 7860     		str	r0, [r7, #4]
 356:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 357:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 358:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 359:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 360:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 371              		.loc 1 360 0
 372 0008 0F23     		movs	r3, #15
 373 000a FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 14


 374 000c 8649     		ldr	r1, .L29
 375 000e 7A68     		ldr	r2, [r7, #4]
 376 0010 8A18     		adds	r2, r1, r2
 377 0012 1278     		ldrb	r2, [r2]
 378 0014 1A70     		strb	r2, [r3]
 361:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 362:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 363:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 364:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 365:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 366:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 367:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 368:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 369:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 379              		.loc 1 369 0
 380 0016 0F23     		movs	r3, #15
 381 0018 FB18     		adds	r3, r7, r3
 382 001a 1A78     		ldrb	r2, [r3]
 383 001c 0E23     		movs	r3, #14
 384 001e FB18     		adds	r3, r7, r3
 385 0020 8249     		ldr	r1, .L29+4
 386 0022 8A5C     		ldrb	r2, [r1, r2]
 387 0024 1A70     		strb	r2, [r3]
 370:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 388              		.loc 1 370 0
 389 0026 1023     		movs	r3, #16
 390 0028 FB18     		adds	r3, r7, r3
 391 002a 814A     		ldr	r2, .L29+8
 392 002c 7968     		ldr	r1, [r7, #4]
 393 002e 4900     		lsls	r1, r1, #1
 394 0030 8A5A     		ldrh	r2, [r1, r2]
 395 0032 1A80     		strh	r2, [r3]
 371:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 396              		.loc 1 373 0
 397 0034 7F4B     		ldr	r3, .L29+12
 398 0036 1B78     		ldrb	r3, [r3]
 399 0038 002B     		cmp	r3, #0
 400 003a 26D0     		beq	.L17
 374:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 375:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 376:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 378:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 381:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 401              		.loc 1 383 0
 402 003c 1223     		movs	r3, #18
 403 003e FB18     		adds	r3, r7, r3
 404 0040 1022     		movs	r2, #16
 405 0042 BA18     		adds	r2, r7, r2
 406 0044 1288     		ldrh	r2, [r2]
 407 0046 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 15


 384:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 408              		.loc 1 384 0
 409 0048 7B4B     		ldr	r3, .L29+16
 410 004a 7A68     		ldr	r2, [r7, #4]
 411 004c 5200     		lsls	r2, r2, #1
 412 004e D15A     		ldrh	r1, [r2, r3]
 413 0050 7A4B     		ldr	r3, .L29+20
 414 0052 7A68     		ldr	r2, [r7, #4]
 415 0054 5200     		lsls	r2, r2, #1
 416 0056 D25A     		ldrh	r2, [r2, r3]
 417 0058 1023     		movs	r3, #16
 418 005a FC18     		adds	r4, r7, r3
 419 005c 1023     		movs	r3, #16
 420 005e FB18     		adds	r3, r7, r3
 421 0060 1B88     		ldrh	r3, [r3]
 422 0062 1800     		movs	r0, r3
 423 0064 FFF7FEFF 		bl	CapSense_AveragingFilter
 424 0068 0300     		movs	r3, r0
 425 006a 2380     		strh	r3, [r4]
 385:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 426              		.loc 1 386 0
 427 006c 724B     		ldr	r3, .L29+16
 428 006e 7A68     		ldr	r2, [r7, #4]
 429 0070 5200     		lsls	r2, r2, #1
 430 0072 D15A     		ldrh	r1, [r2, r3]
 431 0074 714B     		ldr	r3, .L29+20
 432 0076 7A68     		ldr	r2, [r7, #4]
 433 0078 5200     		lsls	r2, r2, #1
 434 007a D152     		strh	r1, [r2, r3]
 387:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 435              		.loc 1 387 0
 436 007c 6E4B     		ldr	r3, .L29+16
 437 007e 7A68     		ldr	r2, [r7, #4]
 438 0080 5200     		lsls	r2, r2, #1
 439 0082 1221     		movs	r1, #18
 440 0084 7918     		adds	r1, r7, r1
 441 0086 0988     		ldrh	r1, [r1]
 442 0088 D152     		strh	r1, [r2, r3]
 443              	.L17:
 388:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 391:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 392:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 395:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 396:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 397:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 399:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 400:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 401:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 403:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 404:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 16


 405:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 407:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 408:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 411:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 412:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 413:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 414:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 444              		.loc 1 416 0
 445 008a 7B68     		ldr	r3, [r7, #4]
 446 008c D9B2     		uxtb	r1, r3
 447 008e 684A     		ldr	r2, .L29+8
 448 0090 6B4B     		ldr	r3, .L29+24
 449 0092 1800     		movs	r0, r3
 450 0094 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 418:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 451              		.loc 1 421 0
 452 0098 6A4B     		ldr	r3, .L29+28
 453 009a 7A68     		ldr	r2, [r7, #4]
 454 009c 5200     		lsls	r2, r2, #1
 455 009e D35A     		ldrh	r3, [r2, r3]
 456 00a0 1022     		movs	r2, #16
 457 00a2 BA18     		adds	r2, r7, r2
 458 00a4 1288     		ldrh	r2, [r2]
 459 00a6 9A42     		cmp	r2, r3
 460 00a8 12D3     		bcc	.L18
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 461              		.loc 1 423 0
 462 00aa 674A     		ldr	r2, .L29+32
 463 00ac 7B68     		ldr	r3, [r7, #4]
 464 00ae D318     		adds	r3, r2, r3
 465 00b0 0022     		movs	r2, #0
 466 00b2 1A70     		strb	r2, [r3]
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 467              		.loc 1 424 0
 468 00b4 634B     		ldr	r3, .L29+28
 469 00b6 7A68     		ldr	r2, [r7, #4]
 470 00b8 5200     		lsls	r2, r2, #1
 471 00ba D25A     		ldrh	r2, [r2, r3]
 472 00bc 1223     		movs	r3, #18
 473 00be FB18     		adds	r3, r7, r3
 474 00c0 1021     		movs	r1, #16
 475 00c2 7918     		adds	r1, r7, r1
 476 00c4 0988     		ldrh	r1, [r1]
 477 00c6 8A1A     		subs	r2, r1, r2
 478 00c8 1A80     		strh	r2, [r3]
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 479              		.loc 1 425 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 17


 480 00ca 0123     		movs	r3, #1
 481 00cc 7B61     		str	r3, [r7, #20]
 482 00ce 0CE0     		b	.L19
 483              	.L18:
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 484              		.loc 1 429 0
 485 00d0 5C4B     		ldr	r3, .L29+28
 486 00d2 7A68     		ldr	r2, [r7, #4]
 487 00d4 5200     		lsls	r2, r2, #1
 488 00d6 D15A     		ldrh	r1, [r2, r3]
 489 00d8 1223     		movs	r3, #18
 490 00da FB18     		adds	r3, r7, r3
 491 00dc 1022     		movs	r2, #16
 492 00de BA18     		adds	r2, r7, r2
 493 00e0 1288     		ldrh	r2, [r2]
 494 00e2 8A1A     		subs	r2, r1, r2
 495 00e4 1A80     		strh	r2, [r3]
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 496              		.loc 1 430 0
 497 00e6 0023     		movs	r3, #0
 498 00e8 7B61     		str	r3, [r7, #20]
 499              	.L19:
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 432:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 500              		.loc 1 434 0
 501 00ea 7B69     		ldr	r3, [r7, #20]
 502 00ec 002B     		cmp	r3, #0
 503 00ee 2AD1     		bne	.L20
 504              		.loc 1 434 0 is_stmt 0 discriminator 1
 505 00f0 0F23     		movs	r3, #15
 506 00f2 FB18     		adds	r3, r7, r3
 507 00f4 1B78     		ldrb	r3, [r3]
 508 00f6 554A     		ldr	r2, .L29+36
 509 00f8 D35C     		ldrb	r3, [r2, r3]
 510 00fa 9BB2     		uxth	r3, r3
 511 00fc 1222     		movs	r2, #18
 512 00fe BA18     		adds	r2, r7, r2
 513 0100 1288     		ldrh	r2, [r2]
 514 0102 9A42     		cmp	r2, r3
 515 0104 1FD9     		bls	.L20
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 516              		.loc 1 439 0 is_stmt 1
 517 0106 504A     		ldr	r2, .L29+32
 518 0108 7B68     		ldr	r3, [r7, #4]
 519 010a D318     		adds	r3, r2, r3
 520 010c 1A78     		ldrb	r2, [r3]
 521 010e 5049     		ldr	r1, .L29+40
 522 0110 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 18


 523 0112 CB18     		adds	r3, r1, r3
 524 0114 1B78     		ldrb	r3, [r3]
 525 0116 9A42     		cmp	r2, r3
 526 0118 09D3     		bcc	.L21
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 527              		.loc 1 441 0
 528 011a 7B68     		ldr	r3, [r7, #4]
 529 011c 1800     		movs	r0, r3
 530 011e FFF7FEFF 		bl	CapSense_BaseInit
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 531              		.loc 1 442 0
 532 0122 494A     		ldr	r2, .L29+32
 533 0124 7B68     		ldr	r3, [r7, #4]
 534 0126 D318     		adds	r3, r2, r3
 535 0128 0022     		movs	r2, #0
 536 012a 1A70     		strb	r2, [r3]
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 537              		.loc 1 439 0
 538 012c 51E0     		b	.L23
 539              	.L21:
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 540              		.loc 1 446 0
 541 012e 464A     		ldr	r2, .L29+32
 542 0130 7B68     		ldr	r3, [r7, #4]
 543 0132 D318     		adds	r3, r2, r3
 544 0134 1B78     		ldrb	r3, [r3]
 545 0136 0133     		adds	r3, r3, #1
 546 0138 D9B2     		uxtb	r1, r3
 547 013a 434A     		ldr	r2, .L29+32
 548 013c 7B68     		ldr	r3, [r7, #4]
 549 013e D318     		adds	r3, r2, r3
 550 0140 0A1C     		adds	r2, r1, #0
 551 0142 1A70     		strb	r2, [r3]
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 552              		.loc 1 439 0
 553 0144 45E0     		b	.L23
 554              	.L20:
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 555              		.loc 1 454 0
 556 0146 0E23     		movs	r3, #14
 557 0148 FB18     		adds	r3, r7, r3
 558 014a 1B78     		ldrb	r3, [r3]
 559 014c 9BB2     		uxth	r3, r3
 560 014e 1222     		movs	r2, #18
 561 0150 BA18     		adds	r2, r7, r2
 562 0152 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 19


 563 0154 9A42     		cmp	r2, r3
 564 0156 0DD9     		bls	.L24
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 565              		.loc 1 455 0 discriminator 1
 566 0158 0F23     		movs	r3, #15
 567 015a FB18     		adds	r3, r7, r3
 568 015c 1B78     		ldrb	r3, [r3]
 569 015e 3B4A     		ldr	r2, .L29+36
 570 0160 D35C     		ldrb	r3, [r2, r3]
 571 0162 9BB2     		uxth	r3, r3
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 572              		.loc 1 454 0 discriminator 1
 573 0164 1222     		movs	r2, #18
 574 0166 BA18     		adds	r2, r7, r2
 575 0168 1288     		ldrh	r2, [r2]
 576 016a 9A42     		cmp	r2, r3
 577 016c 31D2     		bcs	.L23
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 578              		.loc 1 456 0
 579 016e 7B69     		ldr	r3, [r7, #20]
 580 0170 002B     		cmp	r3, #0
 581 0172 2ED1     		bne	.L23
 582              	.L24:
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 583              		.loc 1 467 0
 584 0174 334B     		ldr	r3, .L29+28
 585 0176 7A68     		ldr	r2, [r7, #4]
 586 0178 5200     		lsls	r2, r2, #1
 587 017a D35A     		ldrh	r3, [r2, r3]
 588 017c 1B02     		lsls	r3, r3, #8
 589 017e BB60     		str	r3, [r7, #8]
 468:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 590              		.loc 1 468 0
 591 0180 344A     		ldr	r2, .L29+44
 592 0182 7B68     		ldr	r3, [r7, #4]
 593 0184 D318     		adds	r3, r2, r3
 594 0186 1B78     		ldrb	r3, [r3]
 595 0188 1A00     		movs	r2, r3
 596 018a BB68     		ldr	r3, [r7, #8]
 597 018c 1343     		orrs	r3, r2
 598 018e BB60     		str	r3, [r7, #8]
 469:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 599              		.loc 1 471 0
 600 0190 1023     		movs	r3, #16
 601 0192 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 20


 602 0194 1B88     		ldrh	r3, [r3]
 603 0196 BA68     		ldr	r2, [r7, #8]
 604 0198 D318     		adds	r3, r2, r3
 605 019a BB60     		str	r3, [r7, #8]
 472:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 606              		.loc 1 474 0
 607 019c 294B     		ldr	r3, .L29+28
 608 019e 7A68     		ldr	r2, [r7, #4]
 609 01a0 5200     		lsls	r2, r2, #1
 610 01a2 D35A     		ldrh	r3, [r2, r3]
 611 01a4 1A00     		movs	r2, r3
 612 01a6 BB68     		ldr	r3, [r7, #8]
 613 01a8 9B1A     		subs	r3, r3, r2
 614 01aa BB60     		str	r3, [r7, #8]
 475:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 615              		.loc 1 477 0
 616 01ac BB68     		ldr	r3, [r7, #8]
 617 01ae 1B0A     		lsrs	r3, r3, #8
 618 01b0 99B2     		uxth	r1, r3
 619 01b2 244B     		ldr	r3, .L29+28
 620 01b4 7A68     		ldr	r2, [r7, #4]
 621 01b6 5200     		lsls	r2, r2, #1
 622 01b8 D152     		strh	r1, [r2, r3]
 478:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 623              		.loc 1 478 0
 624 01ba BB68     		ldr	r3, [r7, #8]
 625 01bc D9B2     		uxtb	r1, r3
 626 01be 254A     		ldr	r2, .L29+44
 627 01c0 7B68     		ldr	r3, [r7, #4]
 628 01c2 D318     		adds	r3, r2, r3
 629 01c4 0A1C     		adds	r2, r1, #0
 630 01c6 1A70     		strb	r2, [r3]
 479:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 631              		.loc 1 480 0
 632 01c8 1F4A     		ldr	r2, .L29+32
 633 01ca 7B68     		ldr	r3, [r7, #4]
 634 01cc D318     		adds	r3, r2, r3
 635 01ce 0022     		movs	r2, #0
 636 01d0 1A70     		strb	r2, [r3]
 637              	.L23:
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 485:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 638              		.loc 1 487 0
 639 01d2 0E23     		movs	r3, #14
 640 01d4 FB18     		adds	r3, r7, r3
 641 01d6 1B78     		ldrb	r3, [r3]
 642 01d8 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 21


 643 01da 1222     		movs	r2, #18
 644 01dc BA18     		adds	r2, r7, r2
 645 01de 1288     		ldrh	r2, [r2]
 646 01e0 9A42     		cmp	r2, r3
 647 01e2 17D9     		bls	.L25
 648              		.loc 1 487 0 is_stmt 0 discriminator 1
 649 01e4 7B69     		ldr	r3, [r7, #20]
 650 01e6 002B     		cmp	r3, #0
 651 01e8 14D0     		beq	.L25
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 489:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 652              		.loc 1 491 0 is_stmt 1
 653 01ea 1223     		movs	r3, #18
 654 01ec FB18     		adds	r3, r7, r3
 655 01ee 1B88     		ldrh	r3, [r3]
 656 01f0 FF2B     		cmp	r3, #255
 657 01f2 05D9     		bls	.L26
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 658              		.loc 1 493 0
 659 01f4 184A     		ldr	r2, .L29+48
 660 01f6 7B68     		ldr	r3, [r7, #4]
 661 01f8 D318     		adds	r3, r2, r3
 662 01fa FF22     		movs	r2, #255
 663 01fc 1A70     		strb	r2, [r3]
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 664              		.loc 1 491 0
 665 01fe 0EE0     		b	.L28
 666              	.L26:
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 667              		.loc 1 497 0
 668 0200 1223     		movs	r3, #18
 669 0202 FB18     		adds	r3, r7, r3
 670 0204 1B88     		ldrh	r3, [r3]
 671 0206 D9B2     		uxtb	r1, r3
 672 0208 134A     		ldr	r2, .L29+48
 673 020a 7B68     		ldr	r3, [r7, #4]
 674 020c D318     		adds	r3, r2, r3
 675 020e 0A1C     		adds	r2, r1, #0
 676 0210 1A70     		strb	r2, [r3]
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 677              		.loc 1 491 0
 678 0212 04E0     		b	.L28
 679              	.L25:
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 22


 506:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 680              		.loc 1 506 0
 681 0214 104A     		ldr	r2, .L29+48
 682 0216 7B68     		ldr	r3, [r7, #4]
 683 0218 D318     		adds	r3, r2, r3
 684 021a 0022     		movs	r2, #0
 685 021c 1A70     		strb	r2, [r3]
 686              	.L28:
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 508:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 509:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 510:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 511:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 512:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 513:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 687              		.loc 1 513 0
 688 021e C046     		nop
 689 0220 BD46     		mov	sp, r7
 690 0222 07B0     		add	sp, sp, #28
 691              		@ sp needed
 692 0224 90BD     		pop	{r4, r7, pc}
 693              	.L30:
 694 0226 C046     		.align	2
 695              	.L29:
 696 0228 00000000 		.word	CapSense_widgetNumber
 697 022c 00000000 		.word	CapSense_noiseThreshold
 698 0230 00000000 		.word	CapSense_sensorRaw
 699 0234 00000000 		.word	CapSense_enableRawFilters
 700 0238 00000000 		.word	CapSense_rawFilterData1
 701 023c 00000000 		.word	CapSense_rawFilterData2
 702 0240 00000000 		.word	CapSense_config
 703 0244 00000000 		.word	CapSense_sensorBaseline
 704 0248 00000000 		.word	CapSense_lowBaselineResetCnt
 705 024c 00000000 		.word	CapSense_negativeNoiseThreshold
 706 0250 00000000 		.word	CapSense_lowBaselineReset
 707 0254 00000000 		.word	CapSense_sensorBaselineLow
 708 0258 00000000 		.word	CapSense_sensorSignal
 709              		.cfi_endproc
 710              	.LFE38:
 711              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 712              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 713              		.align	2
 714              		.global	CapSense_UpdateSensorBaseline
 715              		.code	16
 716              		.thumb_func
 717              		.type	CapSense_UpdateSensorBaseline, %function
 718              	CapSense_UpdateSensorBaseline:
 719              	.LFB39:
 514:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 515:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 516:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 517:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 518:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 519:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 520:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 521:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 522:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 23


 523:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 525:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 526:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 527:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 541:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 543:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 544:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 545:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 546:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 547:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 720              		.loc 1 547 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 8
 723              		@ frame_needed = 1, uses_anonymous_args = 0
 724 0000 80B5     		push	{r7, lr}
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 7, -8
 727              		.cfi_offset 14, -4
 728 0002 82B0     		sub	sp, sp, #8
 729              		.cfi_def_cfa_offset 16
 730 0004 00AF     		add	r7, sp, #0
 731              		.cfi_def_cfa_register 7
 732 0006 7860     		str	r0, [r7, #4]
 548:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 549:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 551:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 553:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 554:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 555:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 556:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 557:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 558:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 559:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 733              		.loc 1 559 0
 734 0008 7B68     		ldr	r3, [r7, #4]
 735 000a 1800     		movs	r0, r3
 736 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 560:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 562:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 24


 737              		.loc 1 562 0
 738 0010 7B68     		ldr	r3, [r7, #4]
 739 0012 1800     		movs	r0, r3
 740 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 563:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 564:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 565:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 566:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 567:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 741              		.loc 1 568 0
 742 0018 C046     		nop
 743 001a BD46     		mov	sp, r7
 744 001c 02B0     		add	sp, sp, #8
 745              		@ sp needed
 746 001e 80BD     		pop	{r7, pc}
 747              		.cfi_endproc
 748              	.LFE39:
 749              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 750              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 751              		.align	2
 752              		.global	CapSense_UpdateEnabledBaselines
 753              		.code	16
 754              		.thumb_func
 755              		.type	CapSense_UpdateEnabledBaselines, %function
 756              	CapSense_UpdateEnabledBaselines:
 757              	.LFB40:
 569:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 570:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 571:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 573:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 574:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 576:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 578:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 580:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 587:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 595:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 597:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 598:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 25


 599:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 601:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 758              		.loc 1 601 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 8
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762 0000 80B5     		push	{r7, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 7, -8
 765              		.cfi_offset 14, -4
 766 0002 82B0     		sub	sp, sp, #8
 767              		.cfi_def_cfa_offset 16
 768 0004 00AF     		add	r7, sp, #0
 769              		.cfi_def_cfa_register 7
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 603:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 604:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 770              		.loc 1 605 0
 771 0006 0023     		movs	r3, #0
 772 0008 7B60     		str	r3, [r7, #4]
 773 000a 11E0     		b	.L33
 774              	.L35:
 606:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 607:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 775              		.loc 1 607 0
 776 000c 7A68     		ldr	r2, [r7, #4]
 777 000e 0C4B     		ldr	r3, .L36
 778 0010 1100     		movs	r1, r2
 779 0012 1800     		movs	r0, r3
 780 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 781 0018 0300     		movs	r3, r0
 782 001a 3B60     		str	r3, [r7]
 608:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 609:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 783              		.loc 1 609 0
 784 001c 3B68     		ldr	r3, [r7]
 785 001e 002B     		cmp	r3, #0
 786 0020 03D0     		beq	.L34
 610:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 611:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 787              		.loc 1 611 0
 788 0022 7B68     		ldr	r3, [r7, #4]
 789 0024 1800     		movs	r0, r3
 790 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 791              	.L34:
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 792              		.loc 1 605 0 discriminator 2
 793 002a 7B68     		ldr	r3, [r7, #4]
 794 002c 0133     		adds	r3, r3, #1
 795 002e 7B60     		str	r3, [r7, #4]
 796              	.L33:
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 797              		.loc 1 605 0 is_stmt 0 discriminator 1
 798 0030 7B68     		ldr	r3, [r7, #4]
 799 0032 042B     		cmp	r3, #4
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 26


 800 0034 EAD9     		bls	.L35
 612:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 613:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 801              		.loc 1 614 0 is_stmt 1
 802 0036 C046     		nop
 803 0038 BD46     		mov	sp, r7
 804 003a 02B0     		add	sp, sp, #8
 805              		@ sp needed
 806 003c 80BD     		pop	{r7, pc}
 807              	.L37:
 808 003e C046     		.align	2
 809              	.L36:
 810 0040 00000000 		.word	CapSense_sensorEnableMask
 811              		.cfi_endproc
 812              	.LFE40:
 813              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 814              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 815              		.align	2
 816              		.global	CapSense_UpdateWidgetBaseline
 817              		.code	16
 818              		.thumb_func
 819              		.type	CapSense_UpdateWidgetBaseline, %function
 820              	CapSense_UpdateWidgetBaseline:
 821              	.LFB41:
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 616:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 617:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 622:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 625:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 628:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 629:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 640:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 641:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 642:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 643:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 644:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 645:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 646:Generated_Source\PSoC4/CapSense_CSHL.c **** {
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 27


 822              		.loc 1 646 0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 32
 825              		@ frame_needed = 1, uses_anonymous_args = 0
 826 0000 80B5     		push	{r7, lr}
 827              		.cfi_def_cfa_offset 8
 828              		.cfi_offset 7, -8
 829              		.cfi_offset 14, -4
 830 0002 88B0     		sub	sp, sp, #32
 831              		.cfi_def_cfa_offset 40
 832 0004 00AF     		add	r7, sp, #0
 833              		.cfi_def_cfa_register 7
 834 0006 7860     		str	r0, [r7, #4]
 647:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 648:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 649:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 650:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 651:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 652:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 653:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 654:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 835              		.loc 1 654 0
 836 0008 0523     		movs	r3, #5
 837 000a BB61     		str	r3, [r7, #24]
 655:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 656:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 838              		.loc 1 657 0
 839 000c 0023     		movs	r3, #0
 840 000e 7B61     		str	r3, [r7, #20]
 658:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 660:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 841              		.loc 1 660 0
 842 0010 0023     		movs	r3, #0
 843 0012 1A00     		movs	r2, r3
 844 0014 BB69     		ldr	r3, [r7, #24]
 845 0016 D318     		adds	r3, r2, r3
 846 0018 3B61     		str	r3, [r7, #16]
 661:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 847              		.loc 1 662 0
 848 001a 7B69     		ldr	r3, [r7, #20]
 849 001c FB61     		str	r3, [r7, #28]
 850 001e 11E0     		b	.L39
 851              	.L41:
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 664:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 852              		.loc 1 664 0
 853 0020 FA69     		ldr	r2, [r7, #28]
 854 0022 0C4B     		ldr	r3, .L42
 855 0024 1100     		movs	r1, r2
 856 0026 1800     		movs	r0, r3
 857 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 858 002c 0300     		movs	r3, r0
 859 002e FB60     		str	r3, [r7, #12]
 665:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 28


 666:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 860              		.loc 1 666 0
 861 0030 FB68     		ldr	r3, [r7, #12]
 862 0032 002B     		cmp	r3, #0
 863 0034 03D0     		beq	.L40
 667:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 668:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 864              		.loc 1 668 0
 865 0036 FB69     		ldr	r3, [r7, #28]
 866 0038 1800     		movs	r0, r3
 867 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 868              	.L40:
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 869              		.loc 1 662 0 discriminator 2
 870 003e FB69     		ldr	r3, [r7, #28]
 871 0040 0133     		adds	r3, r3, #1
 872 0042 FB61     		str	r3, [r7, #28]
 873              	.L39:
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 874              		.loc 1 662 0 is_stmt 0 discriminator 1
 875 0044 FA69     		ldr	r2, [r7, #28]
 876 0046 3B69     		ldr	r3, [r7, #16]
 877 0048 9A42     		cmp	r2, r3
 878 004a E9D3     		bcc	.L41
 669:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 670:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 671:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 879              		.loc 1 671 0 is_stmt 1
 880 004c C046     		nop
 881 004e BD46     		mov	sp, r7
 882 0050 08B0     		add	sp, sp, #32
 883              		@ sp needed
 884 0052 80BD     		pop	{r7, pc}
 885              	.L43:
 886              		.align	2
 887              	.L42:
 888 0054 00000000 		.word	CapSense_sensorEnableMask
 889              		.cfi_endproc
 890              	.LFE41:
 891              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 892              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 893              		.align	2
 894              		.global	CapSense_GetBaselineData
 895              		.code	16
 896              		.thumb_func
 897              		.type	CapSense_GetBaselineData, %function
 898              	CapSense_GetBaselineData:
 899              	.LFB42:
 672:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 675:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 676:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 679:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 29


 681:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 682:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 685:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 686:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 688:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 689:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 691:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 900              		.loc 1 695 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 8
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904 0000 80B5     		push	{r7, lr}
 905              		.cfi_def_cfa_offset 8
 906              		.cfi_offset 7, -8
 907              		.cfi_offset 14, -4
 908 0002 82B0     		sub	sp, sp, #8
 909              		.cfi_def_cfa_offset 16
 910 0004 00AF     		add	r7, sp, #0
 911              		.cfi_def_cfa_register 7
 912 0006 7860     		str	r0, [r7, #4]
 696:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 913              		.loc 1 696 0
 914 0008 034B     		ldr	r3, .L46
 915 000a 7A68     		ldr	r2, [r7, #4]
 916 000c 5200     		lsls	r2, r2, #1
 917 000e D35A     		ldrh	r3, [r2, r3]
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 918              		.loc 1 697 0
 919 0010 1800     		movs	r0, r3
 920 0012 BD46     		mov	sp, r7
 921 0014 02B0     		add	sp, sp, #8
 922              		@ sp needed
 923 0016 80BD     		pop	{r7, pc}
 924              	.L47:
 925              		.align	2
 926              	.L46:
 927 0018 00000000 		.word	CapSense_sensorBaseline
 928              		.cfi_endproc
 929              	.LFE42:
 930              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 931              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 932              		.align	2
 933              		.global	CapSense_SetBaselineData
 934              		.code	16
 935              		.thumb_func
 936              		.type	CapSense_SetBaselineData, %function
 937              	CapSense_SetBaselineData:
 938              	.LFB43:
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 30


 699:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 713:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 716:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 718:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 939              		.loc 1 722 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 8
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943 0000 80B5     		push	{r7, lr}
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
 947 0002 82B0     		sub	sp, sp, #8
 948              		.cfi_def_cfa_offset 16
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 951 0006 7860     		str	r0, [r7, #4]
 952 0008 0A00     		movs	r2, r1
 953 000a BB1C     		adds	r3, r7, #2
 954 000c 1A80     		strh	r2, [r3]
 723:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 955              		.loc 1 723 0
 956 000e 054B     		ldr	r3, .L49
 957 0010 7A68     		ldr	r2, [r7, #4]
 958 0012 5200     		lsls	r2, r2, #1
 959 0014 B91C     		adds	r1, r7, #2
 960 0016 0988     		ldrh	r1, [r1]
 961 0018 D152     		strh	r1, [r2, r3]
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 962              		.loc 1 724 0
 963 001a C046     		nop
 964 001c BD46     		mov	sp, r7
 965 001e 02B0     		add	sp, sp, #8
 966              		@ sp needed
 967 0020 80BD     		pop	{r7, pc}
 968              	.L50:
 969 0022 C046     		.align	2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 31


 970              	.L49:
 971 0024 00000000 		.word	CapSense_sensorBaseline
 972              		.cfi_endproc
 973              	.LFE43:
 974              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 975              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 976              		.align	2
 977              		.global	CapSense_GetDiffCountData
 978              		.code	16
 979              		.thumb_func
 980              		.type	CapSense_GetDiffCountData, %function
 981              	CapSense_GetDiffCountData:
 982              	.LFB44:
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 741:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 743:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 745:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 983              		.loc 1 749 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 8
 986              		@ frame_needed = 1, uses_anonymous_args = 0
 987 0000 80B5     		push	{r7, lr}
 988              		.cfi_def_cfa_offset 8
 989              		.cfi_offset 7, -8
 990              		.cfi_offset 14, -4
 991 0002 82B0     		sub	sp, sp, #8
 992              		.cfi_def_cfa_offset 16
 993 0004 00AF     		add	r7, sp, #0
 994              		.cfi_def_cfa_register 7
 995 0006 7860     		str	r0, [r7, #4]
 750:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 996              		.loc 1 750 0
 997 0008 034A     		ldr	r2, .L53
 998 000a 7B68     		ldr	r3, [r7, #4]
 999 000c D318     		adds	r3, r2, r3
 1000 000e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 32


 751:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1001              		.loc 1 751 0
 1002 0010 1800     		movs	r0, r3
 1003 0012 BD46     		mov	sp, r7
 1004 0014 02B0     		add	sp, sp, #8
 1005              		@ sp needed
 1006 0016 80BD     		pop	{r7, pc}
 1007              	.L54:
 1008              		.align	2
 1009              	.L53:
 1010 0018 00000000 		.word	CapSense_sensorSignal
 1011              		.cfi_endproc
 1012              	.LFE44:
 1013              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 1014              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 1015              		.align	2
 1016              		.global	CapSense_SetDiffCountData
 1017              		.code	16
 1018              		.thumb_func
 1019              		.type	CapSense_SetDiffCountData, %function
 1020              	CapSense_SetDiffCountData:
 1021              	.LFB45:
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 769:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 770:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 772:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1022              		.loc 1 776 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 8
 1025              		@ frame_needed = 1, uses_anonymous_args = 0
 1026 0000 80B5     		push	{r7, lr}
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 7, -8
 1029              		.cfi_offset 14, -4
 1030 0002 82B0     		sub	sp, sp, #8
 1031              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 33


 1032 0004 00AF     		add	r7, sp, #0
 1033              		.cfi_def_cfa_register 7
 1034 0006 7860     		str	r0, [r7, #4]
 1035 0008 0A00     		movs	r2, r1
 1036 000a FB1C     		adds	r3, r7, #3
 1037 000c 1A70     		strb	r2, [r3]
 777:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 1038              		.loc 1 777 0
 1039 000e 054A     		ldr	r2, .L56
 1040 0010 7B68     		ldr	r3, [r7, #4]
 1041 0012 D318     		adds	r3, r2, r3
 1042 0014 FA1C     		adds	r2, r7, #3
 1043 0016 1278     		ldrb	r2, [r2]
 1044 0018 1A70     		strb	r2, [r3]
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1045              		.loc 1 778 0
 1046 001a C046     		nop
 1047 001c BD46     		mov	sp, r7
 1048 001e 02B0     		add	sp, sp, #8
 1049              		@ sp needed
 1050 0020 80BD     		pop	{r7, pc}
 1051              	.L57:
 1052 0022 C046     		.align	2
 1053              	.L56:
 1054 0024 00000000 		.word	CapSense_sensorSignal
 1055              		.cfi_endproc
 1056              	.LFE45:
 1057              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 1058              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 1059              		.align	2
 1060              		.global	CapSense_GetFingerThreshold
 1061              		.code	16
 1062              		.thumb_func
 1063              		.type	CapSense_GetFingerThreshold, %function
 1064              	CapSense_GetFingerThreshold:
 1065              	.LFB46:
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 797:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 799:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 34


 800:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1066              		.loc 1 803 0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 8
 1069              		@ frame_needed = 1, uses_anonymous_args = 0
 1070 0000 80B5     		push	{r7, lr}
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 7, -8
 1073              		.cfi_offset 14, -4
 1074 0002 82B0     		sub	sp, sp, #8
 1075              		.cfi_def_cfa_offset 16
 1076 0004 00AF     		add	r7, sp, #0
 1077              		.cfi_def_cfa_register 7
 1078 0006 7860     		str	r0, [r7, #4]
 804:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 1079              		.loc 1 804 0
 1080 0008 034A     		ldr	r2, .L60
 1081 000a 7B68     		ldr	r3, [r7, #4]
 1082 000c D318     		adds	r3, r2, r3
 1083 000e 1B78     		ldrb	r3, [r3]
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1084              		.loc 1 805 0
 1085 0010 1800     		movs	r0, r3
 1086 0012 BD46     		mov	sp, r7
 1087 0014 02B0     		add	sp, sp, #8
 1088              		@ sp needed
 1089 0016 80BD     		pop	{r7, pc}
 1090              	.L61:
 1091              		.align	2
 1092              	.L60:
 1093 0018 00000000 		.word	CapSense_fingerThreshold
 1094              		.cfi_endproc
 1095              	.LFE46:
 1096              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1097              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1098              		.align	2
 1099              		.global	CapSense_GetNoiseThreshold
 1100              		.code	16
 1101              		.thumb_func
 1102              		.type	CapSense_GetNoiseThreshold, %function
 1103              	CapSense_GetNoiseThreshold:
 1104              	.LFB47:
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 35


 818:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 824:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 826:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1105              		.loc 1 830 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 8
 1108              		@ frame_needed = 1, uses_anonymous_args = 0
 1109 0000 80B5     		push	{r7, lr}
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 7, -8
 1112              		.cfi_offset 14, -4
 1113 0002 82B0     		sub	sp, sp, #8
 1114              		.cfi_def_cfa_offset 16
 1115 0004 00AF     		add	r7, sp, #0
 1116              		.cfi_def_cfa_register 7
 1117 0006 7860     		str	r0, [r7, #4]
 831:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 1118              		.loc 1 831 0
 1119 0008 034A     		ldr	r2, .L64
 1120 000a 7B68     		ldr	r3, [r7, #4]
 1121 000c D318     		adds	r3, r2, r3
 1122 000e 1B78     		ldrb	r3, [r3]
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1123              		.loc 1 832 0
 1124 0010 1800     		movs	r0, r3
 1125 0012 BD46     		mov	sp, r7
 1126 0014 02B0     		add	sp, sp, #8
 1127              		@ sp needed
 1128 0016 80BD     		pop	{r7, pc}
 1129              	.L65:
 1130              		.align	2
 1131              	.L64:
 1132 0018 00000000 		.word	CapSense_noiseThreshold
 1133              		.cfi_endproc
 1134              	.LFE47:
 1135              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1136              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1137              		.align	2
 1138              		.global	CapSense_GetFingerHysteresis
 1139              		.code	16
 1140              		.thumb_func
 1141              		.type	CapSense_GetFingerHysteresis, %function
 1142              	CapSense_GetFingerHysteresis:
 1143              	.LFB48:
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 36


 836:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1144              		.loc 1 858 0
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 8
 1147              		@ frame_needed = 1, uses_anonymous_args = 0
 1148 0000 80B5     		push	{r7, lr}
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 7, -8
 1151              		.cfi_offset 14, -4
 1152 0002 82B0     		sub	sp, sp, #8
 1153              		.cfi_def_cfa_offset 16
 1154 0004 00AF     		add	r7, sp, #0
 1155              		.cfi_def_cfa_register 7
 1156 0006 7860     		str	r0, [r7, #4]
 859:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 1157              		.loc 1 859 0
 1158 0008 034A     		ldr	r2, .L68
 1159 000a 7B68     		ldr	r3, [r7, #4]
 1160 000c D318     		adds	r3, r2, r3
 1161 000e 1B78     		ldrb	r3, [r3]
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1162              		.loc 1 860 0
 1163 0010 1800     		movs	r0, r3
 1164 0012 BD46     		mov	sp, r7
 1165 0014 02B0     		add	sp, sp, #8
 1166              		@ sp needed
 1167 0016 80BD     		pop	{r7, pc}
 1168              	.L69:
 1169              		.align	2
 1170              	.L68:
 1171 0018 00000000 		.word	CapSense_hysteresis
 1172              		.cfi_endproc
 1173              	.LFE48:
 1174              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1175              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 37


 1176              		.align	2
 1177              		.global	CapSense_GetNegativeNoiseThreshold
 1178              		.code	16
 1179              		.thumb_func
 1180              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1181              	CapSense_GetNegativeNoiseThreshold:
 1182              	.LFB49:
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 881:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 883:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 885:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1183              		.loc 1 886 0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 8
 1186              		@ frame_needed = 1, uses_anonymous_args = 0
 1187 0000 80B5     		push	{r7, lr}
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 7, -8
 1190              		.cfi_offset 14, -4
 1191 0002 82B0     		sub	sp, sp, #8
 1192              		.cfi_def_cfa_offset 16
 1193 0004 00AF     		add	r7, sp, #0
 1194              		.cfi_def_cfa_register 7
 1195 0006 7860     		str	r0, [r7, #4]
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 888:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 1196              		.loc 1 888 0
 1197 0008 034A     		ldr	r2, .L72
 1198 000a 7B68     		ldr	r3, [r7, #4]
 1199 000c D318     		adds	r3, r2, r3
 1200 000e 1B78     		ldrb	r3, [r3]
 889:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 890:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 891:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 892:Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 38


 1201              		.loc 1 892 0
 1202 0010 1800     		movs	r0, r3
 1203 0012 BD46     		mov	sp, r7
 1204 0014 02B0     		add	sp, sp, #8
 1205              		@ sp needed
 1206 0016 80BD     		pop	{r7, pc}
 1207              	.L73:
 1208              		.align	2
 1209              	.L72:
 1210 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1211              		.cfi_endproc
 1212              	.LFE49:
 1213              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1214              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1215              		.align	2
 1216              		.global	CapSense_SetFingerThreshold
 1217              		.code	16
 1218              		.thumb_func
 1219              		.type	CapSense_SetFingerThreshold, %function
 1220              	CapSense_SetFingerThreshold:
 1221              	.LFB50:
 893:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 894:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 895:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 896:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 897:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 898:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 899:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 900:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 901:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 902:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 903:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 905:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 907:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 914:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 916:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 917:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1222              		.loc 1 919 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 8
 1225              		@ frame_needed = 1, uses_anonymous_args = 0
 1226 0000 80B5     		push	{r7, lr}
 1227              		.cfi_def_cfa_offset 8
 1228              		.cfi_offset 7, -8
 1229              		.cfi_offset 14, -4
 1230 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 39


 1231              		.cfi_def_cfa_offset 16
 1232 0004 00AF     		add	r7, sp, #0
 1233              		.cfi_def_cfa_register 7
 1234 0006 7860     		str	r0, [r7, #4]
 1235 0008 0A00     		movs	r2, r1
 1236 000a FB1C     		adds	r3, r7, #3
 1237 000c 1A70     		strb	r2, [r3]
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 1238              		.loc 1 920 0
 1239 000e 054A     		ldr	r2, .L75
 1240 0010 7B68     		ldr	r3, [r7, #4]
 1241 0012 D318     		adds	r3, r2, r3
 1242 0014 FA1C     		adds	r2, r7, #3
 1243 0016 1278     		ldrb	r2, [r2]
 1244 0018 1A70     		strb	r2, [r3]
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1245              		.loc 1 921 0
 1246 001a C046     		nop
 1247 001c BD46     		mov	sp, r7
 1248 001e 02B0     		add	sp, sp, #8
 1249              		@ sp needed
 1250 0020 80BD     		pop	{r7, pc}
 1251              	.L76:
 1252 0022 C046     		.align	2
 1253              	.L75:
 1254 0024 00000000 		.word	CapSense_fingerThreshold
 1255              		.cfi_endproc
 1256              	.LFE50:
 1257              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1258              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1259              		.align	2
 1260              		.global	CapSense_SetNoiseThreshold
 1261              		.code	16
 1262              		.thumb_func
 1263              		.type	CapSense_SetNoiseThreshold, %function
 1264              	CapSense_SetNoiseThreshold:
 1265              	.LFB51:
 922:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 923:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 40


 942:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 944:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 945:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1266              		.loc 1 947 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 8
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270 0000 80B5     		push	{r7, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 82B0     		sub	sp, sp, #8
 1275              		.cfi_def_cfa_offset 16
 1276 0004 00AF     		add	r7, sp, #0
 1277              		.cfi_def_cfa_register 7
 1278 0006 7860     		str	r0, [r7, #4]
 1279 0008 0A00     		movs	r2, r1
 1280 000a FB1C     		adds	r3, r7, #3
 1281 000c 1A70     		strb	r2, [r3]
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 1282              		.loc 1 948 0
 1283 000e 054A     		ldr	r2, .L78
 1284 0010 7B68     		ldr	r3, [r7, #4]
 1285 0012 D318     		adds	r3, r2, r3
 1286 0014 FA1C     		adds	r2, r7, #3
 1287 0016 1278     		ldrb	r2, [r2]
 1288 0018 1A70     		strb	r2, [r3]
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1289              		.loc 1 949 0
 1290 001a C046     		nop
 1291 001c BD46     		mov	sp, r7
 1292 001e 02B0     		add	sp, sp, #8
 1293              		@ sp needed
 1294 0020 80BD     		pop	{r7, pc}
 1295              	.L79:
 1296 0022 C046     		.align	2
 1297              	.L78:
 1298 0024 00000000 		.word	CapSense_noiseThreshold
 1299              		.cfi_endproc
 1300              	.LFE51:
 1301              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1302              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1303              		.align	2
 1304              		.global	CapSense_SetFingerHysteresis
 1305              		.code	16
 1306              		.thumb_func
 1307              		.type	CapSense_SetFingerHysteresis, %function
 1308              	CapSense_SetFingerHysteresis:
 1309              	.LFB52:
 950:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 951:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 41


 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 971:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 972:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 973:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1310              		.loc 1 975 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 8
 1313              		@ frame_needed = 1, uses_anonymous_args = 0
 1314 0000 80B5     		push	{r7, lr}
 1315              		.cfi_def_cfa_offset 8
 1316              		.cfi_offset 7, -8
 1317              		.cfi_offset 14, -4
 1318 0002 82B0     		sub	sp, sp, #8
 1319              		.cfi_def_cfa_offset 16
 1320 0004 00AF     		add	r7, sp, #0
 1321              		.cfi_def_cfa_register 7
 1322 0006 7860     		str	r0, [r7, #4]
 1323 0008 0A00     		movs	r2, r1
 1324 000a FB1C     		adds	r3, r7, #3
 1325 000c 1A70     		strb	r2, [r3]
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 1326              		.loc 1 976 0
 1327 000e 054A     		ldr	r2, .L81
 1328 0010 7B68     		ldr	r3, [r7, #4]
 1329 0012 D318     		adds	r3, r2, r3
 1330 0014 FA1C     		adds	r2, r7, #3
 1331 0016 1278     		ldrb	r2, [r2]
 1332 0018 1A70     		strb	r2, [r3]
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1333              		.loc 1 977 0
 1334 001a C046     		nop
 1335 001c BD46     		mov	sp, r7
 1336 001e 02B0     		add	sp, sp, #8
 1337              		@ sp needed
 1338 0020 80BD     		pop	{r7, pc}
 1339              	.L82:
 1340 0022 C046     		.align	2
 1341              	.L81:
 1342 0024 00000000 		.word	CapSense_hysteresis
 1343              		.cfi_endproc
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 42


 1344              	.LFE52:
 1345              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1346              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1347              		.align	2
 1348              		.global	CapSense_SetNegativeNoiseThreshold
 1349              		.code	16
 1350              		.thumb_func
 1351              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1352              	CapSense_SetNegativeNoiseThreshold:
 1353              	.LFB53:
 978:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 979:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1000:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1001:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1354              		.loc 1 1004 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 8
 1357              		@ frame_needed = 1, uses_anonymous_args = 0
 1358 0000 80B5     		push	{r7, lr}
 1359              		.cfi_def_cfa_offset 8
 1360              		.cfi_offset 7, -8
 1361              		.cfi_offset 14, -4
 1362 0002 82B0     		sub	sp, sp, #8
 1363              		.cfi_def_cfa_offset 16
 1364 0004 00AF     		add	r7, sp, #0
 1365              		.cfi_def_cfa_register 7
 1366 0006 7860     		str	r0, [r7, #4]
 1367 0008 0A00     		movs	r2, r1
 1368 000a FB1C     		adds	r3, r7, #3
 1369 000c 1A70     		strb	r2, [r3]
1005:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 1370              		.loc 1 1005 0
 1371 000e 054A     		ldr	r2, .L84
 1372 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 43


 1373 0012 D318     		adds	r3, r2, r3
 1374 0014 FA1C     		adds	r2, r7, #3
 1375 0016 1278     		ldrb	r2, [r2]
 1376 0018 1A70     		strb	r2, [r3]
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1377              		.loc 1 1006 0
 1378 001a C046     		nop
 1379 001c BD46     		mov	sp, r7
 1380 001e 02B0     		add	sp, sp, #8
 1381              		@ sp needed
 1382 0020 80BD     		pop	{r7, pc}
 1383              	.L85:
 1384 0022 C046     		.align	2
 1385              	.L84:
 1386 0024 00000000 		.word	CapSense_negativeNoiseThreshold
 1387              		.cfi_endproc
 1388              	.LFE53:
 1389              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1390              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1391              		.align	2
 1392              		.global	CapSense_SetDebounce
 1393              		.code	16
 1394              		.thumb_func
 1395              		.type	CapSense_SetDebounce, %function
 1396              	CapSense_SetDebounce:
 1397              	.LFB54:
1007:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1008:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1028:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1029:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1030:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1398              		.loc 1 1032 0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 8
 1401              		@ frame_needed = 1, uses_anonymous_args = 0
 1402 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 44


 1403              		.cfi_def_cfa_offset 8
 1404              		.cfi_offset 7, -8
 1405              		.cfi_offset 14, -4
 1406 0002 82B0     		sub	sp, sp, #8
 1407              		.cfi_def_cfa_offset 16
 1408 0004 00AF     		add	r7, sp, #0
 1409              		.cfi_def_cfa_register 7
 1410 0006 7860     		str	r0, [r7, #4]
 1411 0008 0A00     		movs	r2, r1
 1412 000a FB1C     		adds	r3, r7, #3
 1413 000c 1A70     		strb	r2, [r3]
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 1414              		.loc 1 1033 0
 1415 000e 054A     		ldr	r2, .L87
 1416 0010 7B68     		ldr	r3, [r7, #4]
 1417 0012 D318     		adds	r3, r2, r3
 1418 0014 FA1C     		adds	r2, r7, #3
 1419 0016 1278     		ldrb	r2, [r2]
 1420 0018 1A70     		strb	r2, [r3]
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1421              		.loc 1 1034 0
 1422 001a C046     		nop
 1423 001c BD46     		mov	sp, r7
 1424 001e 02B0     		add	sp, sp, #8
 1425              		@ sp needed
 1426 0020 80BD     		pop	{r7, pc}
 1427              	.L88:
 1428 0022 C046     		.align	2
 1429              	.L87:
 1430 0024 00000000 		.word	CapSense_debounce
 1431              		.cfi_endproc
 1432              	.LFE54:
 1433              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1434              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1435              		.align	2
 1436              		.global	CapSense_SetLowBaselineReset
 1437              		.code	16
 1438              		.thumb_func
 1439              		.type	CapSense_SetLowBaselineReset, %function
 1440              	CapSense_SetLowBaselineReset:
 1441              	.LFB55:
1035:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1036:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 45


1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1056:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1057:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1058:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1059:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1060:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1442              		.loc 1 1060 0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 8
 1445              		@ frame_needed = 1, uses_anonymous_args = 0
 1446 0000 80B5     		push	{r7, lr}
 1447              		.cfi_def_cfa_offset 8
 1448              		.cfi_offset 7, -8
 1449              		.cfi_offset 14, -4
 1450 0002 82B0     		sub	sp, sp, #8
 1451              		.cfi_def_cfa_offset 16
 1452 0004 00AF     		add	r7, sp, #0
 1453              		.cfi_def_cfa_register 7
 1454 0006 7860     		str	r0, [r7, #4]
 1455 0008 0A00     		movs	r2, r1
 1456 000a FB1C     		adds	r3, r7, #3
 1457 000c 1A70     		strb	r2, [r3]
1061:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 1458              		.loc 1 1061 0
 1459 000e 054A     		ldr	r2, .L90
 1460 0010 7B68     		ldr	r3, [r7, #4]
 1461 0012 D318     		adds	r3, r2, r3
 1462 0014 FA1C     		adds	r2, r7, #3
 1463 0016 1278     		ldrb	r2, [r2]
 1464 0018 1A70     		strb	r2, [r3]
1062:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1465              		.loc 1 1062 0
 1466 001a C046     		nop
 1467 001c BD46     		mov	sp, r7
 1468 001e 02B0     		add	sp, sp, #8
 1469              		@ sp needed
 1470 0020 80BD     		pop	{r7, pc}
 1471              	.L91:
 1472 0022 C046     		.align	2
 1473              	.L90:
 1474 0024 00000000 		.word	CapSense_lowBaselineReset
 1475              		.cfi_endproc
 1476              	.LFE55:
 1477              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1478              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1479              		.align	2
 1480              		.global	CapSense_CheckIsSensorActive
 1481              		.code	16
 1482              		.thumb_func
 1483              		.type	CapSense_CheckIsSensorActive, %function
 1484              	CapSense_CheckIsSensorActive:
 1485              	.LFB56:
1063:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 46


1064:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1065:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1066:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1067:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1068:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1069:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1070:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1071:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1072:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1073:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1074:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1075:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1076:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1077:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1078:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1100:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1101:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1102:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1103:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1104:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1105:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1106:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1486              		.loc 1 1106 0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 16
 1489              		@ frame_needed = 1, uses_anonymous_args = 0
 1490 0000 80B5     		push	{r7, lr}
 1491              		.cfi_def_cfa_offset 8
 1492              		.cfi_offset 7, -8
 1493              		.cfi_offset 14, -4
 1494 0002 84B0     		sub	sp, sp, #16
 1495              		.cfi_def_cfa_offset 24
 1496 0004 00AF     		add	r7, sp, #0
 1497              		.cfi_def_cfa_register 7
 1498 0006 7860     		str	r0, [r7, #4]
1107:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 47


1108:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1109:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1110:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1111:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1112:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1113:Generated_Source\PSoC4/CapSense_CSHL.c ****     static uint8 CapSense_debounceCounter[] = {
1114:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1115:Generated_Source\PSoC4/CapSense_CSHL.c **** };
1116:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1119:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1120:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1499              		.loc 1 1120 0
 1500 0008 0F23     		movs	r3, #15
 1501 000a FB18     		adds	r3, r7, r3
 1502 000c 4349     		ldr	r1, .L101
 1503 000e 7A68     		ldr	r2, [r7, #4]
 1504 0010 8A18     		adds	r2, r1, r2
 1505 0012 1278     		ldrb	r2, [r2]
 1506 0014 1A70     		strb	r2, [r3]
1121:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1122:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1507              		.loc 1 1122 0
 1508 0016 0F23     		movs	r3, #15
 1509 0018 FB18     		adds	r3, r7, r3
 1510 001a 1A78     		ldrb	r2, [r3]
 1511 001c 0E23     		movs	r3, #14
 1512 001e FB18     		adds	r3, r7, r3
 1513 0020 3F49     		ldr	r1, .L101+4
 1514 0022 8A5C     		ldrb	r2, [r1, r2]
 1515 0024 1A70     		strb	r2, [r3]
1123:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 1516              		.loc 1 1123 0
 1517 0026 0F23     		movs	r3, #15
 1518 0028 FB18     		adds	r3, r7, r3
 1519 002a 1A78     		ldrb	r2, [r3]
 1520 002c 0D23     		movs	r3, #13
 1521 002e FB18     		adds	r3, r7, r3
 1522 0030 3C49     		ldr	r1, .L101+8
 1523 0032 8A5C     		ldrb	r2, [r1, r2]
 1524 0034 1A70     		strb	r2, [r3]
1124:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 1525              		.loc 1 1124 0
 1526 0036 0F23     		movs	r3, #15
 1527 0038 FB18     		adds	r3, r7, r3
 1528 003a 1A78     		ldrb	r2, [r3]
 1529 003c 0C23     		movs	r3, #12
 1530 003e FB18     		adds	r3, r7, r3
 1531 0040 3949     		ldr	r1, .L101+12
 1532 0042 8A5C     		ldrb	r2, [r1, r2]
 1533 0044 1A70     		strb	r2, [r3]
1125:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1126:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1534              		.loc 1 1126 0
 1535 0046 0B23     		movs	r3, #11
 1536 0048 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 48


 1537 004a 0022     		movs	r2, #0
 1538 004c 1A70     		strb	r2, [r3]
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
 1539              		.loc 1 1127 0
 1540 004e 0B23     		movs	r3, #11
 1541 0050 FB18     		adds	r3, r7, r3
 1542 0052 1B78     		ldrb	r3, [r3]
 1543 0054 354A     		ldr	r2, .L101+16
 1544 0056 0121     		movs	r1, #1
 1545 0058 D154     		strb	r1, [r2, r3]
1128:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1129:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1130:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1546              		.loc 1 1131 0
 1547 005a 7A68     		ldr	r2, [r7, #4]
 1548 005c 344B     		ldr	r3, .L101+20
 1549 005e 1100     		movs	r1, r2
 1550 0060 1800     		movs	r0, r3
 1551 0062 FFF7FEFF 		bl	CapSense_GetBitValue
 1552 0066 031E     		subs	r3, r0, #0
 1553 0068 1CD0     		beq	.L93
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1554              		.loc 1 1134 0
 1555 006a 324A     		ldr	r2, .L101+24
 1556 006c 7B68     		ldr	r3, [r7, #4]
 1557 006e D318     		adds	r3, r2, r3
 1558 0070 1B78     		ldrb	r3, [r3]
 1559 0072 1900     		movs	r1, r3
 1560 0074 0E23     		movs	r3, #14
 1561 0076 FB18     		adds	r3, r7, r3
 1562 0078 1A78     		ldrb	r2, [r3]
 1563 007a 0D23     		movs	r3, #13
 1564 007c FB18     		adds	r3, r7, r3
 1565 007e 1B78     		ldrb	r3, [r3]
 1566 0080 D31A     		subs	r3, r2, r3
 1567 0082 9942     		cmp	r1, r3
 1568 0084 3BDA     		bge	.L95
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1569              		.loc 1 1136 0
 1570 0086 7968     		ldr	r1, [r7, #4]
 1571 0088 294B     		ldr	r3, .L101+20
 1572 008a 0022     		movs	r2, #0
 1573 008c 1800     		movs	r0, r3
 1574 008e FFF7FEFF 		bl	CapSense_SetBitValue
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1575              		.loc 1 1138 0
 1576 0092 0B23     		movs	r3, #11
 1577 0094 FB18     		adds	r3, r7, r3
 1578 0096 1B78     		ldrb	r3, [r3]
 1579 0098 244A     		ldr	r2, .L101+16
 1580 009a 0C21     		movs	r1, #12
 1581 009c 7918     		adds	r1, r7, r1
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 49


 1582 009e 0978     		ldrb	r1, [r1]
 1583 00a0 D154     		strb	r1, [r2, r3]
 1584 00a2 2CE0     		b	.L95
 1585              	.L93:
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1586              		.loc 1 1144 0
 1587 00a4 234A     		ldr	r2, .L101+24
 1588 00a6 7B68     		ldr	r3, [r7, #4]
 1589 00a8 D318     		adds	r3, r2, r3
 1590 00aa 1B78     		ldrb	r3, [r3]
 1591 00ac 1900     		movs	r1, r3
 1592 00ae 0E23     		movs	r3, #14
 1593 00b0 FB18     		adds	r3, r7, r3
 1594 00b2 1A78     		ldrb	r2, [r3]
 1595 00b4 0D23     		movs	r3, #13
 1596 00b6 FB18     		adds	r3, r7, r3
 1597 00b8 1B78     		ldrb	r3, [r3]
 1598 00ba D318     		adds	r3, r2, r3
 1599 00bc 9942     		cmp	r1, r3
 1600 00be 16DB     		blt	.L96
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 1601              		.loc 1 1146 0
 1602 00c0 0B23     		movs	r3, #11
 1603 00c2 FB18     		adds	r3, r7, r3
 1604 00c4 1B78     		ldrb	r3, [r3]
 1605 00c6 194A     		ldr	r2, .L101+16
 1606 00c8 D25C     		ldrb	r2, [r2, r3]
 1607 00ca 013A     		subs	r2, r2, #1
 1608 00cc D1B2     		uxtb	r1, r2
 1609 00ce 174A     		ldr	r2, .L101+16
 1610 00d0 D154     		strb	r1, [r2, r3]
1147:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1611              		.loc 1 1148 0
 1612 00d2 0B23     		movs	r3, #11
 1613 00d4 FB18     		adds	r3, r7, r3
 1614 00d6 1B78     		ldrb	r3, [r3]
 1615 00d8 144A     		ldr	r2, .L101+16
 1616 00da D35C     		ldrb	r3, [r2, r3]
 1617 00dc 002B     		cmp	r3, #0
 1618 00de 0ED1     		bne	.L95
1149:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 1619              		.loc 1 1150 0
 1620 00e0 7968     		ldr	r1, [r7, #4]
 1621 00e2 134B     		ldr	r3, .L101+20
 1622 00e4 0122     		movs	r2, #1
 1623 00e6 1800     		movs	r0, r3
 1624 00e8 FFF7FEFF 		bl	CapSense_SetBitValue
 1625 00ec 07E0     		b	.L95
 1626              	.L96:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 50


1151:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1152:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1153:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1154:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1155:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1156:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1627              		.loc 1 1156 0
 1628 00ee 0B23     		movs	r3, #11
 1629 00f0 FB18     		adds	r3, r7, r3
 1630 00f2 1B78     		ldrb	r3, [r3]
 1631 00f4 0D4A     		ldr	r2, .L101+16
 1632 00f6 0C21     		movs	r1, #12
 1633 00f8 7918     		adds	r1, r7, r1
 1634 00fa 0978     		ldrb	r1, [r1]
 1635 00fc D154     		strb	r1, [r2, r3]
 1636              	.L95:
1157:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1158:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1159:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1160:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1637              		.loc 1 1160 0
 1638 00fe 7A68     		ldr	r2, [r7, #4]
 1639 0100 0B4B     		ldr	r3, .L101+20
 1640 0102 1100     		movs	r1, r2
 1641 0104 1800     		movs	r0, r3
 1642 0106 FFF7FEFF 		bl	CapSense_GetBitValue
 1643 010a 031E     		subs	r3, r0, #0
 1644 010c 01D0     		beq	.L98
 1645              		.loc 1 1160 0 is_stmt 0 discriminator 1
 1646 010e 0123     		movs	r3, #1
 1647 0110 00E0     		b	.L100
 1648              	.L98:
 1649              		.loc 1 1160 0 discriminator 2
 1650 0112 0023     		movs	r3, #0
 1651              	.L100:
1161:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1652              		.loc 1 1161 0 is_stmt 1 discriminator 5
 1653 0114 1800     		movs	r0, r3
 1654 0116 BD46     		mov	sp, r7
 1655 0118 04B0     		add	sp, sp, #16
 1656              		@ sp needed
 1657 011a 80BD     		pop	{r7, pc}
 1658              	.L102:
 1659              		.align	2
 1660              	.L101:
 1661 011c 00000000 		.word	CapSense_widgetNumber
 1662 0120 00000000 		.word	CapSense_fingerThreshold
 1663 0124 00000000 		.word	CapSense_hysteresis
 1664 0128 00000000 		.word	CapSense_debounce
 1665 012c 20000000 		.word	CapSense_debounceCounter.5528
 1666 0130 00000000 		.word	CapSense_sensorOnMask
 1667 0134 00000000 		.word	CapSense_sensorSignal
 1668              		.cfi_endproc
 1669              	.LFE56:
 1670              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1671              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1672              		.align	2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 51


 1673              		.global	CapSense_CheckIsWidgetActive
 1674              		.code	16
 1675              		.thumb_func
 1676              		.type	CapSense_CheckIsWidgetActive, %function
 1677              	CapSense_CheckIsWidgetActive:
 1678              	.LFB57:
1162:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1164:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1165:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1166:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1167:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1168:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1169:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1170:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1171:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1172:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1173:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1174:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1175:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1176:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1177:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1179:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1182:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1183:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1184:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1185:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1186:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1187:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1188:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1189:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1190:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1191:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1193:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1679              		.loc 1 1193 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 24
 1682              		@ frame_needed = 1, uses_anonymous_args = 0
 1683 0000 80B5     		push	{r7, lr}
 1684              		.cfi_def_cfa_offset 8
 1685              		.cfi_offset 7, -8
 1686              		.cfi_offset 14, -4
 1687 0002 86B0     		sub	sp, sp, #24
 1688              		.cfi_def_cfa_offset 32
 1689 0004 00AF     		add	r7, sp, #0
 1690              		.cfi_def_cfa_register 7
 1691 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1692              		.loc 1 1194 0
 1693 0008 0023     		movs	r3, #0
 1694 000a 7B61     		str	r3, [r7, #20]
1195:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1695              		.loc 1 1195 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 52


 1696 000c 0523     		movs	r3, #5
 1697 000e 1A00     		movs	r2, r3
 1698 0010 7B69     		ldr	r3, [r7, #20]
 1699 0012 D318     		adds	r3, r2, r3
 1700 0014 FB60     		str	r3, [r7, #12]
1196:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1701              		.loc 1 1196 0
 1702 0016 0023     		movs	r3, #0
 1703 0018 3B61     		str	r3, [r7, #16]
 1704              	.L105:
1197:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1198:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1199:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1200:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1201:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1705              		.loc 1 1201 0
 1706 001a 7B69     		ldr	r3, [r7, #20]
 1707 001c 1800     		movs	r0, r3
 1708 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1709 0022 031E     		subs	r3, r0, #0
 1710 0024 01D0     		beq	.L104
1202:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1203:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1711              		.loc 1 1203 0
 1712 0026 0123     		movs	r3, #1
 1713 0028 3B61     		str	r3, [r7, #16]
 1714              	.L104:
1204:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1205:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1715              		.loc 1 1205 0
 1716 002a 7B69     		ldr	r3, [r7, #20]
 1717 002c 0133     		adds	r3, r3, #1
 1718 002e 7B61     		str	r3, [r7, #20]
1206:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1207:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1719              		.loc 1 1207 0
 1720 0030 7A69     		ldr	r2, [r7, #20]
 1721 0032 FB68     		ldr	r3, [r7, #12]
 1722 0034 9A42     		cmp	r2, r3
 1723 0036 F0D3     		bcc	.L105
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1211:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1724              		.loc 1 1211 0
 1725 0038 3B69     		ldr	r3, [r7, #16]
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1726              		.loc 1 1212 0
 1727 003a 1800     		movs	r0, r3
 1728 003c BD46     		mov	sp, r7
 1729 003e 06B0     		add	sp, sp, #24
 1730              		@ sp needed
 1731 0040 80BD     		pop	{r7, pc}
 1732              		.cfi_endproc
 1733              	.LFE57:
 1734              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1735 0042 C046     		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 53


 1736              		.align	2
 1737              		.global	CapSense_CheckIsAnyWidgetActive
 1738              		.code	16
 1739              		.thumb_func
 1740              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1741              	CapSense_CheckIsAnyWidgetActive:
 1742              	.LFB58:
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1219:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1220:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1221:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1223:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1224:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1225:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1226:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1229:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1230:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1231:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1232:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1233:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1234:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1235:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1236:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1237:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1238:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1239:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1743              		.loc 1 1239 0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 8
 1746              		@ frame_needed = 1, uses_anonymous_args = 0
 1747 0000 80B5     		push	{r7, lr}
 1748              		.cfi_def_cfa_offset 8
 1749              		.cfi_offset 7, -8
 1750              		.cfi_offset 14, -4
 1751 0002 82B0     		sub	sp, sp, #8
 1752              		.cfi_def_cfa_offset 16
 1753 0004 00AF     		add	r7, sp, #0
 1754              		.cfi_def_cfa_register 7
1240:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1241:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1242:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1755              		.loc 1 1242 0
 1756 0006 0023     		movs	r3, #0
 1757 0008 3B60     		str	r3, [r7]
1243:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1758              		.loc 1 1244 0
 1759 000a 0023     		movs	r3, #0
 1760 000c 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 54


 1761 000e 0AE0     		b	.L108
 1762              	.L110:
1245:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1246:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1763              		.loc 1 1246 0
 1764 0010 7B68     		ldr	r3, [r7, #4]
 1765 0012 1800     		movs	r0, r3
 1766 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1767 0018 031E     		subs	r3, r0, #0
 1768 001a 01D0     		beq	.L109
1247:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1248:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1769              		.loc 1 1248 0
 1770 001c 0123     		movs	r3, #1
 1771 001e 3B60     		str	r3, [r7]
 1772              	.L109:
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1773              		.loc 1 1244 0 discriminator 2
 1774 0020 7B68     		ldr	r3, [r7, #4]
 1775 0022 0133     		adds	r3, r3, #1
 1776 0024 7B60     		str	r3, [r7, #4]
 1777              	.L108:
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1778              		.loc 1 1244 0 is_stmt 0 discriminator 1
 1779 0026 7B68     		ldr	r3, [r7, #4]
 1780 0028 002B     		cmp	r3, #0
 1781 002a F1D0     		beq	.L110
1249:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1250:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1251:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1254:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1782              		.loc 1 1254 0 is_stmt 1
 1783 002c 3B68     		ldr	r3, [r7]
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1784              		.loc 1 1255 0
 1785 002e 1800     		movs	r0, r3
 1786 0030 BD46     		mov	sp, r7
 1787 0032 02B0     		add	sp, sp, #8
 1788              		@ sp needed
 1789 0034 80BD     		pop	{r7, pc}
 1790              		.cfi_endproc
 1791              	.LFE58:
 1792              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1793 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1794              		.align	2
 1795              		.global	CapSense_EnableWidget
 1796              		.code	16
 1797              		.thumb_func
 1798              		.type	CapSense_EnableWidget, %function
 1799              	CapSense_EnableWidget:
 1800              	.LFB59:
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 55


1260:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1267:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1268:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1269:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1270:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1273:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1274:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1277:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1279:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1280:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1281:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1282:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1283:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1284:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1285:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1286:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1801              		.loc 1 1286 0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 16
 1804              		@ frame_needed = 1, uses_anonymous_args = 0
 1805 0000 80B5     		push	{r7, lr}
 1806              		.cfi_def_cfa_offset 8
 1807              		.cfi_offset 7, -8
 1808              		.cfi_offset 14, -4
 1809 0002 84B0     		sub	sp, sp, #16
 1810              		.cfi_def_cfa_offset 24
 1811 0004 00AF     		add	r7, sp, #0
 1812              		.cfi_def_cfa_register 7
 1813 0006 7860     		str	r0, [r7, #4]
1287:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1288:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1814              		.loc 1 1288 0
 1815 0008 0F23     		movs	r3, #15
 1816 000a FB18     		adds	r3, r7, r3
 1817 000c 0022     		movs	r2, #0
 1818 000e 1A70     		strb	r2, [r3]
1289:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1819              		.loc 1 1289 0
 1820 0010 0521     		movs	r1, #5
 1821 0012 0E23     		movs	r3, #14
 1822 0014 FB18     		adds	r3, r7, r3
 1823 0016 0F22     		movs	r2, #15
 1824 0018 BA18     		adds	r2, r7, r2
 1825 001a 1278     		ldrb	r2, [r2]
 1826 001c 8A18     		adds	r2, r1, r2
 1827 001e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 56


 1828              	.L113:
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1291:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1292:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1293:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1294:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1829              		.loc 1 1294 0 discriminator 1
 1830 0020 0F23     		movs	r3, #15
 1831 0022 FB18     		adds	r3, r7, r3
 1832 0024 1978     		ldrb	r1, [r3]
 1833 0026 0C4B     		ldr	r3, .L114
 1834 0028 0122     		movs	r2, #1
 1835 002a 1800     		movs	r0, r3
 1836 002c FFF7FEFF 		bl	CapSense_SetBitValue
1295:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1837              		.loc 1 1295 0 discriminator 1
 1838 0030 0F23     		movs	r3, #15
 1839 0032 FB18     		adds	r3, r7, r3
 1840 0034 1A78     		ldrb	r2, [r3]
 1841 0036 0F23     		movs	r3, #15
 1842 0038 FB18     		adds	r3, r7, r3
 1843 003a 0132     		adds	r2, r2, #1
 1844 003c 1A70     		strb	r2, [r3]
1296:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1297:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1845              		.loc 1 1297 0 discriminator 1
 1846 003e 0F23     		movs	r3, #15
 1847 0040 FA18     		adds	r2, r7, r3
 1848 0042 0E23     		movs	r3, #14
 1849 0044 FB18     		adds	r3, r7, r3
 1850 0046 1278     		ldrb	r2, [r2]
 1851 0048 1B78     		ldrb	r3, [r3]
 1852 004a 9A42     		cmp	r2, r3
 1853 004c E8D3     		bcc	.L113
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1854              		.loc 1 1298 0
 1855 004e C046     		nop
 1856 0050 BD46     		mov	sp, r7
 1857 0052 04B0     		add	sp, sp, #16
 1858              		@ sp needed
 1859 0054 80BD     		pop	{r7, pc}
 1860              	.L115:
 1861 0056 C046     		.align	2
 1862              	.L114:
 1863 0058 00000000 		.word	CapSense_sensorEnableMask
 1864              		.cfi_endproc
 1865              	.LFE59:
 1866              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1867              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1868              		.align	2
 1869              		.global	CapSense_DisableWidget
 1870              		.code	16
 1871              		.thumb_func
 1872              		.type	CapSense_DisableWidget, %function
 1873              	CapSense_DisableWidget:
 1874              	.LFB60:
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 57


1300:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1314:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1316:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1318:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1323:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1324:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1326:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1327:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1328:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1329:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1875              		.loc 1 1329 0
 1876              		.cfi_startproc
 1877              		@ args = 0, pretend = 0, frame = 16
 1878              		@ frame_needed = 1, uses_anonymous_args = 0
 1879 0000 80B5     		push	{r7, lr}
 1880              		.cfi_def_cfa_offset 8
 1881              		.cfi_offset 7, -8
 1882              		.cfi_offset 14, -4
 1883 0002 84B0     		sub	sp, sp, #16
 1884              		.cfi_def_cfa_offset 24
 1885 0004 00AF     		add	r7, sp, #0
 1886              		.cfi_def_cfa_register 7
 1887 0006 7860     		str	r0, [r7, #4]
1330:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1888              		.loc 1 1330 0
 1889 0008 0F23     		movs	r3, #15
 1890 000a FB18     		adds	r3, r7, r3
 1891 000c 0022     		movs	r2, #0
 1892 000e 1A70     		strb	r2, [r3]
1331:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1893              		.loc 1 1331 0
 1894 0010 0521     		movs	r1, #5
 1895 0012 0E23     		movs	r3, #14
 1896 0014 FB18     		adds	r3, r7, r3
 1897 0016 0F22     		movs	r2, #15
 1898 0018 BA18     		adds	r2, r7, r2
 1899 001a 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 58


 1900 001c 8A18     		adds	r2, r1, r2
 1901 001e 1A70     		strb	r2, [r3]
 1902              	.L117:
1332:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1334:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1335:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1336:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1337:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1903              		.loc 1 1337 0 discriminator 1
 1904 0020 0F23     		movs	r3, #15
 1905 0022 FB18     		adds	r3, r7, r3
 1906 0024 1978     		ldrb	r1, [r3]
 1907 0026 0C4B     		ldr	r3, .L118
 1908 0028 0022     		movs	r2, #0
 1909 002a 1800     		movs	r0, r3
 1910 002c FFF7FEFF 		bl	CapSense_SetBitValue
1338:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1911              		.loc 1 1338 0 discriminator 1
 1912 0030 0F23     		movs	r3, #15
 1913 0032 FB18     		adds	r3, r7, r3
 1914 0034 1A78     		ldrb	r2, [r3]
 1915 0036 0F23     		movs	r3, #15
 1916 0038 FB18     		adds	r3, r7, r3
 1917 003a 0132     		adds	r2, r2, #1
 1918 003c 1A70     		strb	r2, [r3]
1339:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1340:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1919              		.loc 1 1340 0 discriminator 1
 1920 003e 0F23     		movs	r3, #15
 1921 0040 FA18     		adds	r2, r7, r3
 1922 0042 0E23     		movs	r3, #14
 1923 0044 FB18     		adds	r3, r7, r3
 1924 0046 1278     		ldrb	r2, [r2]
 1925 0048 1B78     		ldrb	r3, [r3]
 1926 004a 9A42     		cmp	r2, r3
 1927 004c E8D3     		bcc	.L117
1341:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1928              		.loc 1 1341 0
 1929 004e C046     		nop
 1930 0050 BD46     		mov	sp, r7
 1931 0052 04B0     		add	sp, sp, #16
 1932              		@ sp needed
 1933 0054 80BD     		pop	{r7, pc}
 1934              	.L119:
 1935 0056 C046     		.align	2
 1936              	.L118:
 1937 0058 00000000 		.word	CapSense_sensorEnableMask
 1938              		.cfi_endproc
 1939              	.LFE60:
 1940              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1941              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1942              		.align	2
 1943              		.global	CapSense_FindMaximum
 1944              		.code	16
 1945              		.thumb_func
 1946              		.type	CapSense_FindMaximum, %function
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 59


 1947              	CapSense_FindMaximum:
 1948              	.LFB61:
1342:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1343:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1344:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1345:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1346:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1347:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1348:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1949              		.loc 1 1380 0
 1950              		.cfi_startproc
 1951              		@ args = 0, pretend = 0, frame = 16
 1952              		@ frame_needed = 1, uses_anonymous_args = 0
 1953 0000 90B5     		push	{r4, r7, lr}
 1954              		.cfi_def_cfa_offset 12
 1955              		.cfi_offset 4, -12
 1956              		.cfi_offset 7, -8
 1957              		.cfi_offset 14, -4
 1958 0002 85B0     		sub	sp, sp, #20
 1959              		.cfi_def_cfa_offset 32
 1960 0004 00AF     		add	r7, sp, #0
 1961              		.cfi_def_cfa_register 7
 1962 0006 0400     		movs	r4, r0
 1963 0008 0800     		movs	r0, r1
 1964 000a 1100     		movs	r1, r2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 60


 1965 000c FB1D     		adds	r3, r7, #7
 1966 000e 221C     		adds	r2, r4, #0
 1967 0010 1A70     		strb	r2, [r3]
 1968 0012 BB1D     		adds	r3, r7, #6
 1969 0014 021C     		adds	r2, r0, #0
 1970 0016 1A70     		strb	r2, [r3]
 1971 0018 7B1D     		adds	r3, r7, #5
 1972 001a 0A1C     		adds	r2, r1, #0
 1973 001c 1A70     		strb	r2, [r3]
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1385:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1387:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1389:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
 1974              		.loc 1 1391 0
 1975 001e 0E23     		movs	r3, #14
 1976 0020 FB18     		adds	r3, r7, r3
 1977 0022 FF22     		movs	r2, #255
 1978 0024 1A70     		strb	r2, [r3]
1392:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
 1979              		.loc 1 1393 0
 1980 0026 0D23     		movs	r3, #13
 1981 0028 FB18     		adds	r3, r7, r3
 1982 002a 0022     		movs	r2, #0
 1983 002c 1A70     		strb	r2, [r3]
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1984              		.loc 1 1394 0
 1985 002e FB1D     		adds	r3, r7, #7
 1986 0030 1A78     		ldrb	r2, [r3]
 1987 0032 204B     		ldr	r3, .L125
 1988 0034 D318     		adds	r3, r2, r3
 1989 0036 BB60     		str	r3, [r7, #8]
1395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1401:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 61


1413:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1417:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1424:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1426:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1429:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1434:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1442:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1444:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1446:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1448:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1456:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1457:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 62


1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1990              		.loc 1 1491 0
 1991 0038 0F23     		movs	r3, #15
 1992 003a FB18     		adds	r3, r7, r3
 1993 003c 0022     		movs	r2, #0
 1994 003e 1A70     		strb	r2, [r3]
 1995 0040 2AE0     		b	.L121
 1996              	.L123:
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1997              		.loc 1 1494 0
 1998 0042 0F23     		movs	r3, #15
 1999 0044 FB18     		adds	r3, r7, r3
 2000 0046 1B78     		ldrb	r3, [r3]
 2001 0048 BA68     		ldr	r2, [r7, #8]
 2002 004a D318     		adds	r3, r2, r3
 2003 004c 1B78     		ldrb	r3, [r3]
 2004 004e 7A1D     		adds	r2, r7, #5
 2005 0050 1278     		ldrb	r2, [r2]
 2006 0052 9A42     		cmp	r2, r3
 2007 0054 19D2     		bcs	.L122
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1496:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 2008              		.loc 1 1496 0
 2009 0056 0F23     		movs	r3, #15
 2010 0058 FB18     		adds	r3, r7, r3
 2011 005a 1B78     		ldrb	r3, [r3]
 2012 005c BA68     		ldr	r2, [r7, #8]
 2013 005e D318     		adds	r3, r2, r3
 2014 0060 1B78     		ldrb	r3, [r3]
 2015 0062 0D22     		movs	r2, #13
 2016 0064 BA18     		adds	r2, r7, r2
 2017 0066 1278     		ldrb	r2, [r2]
 2018 0068 9A42     		cmp	r2, r3
 2019 006a 0ED2     		bcs	.L122
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 63


1497:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
 2020              		.loc 1 1498 0
 2021 006c 0E23     		movs	r3, #14
 2022 006e FB18     		adds	r3, r7, r3
 2023 0070 0F22     		movs	r2, #15
 2024 0072 BA18     		adds	r2, r7, r2
 2025 0074 1278     		ldrb	r2, [r2]
 2026 0076 1A70     		strb	r2, [r3]
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 2027              		.loc 1 1499 0
 2028 0078 0F23     		movs	r3, #15
 2029 007a FB18     		adds	r3, r7, r3
 2030 007c 1B78     		ldrb	r3, [r3]
 2031 007e BA68     		ldr	r2, [r7, #8]
 2032 0080 D218     		adds	r2, r2, r3
 2033 0082 0D23     		movs	r3, #13
 2034 0084 FB18     		adds	r3, r7, r3
 2035 0086 1278     		ldrb	r2, [r2]
 2036 0088 1A70     		strb	r2, [r3]
 2037              	.L122:
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 2038              		.loc 1 1491 0 discriminator 2
 2039 008a 0F23     		movs	r3, #15
 2040 008c FB18     		adds	r3, r7, r3
 2041 008e 1A78     		ldrb	r2, [r3]
 2042 0090 0F23     		movs	r3, #15
 2043 0092 FB18     		adds	r3, r7, r3
 2044 0094 0132     		adds	r2, r2, #1
 2045 0096 1A70     		strb	r2, [r3]
 2046              	.L121:
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 2047              		.loc 1 1491 0 is_stmt 0 discriminator 1
 2048 0098 0F23     		movs	r3, #15
 2049 009a FA18     		adds	r2, r7, r3
 2050 009c BB1D     		adds	r3, r7, #6
 2051 009e 1278     		ldrb	r2, [r2]
 2052 00a0 1B78     		ldrb	r3, [r3]
 2053 00a2 9A42     		cmp	r2, r3
 2054 00a4 CDD3     		bcc	.L123
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
 2055              		.loc 1 1504 0 is_stmt 1
 2056 00a6 0E23     		movs	r3, #14
 2057 00a8 FB18     		adds	r3, r7, r3
 2058 00aa 1B78     		ldrb	r3, [r3]
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2059              		.loc 1 1505 0
 2060 00ac 1800     		movs	r0, r3
 2061 00ae BD46     		mov	sp, r7
 2062 00b0 05B0     		add	sp, sp, #20
 2063              		@ sp needed
 2064 00b2 90BD     		pop	{r4, r7, pc}
 2065              	.L126:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 64


 2066              		.align	2
 2067              	.L125:
 2068 00b4 00000000 		.word	CapSense_sensorSignal
 2069              		.cfi_endproc
 2070              	.LFE61:
 2071              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 2072              		.global	__aeabi_idiv
 2073              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 2074              		.align	2
 2075              		.global	CapSense_CalcCentroid
 2076              		.code	16
 2077              		.thumb_func
 2078              		.type	CapSense_CalcCentroid, %function
 2079              	CapSense_CalcCentroid:
 2080              	.LFB62:
1506:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1507:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1508:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1526:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1529:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1531:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1533:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1535:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1536:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1537:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1538:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1539:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1540:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2081              		.loc 1 1540 0
 2082              		.cfi_startproc
 2083              		@ args = 4, pretend = 0, frame = 32
 2084              		@ frame_needed = 1, uses_anonymous_args = 0
 2085 0000 B0B5     		push	{r4, r5, r7, lr}
 2086              		.cfi_def_cfa_offset 16
 2087              		.cfi_offset 4, -16
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 65


 2088              		.cfi_offset 5, -12
 2089              		.cfi_offset 7, -8
 2090              		.cfi_offset 14, -4
 2091 0002 88B0     		sub	sp, sp, #32
 2092              		.cfi_def_cfa_offset 48
 2093 0004 00AF     		add	r7, sp, #0
 2094              		.cfi_def_cfa_register 7
 2095 0006 0500     		movs	r5, r0
 2096 0008 0C00     		movs	r4, r1
 2097 000a 1000     		movs	r0, r2
 2098 000c 1900     		movs	r1, r3
 2099 000e FB1D     		adds	r3, r7, #7
 2100 0010 2A1C     		adds	r2, r5, #0
 2101 0012 1A70     		strb	r2, [r3]
 2102 0014 BB1D     		adds	r3, r7, #6
 2103 0016 221C     		adds	r2, r4, #0
 2104 0018 1A70     		strb	r2, [r3]
 2105 001a 7B1D     		adds	r3, r7, #5
 2106 001c 021C     		adds	r2, r0, #0
 2107 001e 1A70     		strb	r2, [r3]
 2108 0020 BB1C     		adds	r3, r7, #2
 2109 0022 0A1C     		adds	r2, r1, #0
 2110 0024 1A80     		strh	r2, [r3]
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1542:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1543:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1544:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1545:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1546:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1548:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1552:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1554:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1556:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1558:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1559:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 2111              		.loc 1 1559 0
 2112 0026 BB1D     		adds	r3, r7, #6
 2113 0028 1A78     		ldrb	r2, [r3]
 2114 002a 5B4B     		ldr	r3, .L137
 2115 002c D318     		adds	r3, r2, r3
 2116 002e BB61     		str	r3, [r7, #24]
1560:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1561:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
 2117              		.loc 1 1562 0
 2118 0030 1F23     		movs	r3, #31
 2119 0032 FB18     		adds	r3, r7, r3
 2120 0034 0022     		movs	r2, #0
 2121 0036 1A70     		strb	r2, [r3]
1563:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 66


1564:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1569:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1573:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1575:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1577:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1578:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1579:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1581:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1583:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1585:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1587:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1589:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1591:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1597:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1616:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1620:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 67


1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 2122              		.loc 1 1622 0
 2123 0038 FB1D     		adds	r3, r7, #7
 2124 003a 1B78     		ldrb	r3, [r3]
 2125 003c 002B     		cmp	r3, #0
 2126 003e 05D0     		beq	.L128
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 2127              		.loc 1 1624 0
 2128 0040 1F23     		movs	r3, #31
 2129 0042 FB18     		adds	r3, r7, r3
 2130 0044 FA1D     		adds	r2, r7, #7
 2131 0046 1278     		ldrb	r2, [r2]
 2132 0048 013A     		subs	r2, r2, #1
 2133 004a 1A70     		strb	r2, [r3]
 2134              	.L128:
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 2135              		.loc 1 1626 0
 2136 004c 1723     		movs	r3, #23
 2137 004e FB18     		adds	r3, r7, r3
 2138 0050 FA1D     		adds	r2, r7, #7
 2139 0052 1278     		ldrb	r2, [r2]
 2140 0054 0132     		adds	r2, r2, #1
 2141 0056 1A70     		strb	r2, [r3]
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1628:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 2142              		.loc 1 1633 0
 2143 0058 FB1D     		adds	r3, r7, #7
 2144 005a 1B78     		ldrb	r3, [r3]
 2145 005c BA69     		ldr	r2, [r7, #24]
 2146 005e D318     		adds	r3, r2, r3
 2147 0060 1A78     		ldrb	r2, [r3]
 2148 0062 4E4B     		ldr	r3, .L137+4
 2149 0064 5A70     		strb	r2, [r3, #1]
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1635:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2150              		.loc 1 1637 0
 2151 0066 FB1D     		adds	r3, r7, #7
 2152 0068 1B78     		ldrb	r3, [r3]
 2153 006a 002B     		cmp	r3, #0
 2154 006c 0BD1     		bne	.L129
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 2155              		.loc 1 1639 0
 2156 006e 4B4B     		ldr	r3, .L137+4
 2157 0070 0022     		movs	r2, #0
 2158 0072 1A70     		strb	r2, [r3]
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 68


 2159              		.loc 1 1640 0
 2160 0074 1723     		movs	r3, #23
 2161 0076 FB18     		adds	r3, r7, r3
 2162 0078 1B78     		ldrb	r3, [r3]
 2163 007a BA69     		ldr	r2, [r7, #24]
 2164 007c D318     		adds	r3, r2, r3
 2165 007e 1A78     		ldrb	r2, [r3]
 2166 0080 464B     		ldr	r3, .L137+4
 2167 0082 9A70     		strb	r2, [r3, #2]
 2168 0084 22E0     		b	.L130
 2169              	.L129:
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2170              		.loc 1 1642 0
 2171 0086 FB1D     		adds	r3, r7, #7
 2172 0088 1A78     		ldrb	r2, [r3]
 2173 008a 7B1D     		adds	r3, r7, #5
 2174 008c 1B78     		ldrb	r3, [r3]
 2175 008e 013B     		subs	r3, r3, #1
 2176 0090 9A42     		cmp	r2, r3
 2177 0092 0BD1     		bne	.L131
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2178              		.loc 1 1644 0
 2179 0094 1F23     		movs	r3, #31
 2180 0096 FB18     		adds	r3, r7, r3
 2181 0098 1B78     		ldrb	r3, [r3]
 2182 009a BA69     		ldr	r2, [r7, #24]
 2183 009c D318     		adds	r3, r2, r3
 2184 009e 1A78     		ldrb	r2, [r3]
 2185 00a0 3E4B     		ldr	r3, .L137+4
 2186 00a2 1A70     		strb	r2, [r3]
1645:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2187              		.loc 1 1645 0
 2188 00a4 3D4B     		ldr	r3, .L137+4
 2189 00a6 0022     		movs	r2, #0
 2190 00a8 9A70     		strb	r2, [r3, #2]
 2191 00aa 0FE0     		b	.L130
 2192              	.L131:
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1647:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2193              		.loc 1 1649 0
 2194 00ac 1F23     		movs	r3, #31
 2195 00ae FB18     		adds	r3, r7, r3
 2196 00b0 1B78     		ldrb	r3, [r3]
 2197 00b2 BA69     		ldr	r2, [r7, #24]
 2198 00b4 D318     		adds	r3, r2, r3
 2199 00b6 1A78     		ldrb	r2, [r3]
 2200 00b8 384B     		ldr	r3, .L137+4
 2201 00ba 1A70     		strb	r2, [r3]
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2202              		.loc 1 1650 0
 2203 00bc 1723     		movs	r3, #23
 2204 00be FB18     		adds	r3, r7, r3
 2205 00c0 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 69


 2206 00c2 BA69     		ldr	r2, [r7, #24]
 2207 00c4 D318     		adds	r3, r2, r3
 2208 00c6 1A78     		ldrb	r2, [r3]
 2209 00c8 344B     		ldr	r3, .L137+4
 2210 00ca 9A70     		strb	r2, [r3, #2]
 2211              	.L130:
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1653:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1655:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1657:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1658:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1659:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 2212              		.loc 1 1659 0
 2213 00cc 334B     		ldr	r3, .L137+4
 2214 00ce 1B78     		ldrb	r3, [r3]
 2215 00d0 3022     		movs	r2, #48
 2216 00d2 BA18     		adds	r2, r7, r2
 2217 00d4 1278     		ldrb	r2, [r2]
 2218 00d6 9A42     		cmp	r2, r3
 2219 00d8 09D2     		bcs	.L132
1660:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 2220              		.loc 1 1661 0
 2221 00da 304B     		ldr	r3, .L137+4
 2222 00dc 1A78     		ldrb	r2, [r3]
 2223 00de 3023     		movs	r3, #48
 2224 00e0 FB18     		adds	r3, r7, r3
 2225 00e2 1B78     		ldrb	r3, [r3]
 2226 00e4 D31A     		subs	r3, r2, r3
 2227 00e6 DAB2     		uxtb	r2, r3
 2228 00e8 2C4B     		ldr	r3, .L137+4
 2229 00ea 1A70     		strb	r2, [r3]
 2230 00ec 02E0     		b	.L133
 2231              	.L132:
1662:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 2232              		.loc 1 1665 0
 2233 00ee 2B4B     		ldr	r3, .L137+4
 2234 00f0 0022     		movs	r2, #0
 2235 00f2 1A70     		strb	r2, [r3]
 2236              	.L133:
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1667:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1669:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 2237              		.loc 1 1669 0
 2238 00f4 294B     		ldr	r3, .L137+4
 2239 00f6 5A78     		ldrb	r2, [r3, #1]
 2240 00f8 3023     		movs	r3, #48
 2241 00fa FB18     		adds	r3, r7, r3
 2242 00fc 1B78     		ldrb	r3, [r3]
 2243 00fe D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 70


 2244 0100 DAB2     		uxtb	r2, r3
 2245 0102 264B     		ldr	r3, .L137+4
 2246 0104 5A70     		strb	r2, [r3, #1]
1670:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1671:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1672:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 2247              		.loc 1 1672 0
 2248 0106 254B     		ldr	r3, .L137+4
 2249 0108 9B78     		ldrb	r3, [r3, #2]
 2250 010a 3022     		movs	r2, #48
 2251 010c BA18     		adds	r2, r7, r2
 2252 010e 1278     		ldrb	r2, [r2]
 2253 0110 9A42     		cmp	r2, r3
 2254 0112 09D2     		bcs	.L134
1673:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1674:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 2255              		.loc 1 1674 0
 2256 0114 214B     		ldr	r3, .L137+4
 2257 0116 9A78     		ldrb	r2, [r3, #2]
 2258 0118 3023     		movs	r3, #48
 2259 011a FB18     		adds	r3, r7, r3
 2260 011c 1B78     		ldrb	r3, [r3]
 2261 011e D31A     		subs	r3, r2, r3
 2262 0120 DAB2     		uxtb	r2, r3
 2263 0122 1E4B     		ldr	r3, .L137+4
 2264 0124 9A70     		strb	r2, [r3, #2]
 2265 0126 02E0     		b	.L135
 2266              	.L134:
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1678:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2267              		.loc 1 1678 0
 2268 0128 1C4B     		ldr	r3, .L137+4
 2269 012a 0022     		movs	r2, #0
 2270 012c 9A70     		strb	r2, [r3, #2]
 2271              	.L135:
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1680:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1682:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2272              		.loc 1 1683 0
 2273 012e 1B4B     		ldr	r3, .L137+4
 2274 0130 9B78     		ldrb	r3, [r3, #2]
 2275 0132 1A00     		movs	r2, r3
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2276              		.loc 1 1684 0
 2277 0134 194B     		ldr	r3, .L137+4
 2278 0136 1B78     		ldrb	r3, [r3]
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2279              		.loc 1 1683 0
 2280 0138 D31A     		subs	r3, r2, r3
 2281 013a 3B61     		str	r3, [r7, #16]
1685:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 71


 2282              		.loc 1 1687 0
 2283 013c 174B     		ldr	r3, .L137+4
 2284 013e 1B78     		ldrb	r3, [r3]
 2285 0140 1A00     		movs	r2, r3
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2286              		.loc 1 1688 0
 2287 0142 164B     		ldr	r3, .L137+4
 2288 0144 5B78     		ldrb	r3, [r3, #1]
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2289              		.loc 1 1687 0
 2290 0146 D318     		adds	r3, r2, r3
1689:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 2291              		.loc 1 1689 0
 2292 0148 144A     		ldr	r2, .L137+4
 2293 014a 9278     		ldrb	r2, [r2, #2]
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2294              		.loc 1 1687 0
 2295 014c 9B18     		adds	r3, r3, r2
 2296 014e FB60     		str	r3, [r7, #12]
1690:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1691:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1692:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2297              		.loc 1 1692 0
 2298 0150 3B69     		ldr	r3, [r7, #16]
 2299 0152 1B02     		lsls	r3, r3, #8
 2300 0154 F968     		ldr	r1, [r7, #12]
 2301 0156 1800     		movs	r0, r3
 2302 0158 FFF7FEFF 		bl	__aeabi_idiv
 2303 015c 0300     		movs	r3, r0
 2304 015e 1A00     		movs	r2, r3
 2305 0160 FB1D     		adds	r3, r7, #7
 2306 0162 1B78     		ldrb	r3, [r3]
 2307 0164 1B02     		lsls	r3, r3, #8
 2308 0166 D318     		adds	r3, r2, r3
 2309 0168 FB60     		str	r3, [r7, #12]
1693:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1695:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1697:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1698:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1699:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1700:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1701:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1702:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 2310              		.loc 1 1702 0
 2311 016a BB1C     		adds	r3, r7, #2
 2312 016c 0022     		movs	r2, #0
 2313 016e 9B5E     		ldrsh	r3, [r3, r2]
 2314 0170 1A00     		movs	r2, r3
 2315 0172 FB68     		ldr	r3, [r7, #12]
 2316 0174 5343     		muls	r3, r2
 2317 0176 FB60     		str	r3, [r7, #12]
1703:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1704:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1705:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 2318              		.loc 1 1705 0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 72


 2319 0178 FB68     		ldr	r3, [r7, #12]
 2320 017a FE22     		movs	r2, #254
 2321 017c D201     		lsls	r2, r2, #7
 2322 017e 9446     		mov	ip, r2
 2323 0180 6344     		add	r3, r3, ip
 2324 0182 1A0C     		lsrs	r2, r3, #16
 2325 0184 0B23     		movs	r3, #11
 2326 0186 FB18     		adds	r3, r7, r3
 2327 0188 1A70     		strb	r2, [r3]
1706:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2328              		.loc 1 1707 0
 2329 018a 0B23     		movs	r3, #11
 2330 018c FB18     		adds	r3, r7, r3
 2331 018e 1B78     		ldrb	r3, [r3]
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2332              		.loc 1 1708 0
 2333 0190 1800     		movs	r0, r3
 2334 0192 BD46     		mov	sp, r7
 2335 0194 08B0     		add	sp, sp, #32
 2336              		@ sp needed
 2337 0196 B0BD     		pop	{r4, r5, r7, pc}
 2338              	.L138:
 2339              		.align	2
 2340              	.L137:
 2341 0198 00000000 		.word	CapSense_sensorSignal
 2342 019c 24000000 		.word	CapSense_centroid.5580
 2343              		.cfi_endproc
 2344              	.LFE62:
 2345              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 2346              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 2347              		.align	2
 2348              		.global	CapSense_GetCentroidPos
 2349              		.code	16
 2350              		.thumb_func
 2351              		.type	CapSense_GetCentroidPos, %function
 2352              	CapSense_GetCentroidPos:
 2353              	.LFB63:
1709:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1710:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1711:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1712:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1713:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1714:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 73


1728:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1741:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1747:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2354              		.loc 1 1749 0
 2355              		.cfi_startproc
 2356              		@ args = 0, pretend = 0, frame = 24
 2357              		@ frame_needed = 1, uses_anonymous_args = 0
 2358 0000 B0B5     		push	{r4, r5, r7, lr}
 2359              		.cfi_def_cfa_offset 16
 2360              		.cfi_offset 4, -16
 2361              		.cfi_offset 5, -12
 2362              		.cfi_offset 7, -8
 2363              		.cfi_offset 14, -4
 2364 0002 88B0     		sub	sp, sp, #32
 2365              		.cfi_def_cfa_offset 48
 2366 0004 02AF     		add	r7, sp, #8
 2367              		.cfi_def_cfa 7, 40
 2368 0006 7860     		str	r0, [r7, #4]
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1753:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 2369              		.loc 1 1756 0
 2370 0008 1523     		movs	r3, #21
 2371 000a FB18     		adds	r3, r7, r3
 2372 000c 6649     		ldr	r1, .L147
 2373 000e 7A68     		ldr	r2, [r7, #4]
 2374 0010 8A18     		adds	r2, r1, r2
 2375 0012 1278     		ldrb	r2, [r2]
 2376 0014 1A70     		strb	r2, [r3]
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
 2377              		.loc 1 1757 0
 2378 0016 1423     		movs	r3, #20
 2379 0018 FB18     		adds	r3, r7, r3
 2380 001a 6449     		ldr	r1, .L147+4
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 74


 2381 001c 7A68     		ldr	r2, [r7, #4]
 2382 001e 8A18     		adds	r2, r1, r2
 2383 0020 1278     		ldrb	r2, [r2]
 2384 0022 1A70     		strb	r2, [r3]
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1759:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1761:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1763:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1766:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2385              		.loc 1 1769 0
 2386 0024 1323     		movs	r3, #19
 2387 0026 FB18     		adds	r3, r7, r3
 2388 0028 0022     		movs	r2, #0
 2389 002a 1A70     		strb	r2, [r3]
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2390              		.loc 1 1770 0
 2391 002c 1223     		movs	r3, #18
 2392 002e FB18     		adds	r3, r7, r3
 2393 0030 0522     		movs	r2, #5
 2394 0032 1A70     		strb	r2, [r3]
1771:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1773:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1775:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1776:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1778:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1782:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1783:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1784:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2395              		.loc 1 1788 0
 2396 0034 5E4A     		ldr	r2, .L147+8
 2397 0036 7B68     		ldr	r3, [r7, #4]
 2398 0038 D318     		adds	r3, r2, r3
 2399 003a 1A78     		ldrb	r2, [r3]
 2400 003c 1123     		movs	r3, #17
 2401 003e FC18     		adds	r4, r7, r3
 2402 0040 1223     		movs	r3, #18
 2403 0042 FB18     		adds	r3, r7, r3
 2404 0044 1978     		ldrb	r1, [r3]
 2405 0046 1323     		movs	r3, #19
 2406 0048 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 75


 2407 004a 1B78     		ldrb	r3, [r3]
 2408 004c 1800     		movs	r0, r3
 2409 004e FFF7FEFF 		bl	CapSense_FindMaximum
 2410 0052 0300     		movs	r3, r0
 2411 0054 2370     		strb	r3, [r4]
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1790:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 2412              		.loc 1 1791 0
 2413 0056 1123     		movs	r3, #17
 2414 0058 FB18     		adds	r3, r7, r3
 2415 005a 1B78     		ldrb	r3, [r3]
 2416 005c FF2B     		cmp	r3, #255
 2417 005e 00D1     		bne	.LCB2058
 2418 0060 8AE0     		b	.L140	@long jump
 2419              	.LCB2058:
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2420              		.loc 1 1794 0
 2421 0062 C823     		movs	r3, #200
 2422 0064 5D01     		lsls	r5, r3, #5
 2423 0066 534A     		ldr	r2, .L147+12
 2424 0068 7B68     		ldr	r3, [r7, #4]
 2425 006a D318     		adds	r3, r2, r3
 2426 006c 1B78     		ldrb	r3, [r3]
 2427 006e 1222     		movs	r2, #18
 2428 0070 BA18     		adds	r2, r7, r2
 2429 0072 1478     		ldrb	r4, [r2]
 2430 0074 1322     		movs	r2, #19
 2431 0076 BA18     		adds	r2, r7, r2
 2432 0078 1178     		ldrb	r1, [r2]
 2433 007a 1122     		movs	r2, #17
 2434 007c BA18     		adds	r2, r7, r2
 2435 007e 1078     		ldrb	r0, [r2]
 2436 0080 0093     		str	r3, [sp]
 2437 0082 2B00     		movs	r3, r5
 2438 0084 2200     		movs	r2, r4
 2439 0086 FFF7FEFF 		bl	CapSense_CalcCentroid
 2440 008a 0300     		movs	r3, r0
 2441 008c 1A00     		movs	r2, r3
 2442 008e 1623     		movs	r3, #22
 2443 0090 FB18     		adds	r3, r7, r3
 2444 0092 1A80     		strh	r2, [r3]
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1796:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2445              		.loc 1 1799 0
 2446 0094 1423     		movs	r3, #20
 2447 0096 FB18     		adds	r3, r7, r3
 2448 0098 1B78     		ldrb	r3, [r3]
 2449 009a 1F22     		movs	r2, #31
 2450 009c 1340     		ands	r3, r2
 2451 009e 00D1     		bne	.LCB2089
 2452 00a0 7BE0     		b	.L145	@long jump
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 76


 2453              	.LCB2089:
1800:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1802:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2454              		.loc 1 1802 0
 2455 00a2 1023     		movs	r3, #16
 2456 00a4 FB18     		adds	r3, r7, r3
 2457 00a6 1522     		movs	r2, #21
 2458 00a8 BA18     		adds	r2, r7, r2
 2459 00aa 1278     		ldrb	r2, [r2]
 2460 00ac 0132     		adds	r2, r2, #1
 2461 00ae 1A70     		strb	r2, [r3]
1803:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 2462              		.loc 1 1804 0
 2463 00b0 1523     		movs	r3, #21
 2464 00b2 FB18     		adds	r3, r7, r3
 2465 00b4 1B78     		ldrb	r3, [r3]
 2466 00b6 3C4A     		ldr	r2, .L147
 2467 00b8 D35C     		ldrb	r3, [r2, r3]
 2468 00ba 002B     		cmp	r3, #0
 2469 00bc 25D1     		bne	.L142
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1806:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 2470              		.loc 1 1807 0
 2471 00be 1023     		movs	r3, #16
 2472 00c0 FB18     		adds	r3, r7, r3
 2473 00c2 1B78     		ldrb	r3, [r3]
 2474 00c4 1622     		movs	r2, #22
 2475 00c6 BA18     		adds	r2, r7, r2
 2476 00c8 1288     		ldrh	r2, [r2]
 2477 00ca D1B2     		uxtb	r1, r2
 2478 00cc 364A     		ldr	r2, .L147
 2479 00ce D154     		strb	r1, [r2, r3]
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1812:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
 2480              		.loc 1 1813 0
 2481 00d0 1423     		movs	r3, #20
 2482 00d2 FB18     		adds	r3, r7, r3
 2483 00d4 1B78     		ldrb	r3, [r3]
 2484 00d6 0122     		movs	r2, #1
 2485 00d8 1340     		ands	r3, r2
 2486 00da 05D1     		bne	.L143
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
 2487              		.loc 1 1814 0 discriminator 1
 2488 00dc 1423     		movs	r3, #20
 2489 00de FB18     		adds	r3, r7, r3
 2490 00e0 1B78     		ldrb	r3, [r3]
 2491 00e2 0222     		movs	r2, #2
 2492 00e4 1340     		ands	r3, r2
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
 2493              		.loc 1 1813 0 discriminator 1
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 77


 2494 00e6 09D0     		beq	.L144
 2495              	.L143:
1815:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
 2496              		.loc 1 1816 0
 2497 00e8 1023     		movs	r3, #16
 2498 00ea FB18     		adds	r3, r7, r3
 2499 00ec 1B78     		ldrb	r3, [r3]
 2500 00ee 0133     		adds	r3, r3, #1
 2501 00f0 1622     		movs	r2, #22
 2502 00f2 BA18     		adds	r2, r7, r2
 2503 00f4 1288     		ldrh	r2, [r2]
 2504 00f6 D1B2     		uxtb	r1, r2
 2505 00f8 2B4A     		ldr	r2, .L147
 2506 00fa D154     		strb	r1, [r2, r3]
 2507              	.L144:
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1823:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 2508              		.loc 1 1824 0
 2509 00fc 1523     		movs	r3, #21
 2510 00fe FB18     		adds	r3, r7, r3
 2511 0100 1B78     		ldrb	r3, [r3]
 2512 0102 294A     		ldr	r2, .L147
 2513 0104 0121     		movs	r1, #1
 2514 0106 D154     		strb	r1, [r2, r3]
 2515 0108 47E0     		b	.L145
 2516              	.L142:
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1831:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1835:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1843:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1845:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
 2517              		.loc 1 1845 0
 2518 010a 1423     		movs	r3, #20
 2519 010c FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 78


 2520 010e 1B78     		ldrb	r3, [r3]
 2521 0110 0222     		movs	r2, #2
 2522 0112 1340     		ands	r3, r2
 2523 0114 41D0     		beq	.L145
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1847:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
 2524              		.loc 1 1847 0
 2525 0116 0F23     		movs	r3, #15
 2526 0118 FB18     		adds	r3, r7, r3
 2527 011a 1622     		movs	r2, #22
 2528 011c BA18     		adds	r2, r7, r2
 2529 011e 1288     		ldrh	r2, [r2]
 2530 0120 1A70     		strb	r2, [r3]
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
 2531              		.loc 1 1849 0
 2532 0122 1023     		movs	r3, #16
 2533 0124 FB18     		adds	r3, r7, r3
 2534 0126 1B78     		ldrb	r3, [r3]
 2535 0128 1F4A     		ldr	r2, .L147
 2536 012a D35C     		ldrb	r3, [r2, r3]
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
 2537              		.loc 1 1848 0
 2538 012c 99B2     		uxth	r1, r3
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
 2539              		.loc 1 1850 0
 2540 012e 1023     		movs	r3, #16
 2541 0130 FB18     		adds	r3, r7, r3
 2542 0132 1B78     		ldrb	r3, [r3]
 2543 0134 0133     		adds	r3, r3, #1
 2544 0136 1C4A     		ldr	r2, .L147
 2545 0138 D35C     		ldrb	r3, [r2, r3]
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
 2546              		.loc 1 1848 0
 2547 013a 9AB2     		uxth	r2, r3
 2548 013c 1623     		movs	r3, #22
 2549 013e FC18     		adds	r4, r7, r3
 2550 0140 1623     		movs	r3, #22
 2551 0142 FB18     		adds	r3, r7, r3
 2552 0144 1B88     		ldrh	r3, [r3]
 2553 0146 1800     		movs	r0, r3
 2554 0148 FFF7FEFF 		bl	CapSense_AveragingFilter
 2555 014c 0300     		movs	r3, r0
 2556 014e 2380     		strh	r3, [r4]
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
 2557              		.loc 1 1851 0
 2558 0150 1023     		movs	r3, #16
 2559 0152 FB18     		adds	r3, r7, r3
 2560 0154 1B78     		ldrb	r3, [r3]
 2561 0156 0133     		adds	r3, r3, #1
 2562 0158 1022     		movs	r2, #16
 2563 015a BA18     		adds	r2, r7, r2
 2564 015c 1278     		ldrb	r2, [r2]
 2565 015e 1249     		ldr	r1, .L147
 2566 0160 895C     		ldrb	r1, [r1, r2]
 2567 0162 114A     		ldr	r2, .L147
 2568 0164 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 79


1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
 2569              		.loc 1 1852 0
 2570 0166 1023     		movs	r3, #16
 2571 0168 FB18     		adds	r3, r7, r3
 2572 016a 1B78     		ldrb	r3, [r3]
 2573 016c 0E4A     		ldr	r2, .L147
 2574 016e 0F21     		movs	r1, #15
 2575 0170 7918     		adds	r1, r7, r1
 2576 0172 0978     		ldrb	r1, [r1]
 2577 0174 D154     		strb	r1, [r2, r3]
 2578 0176 10E0     		b	.L145
 2579              	.L140:
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1857:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1868:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1879:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1881:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1883:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1885:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1887:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1891:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1893:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1897:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 80


1898:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2580              		.loc 1 1898 0
 2581 0178 1623     		movs	r3, #22
 2582 017a FB18     		adds	r3, r7, r3
 2583 017c 0122     		movs	r2, #1
 2584 017e 5242     		rsbs	r2, r2, #0
 2585 0180 1A80     		strh	r2, [r3]
1899:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1900:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1901:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1902:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2586              		.loc 1 1902 0
 2587 0182 1423     		movs	r3, #20
 2588 0184 FB18     		adds	r3, r7, r3
 2589 0186 1B78     		ldrb	r3, [r3]
 2590 0188 1F22     		movs	r2, #31
 2591 018a 1340     		ands	r3, r2
 2592 018c 05D0     		beq	.L145
1903:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1904:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 2593              		.loc 1 1904 0
 2594 018e 1523     		movs	r3, #21
 2595 0190 FB18     		adds	r3, r7, r3
 2596 0192 1B78     		ldrb	r3, [r3]
 2597 0194 044A     		ldr	r2, .L147
 2598 0196 0021     		movs	r1, #0
 2599 0198 D154     		strb	r1, [r2, r3]
 2600              	.L145:
1905:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1906:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1907:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1908:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1909:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2601              		.loc 1 1910 0
 2602 019a 1623     		movs	r3, #22
 2603 019c FB18     		adds	r3, r7, r3
 2604 019e 1B88     		ldrh	r3, [r3]
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2605              		.loc 1 1911 0
 2606 01a0 1800     		movs	r0, r3
 2607 01a2 BD46     		mov	sp, r7
 2608 01a4 06B0     		add	sp, sp, #24
 2609              		@ sp needed
 2610 01a6 B0BD     		pop	{r4, r5, r7, pc}
 2611              	.L148:
 2612              		.align	2
 2613              	.L147:
 2614 01a8 10000000 		.word	CapSense_posFiltersData
 2615 01ac 0C000000 		.word	CapSense_posFiltersMask
 2616 01b0 00000000 		.word	CapSense_fingerThreshold
 2617 01b4 00000000 		.word	CapSense_noiseThreshold
 2618              		.cfi_endproc
 2619              	.LFE63:
 2620              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 2621              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 2622              		.align	2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 81


 2623              		.global	CapSense_GetRadialCentroidPos
 2624              		.code	16
 2625              		.thumb_func
 2626              		.type	CapSense_GetRadialCentroidPos, %function
 2627              	CapSense_GetRadialCentroidPos:
 2628              	.LFB64:
1912:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1913:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1914:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1915:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1916:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1918:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1919:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2629              		.loc 1 1952 0
 2630              		.cfi_startproc
 2631              		@ args = 0, pretend = 0, frame = 16
 2632              		@ frame_needed = 1, uses_anonymous_args = 0
 2633 0000 B0B5     		push	{r4, r5, r7, lr}
 2634              		.cfi_def_cfa_offset 16
 2635              		.cfi_offset 4, -16
 2636              		.cfi_offset 5, -12
 2637              		.cfi_offset 7, -8
 2638              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 82


 2639 0002 86B0     		sub	sp, sp, #24
 2640              		.cfi_def_cfa_offset 40
 2641 0004 02AF     		add	r7, sp, #8
 2642              		.cfi_def_cfa 7, 32
 2643 0006 7860     		str	r0, [r7, #4]
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1957:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1958:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1960:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1962:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1965:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1967:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2644              		.loc 1 1968 0
 2645 0008 0D23     		movs	r3, #13
 2646 000a FB18     		adds	r3, r7, r3
 2647 000c 0022     		movs	r2, #0
 2648 000e 1A70     		strb	r2, [r3]
1969:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2649              		.loc 1 1969 0
 2650 0010 0C23     		movs	r3, #12
 2651 0012 FB18     		adds	r3, r7, r3
 2652 0014 0522     		movs	r2, #5
 2653 0016 1A70     		strb	r2, [r3]
1970:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1971:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2654              		.loc 1 1975 0
 2655 0018 1D4A     		ldr	r2, .L153
 2656 001a 7B68     		ldr	r3, [r7, #4]
 2657 001c D318     		adds	r3, r2, r3
 2658 001e 1A78     		ldrb	r2, [r3]
 2659 0020 0B23     		movs	r3, #11
 2660 0022 FC18     		adds	r4, r7, r3
 2661 0024 0C23     		movs	r3, #12
 2662 0026 FB18     		adds	r3, r7, r3
 2663 0028 1978     		ldrb	r1, [r3]
 2664 002a 0D23     		movs	r3, #13
 2665 002c FB18     		adds	r3, r7, r3
 2666 002e 1B78     		ldrb	r3, [r3]
 2667 0030 1800     		movs	r0, r3
 2668 0032 FFF7FEFF 		bl	CapSense_FindMaximum
 2669 0036 0300     		movs	r3, r0
 2670 0038 2370     		strb	r3, [r4]
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1977:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 83


1978:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 2671              		.loc 1 1978 0
 2672 003a 0B23     		movs	r3, #11
 2673 003c FB18     		adds	r3, r7, r3
 2674 003e 1B78     		ldrb	r3, [r3]
 2675 0040 FF2B     		cmp	r3, #255
 2676 0042 19D0     		beq	.L150
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2677              		.loc 1 1981 0
 2678 0044 C823     		movs	r3, #200
 2679 0046 5D01     		lsls	r5, r3, #5
 2680 0048 124A     		ldr	r2, .L153+4
 2681 004a 7B68     		ldr	r3, [r7, #4]
 2682 004c D318     		adds	r3, r2, r3
 2683 004e 1B78     		ldrb	r3, [r3]
 2684 0050 0C22     		movs	r2, #12
 2685 0052 BA18     		adds	r2, r7, r2
 2686 0054 1478     		ldrb	r4, [r2]
 2687 0056 0D22     		movs	r2, #13
 2688 0058 BA18     		adds	r2, r7, r2
 2689 005a 1178     		ldrb	r1, [r2]
 2690 005c 0B22     		movs	r2, #11
 2691 005e BA18     		adds	r2, r7, r2
 2692 0060 1078     		ldrb	r0, [r2]
 2693 0062 0093     		str	r3, [sp]
 2694 0064 2B00     		movs	r3, r5
 2695 0066 2200     		movs	r2, r4
 2696 0068 FFF7FEFF 		bl	CapSense_CalcCentroid
 2697 006c 0300     		movs	r3, r0
 2698 006e 1A00     		movs	r2, r3
 2699 0070 0E23     		movs	r3, #14
 2700 0072 FB18     		adds	r3, r7, r3
 2701 0074 1A80     		strh	r2, [r3]
 2702 0076 04E0     		b	.L151
 2703              	.L150:
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1983:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1987:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1989:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1990:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1999:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2000:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 84


2002:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2010:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2018:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2022:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2030:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2033:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2035:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2045:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2056:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 85


2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2067:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2069:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2071:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2075:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2081:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2086:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2704              		.loc 1 2086 0
 2705 0078 0E23     		movs	r3, #14
 2706 007a FB18     		adds	r3, r7, r3
 2707 007c 0122     		movs	r2, #1
 2708 007e 5242     		rsbs	r2, r2, #0
 2709 0080 1A80     		strh	r2, [r3]
 2710              	.L151:
2087:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2088:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2089:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2090:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2091:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2092:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2093:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2094:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2096:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2711              		.loc 1 2097 0
 2712 0082 0E23     		movs	r3, #14
 2713 0084 FB18     		adds	r3, r7, r3
 2714 0086 1B88     		ldrh	r3, [r3]
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2715              		.loc 1 2098 0
 2716 0088 1800     		movs	r0, r3
 2717 008a BD46     		mov	sp, r7
 2718 008c 04B0     		add	sp, sp, #16
 2719              		@ sp needed
 2720 008e B0BD     		pop	{r4, r5, r7, pc}
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 86


 2721              	.L154:
 2722              		.align	2
 2723              	.L153:
 2724 0090 00000000 		.word	CapSense_fingerThreshold
 2725 0094 00000000 		.word	CapSense_noiseThreshold
 2726              		.cfi_endproc
 2727              	.LFE64:
 2728              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 2729              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 2730              		.align	2
 2731              		.global	CapSense_MedianFilter
 2732              		.code	16
 2733              		.thumb_func
 2734              		.type	CapSense_MedianFilter, %function
 2735              	CapSense_MedianFilter:
 2736              	.LFB65:
2099:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2100:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2101:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2102:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2104:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2106:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2136:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2138:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 87


2140:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2146:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2147:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2148:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2153:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2161:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2163:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2165:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2168:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2170:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2172:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2173:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2175:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2177:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2179:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2180:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2181:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2183:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2184:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2186:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2187:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2189:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2192:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2193:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2196:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 88


2197:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2198:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2200:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2203:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2204:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2205:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2208:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2210:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2212:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2215:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2217:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2219:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2227:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2229:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2231:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2233:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2235:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2240:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2243:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2244:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2246:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2252:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 89


2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2256:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2266:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2267:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2268:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2270:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2275:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2276:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2277:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2279:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2280:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2282:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2284:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2286:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2287:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2291:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2292:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2295:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2296:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2298:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2300:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2302:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2303:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2307:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2308:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 90


2311:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2312:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2319:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2322:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2324:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2326:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2328:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2330:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2335:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2336:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2337:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2338:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2339:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2340:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2341:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2342:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2343:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2344:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2345:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2347:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2350:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2351:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2352:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2353:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2355:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 91


2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2371:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2373:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2375:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2378:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2737              		.loc 1 2381 0
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 16
 2740              		@ frame_needed = 1, uses_anonymous_args = 0
 2741 0000 90B5     		push	{r4, r7, lr}
 2742              		.cfi_def_cfa_offset 12
 2743              		.cfi_offset 4, -12
 2744              		.cfi_offset 7, -8
 2745              		.cfi_offset 14, -4
 2746 0002 85B0     		sub	sp, sp, #20
 2747              		.cfi_def_cfa_offset 32
 2748 0004 00AF     		add	r7, sp, #0
 2749              		.cfi_def_cfa_register 7
 2750 0006 0400     		movs	r4, r0
 2751 0008 0800     		movs	r0, r1
 2752 000a 1100     		movs	r1, r2
 2753 000c BB1D     		adds	r3, r7, #6
 2754 000e 221C     		adds	r2, r4, #0
 2755 0010 1A80     		strh	r2, [r3]
 2756 0012 3B1D     		adds	r3, r7, #4
 2757 0014 021C     		adds	r2, r0, #0
 2758 0016 1A80     		strh	r2, [r3]
 2759 0018 BB1C     		adds	r3, r7, #2
 2760 001a 0A1C     		adds	r2, r1, #0
 2761 001c 1A80     		strh	r2, [r3]
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2383:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2762              		.loc 1 2384 0
 2763 001e BA1D     		adds	r2, r7, #6
 2764 0020 3B1D     		adds	r3, r7, #4
 2765 0022 1288     		ldrh	r2, [r2]
 2766 0024 1B88     		ldrh	r3, [r3]
 2767 0026 9A42     		cmp	r2, r3
 2768 0028 0DD9     		bls	.L156
2385:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 2769              		.loc 1 2386 0
 2770 002a 0E23     		movs	r3, #14
 2771 002c FB18     		adds	r3, r7, r3
 2772 002e 3A1D     		adds	r2, r7, #4
 2773 0030 1288     		ldrh	r2, [r2]
 2774 0032 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 92


2387:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 2775              		.loc 1 2387 0
 2776 0034 3B1D     		adds	r3, r7, #4
 2777 0036 BA1D     		adds	r2, r7, #6
 2778 0038 1288     		ldrh	r2, [r2]
 2779 003a 1A80     		strh	r2, [r3]
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 2780              		.loc 1 2388 0
 2781 003c BB1D     		adds	r3, r7, #6
 2782 003e 0E22     		movs	r2, #14
 2783 0040 BA18     		adds	r2, r7, r2
 2784 0042 1288     		ldrh	r2, [r2]
 2785 0044 1A80     		strh	r2, [r3]
 2786              	.L156:
2389:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2390:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2391:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 2787              		.loc 1 2391 0
 2788 0046 3A1D     		adds	r2, r7, #4
 2789 0048 BB1C     		adds	r3, r7, #2
 2790 004a 1288     		ldrh	r2, [r2]
 2791 004c 1B88     		ldrh	r3, [r3]
 2792 004e 9A42     		cmp	r2, r3
 2793 0050 03D9     		bls	.L157
2392:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2393:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 2794              		.loc 1 2393 0
 2795 0052 3B1D     		adds	r3, r7, #4
 2796 0054 BA1C     		adds	r2, r7, #2
 2797 0056 1288     		ldrh	r2, [r2]
 2798 0058 1A80     		strh	r2, [r3]
 2799              	.L157:
2394:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2800              		.loc 1 2396 0
 2801 005a 3B1D     		adds	r3, r7, #4
 2802 005c BA1D     		adds	r2, r7, #6
 2803 005e 1088     		ldrh	r0, [r2]
 2804 0060 1B88     		ldrh	r3, [r3]
 2805 0062 99B2     		uxth	r1, r3
 2806 0064 82B2     		uxth	r2, r0
 2807 0066 9142     		cmp	r1, r2
 2808 0068 00D2     		bcs	.L158
 2809 006a 031C     		adds	r3, r0, #0
 2810              	.L158:
 2811 006c 9BB2     		uxth	r3, r3
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2812              		.loc 1 2397 0
 2813 006e 1800     		movs	r0, r3
 2814 0070 BD46     		mov	sp, r7
 2815 0072 05B0     		add	sp, sp, #20
 2816              		@ sp needed
 2817 0074 90BD     		pop	{r4, r7, pc}
 2818              		.cfi_endproc
 2819              	.LFE65:
 2820              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 93


 2821              		.global	__aeabi_uidiv
 2822 0076 C046     		.section	.text.CapSense_AveragingFilter,"ax",%progbits
 2823              		.align	2
 2824              		.global	CapSense_AveragingFilter
 2825              		.code	16
 2826              		.thumb_func
 2827              		.type	CapSense_AveragingFilter, %function
 2828              	CapSense_AveragingFilter:
 2829              	.LFB66:
2398:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2401:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2402:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2403:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2420:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2422:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2423:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2424:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2425:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2426:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2427:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2428:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2429:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2830              		.loc 1 2430 0
 2831              		.cfi_startproc
 2832              		@ args = 0, pretend = 0, frame = 16
 2833              		@ frame_needed = 1, uses_anonymous_args = 0
 2834 0000 90B5     		push	{r4, r7, lr}
 2835              		.cfi_def_cfa_offset 12
 2836              		.cfi_offset 4, -12
 2837              		.cfi_offset 7, -8
 2838              		.cfi_offset 14, -4
 2839 0002 85B0     		sub	sp, sp, #20
 2840              		.cfi_def_cfa_offset 32
 2841 0004 00AF     		add	r7, sp, #0
 2842              		.cfi_def_cfa_register 7
 2843 0006 0400     		movs	r4, r0
 2844 0008 0800     		movs	r0, r1
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 94


 2845 000a 1100     		movs	r1, r2
 2846 000c BB1D     		adds	r3, r7, #6
 2847 000e 221C     		adds	r2, r4, #0
 2848 0010 1A80     		strh	r2, [r3]
 2849 0012 3B1D     		adds	r3, r7, #4
 2850 0014 021C     		adds	r2, r0, #0
 2851 0016 1A80     		strh	r2, [r3]
 2852 0018 BB1C     		adds	r3, r7, #2
 2853 001a 0A1C     		adds	r2, r1, #0
 2854 001c 1A80     		strh	r2, [r3]
2431:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
 2855              		.loc 1 2431 0
 2856 001e BB1D     		adds	r3, r7, #6
 2857 0020 1A88     		ldrh	r2, [r3]
 2858 0022 3B1D     		adds	r3, r7, #4
 2859 0024 1B88     		ldrh	r3, [r3]
 2860 0026 D218     		adds	r2, r2, r3
 2861 0028 BB1C     		adds	r3, r7, #2
 2862 002a 1B88     		ldrh	r3, [r3]
 2863 002c D318     		adds	r3, r2, r3
 2864 002e 0321     		movs	r1, #3
 2865 0030 1800     		movs	r0, r3
 2866 0032 FFF7FEFF 		bl	__aeabi_uidiv
 2867 0036 0300     		movs	r3, r0
 2868 0038 FB60     		str	r3, [r7, #12]
2432:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2869              		.loc 1 2433 0
 2870 003a FB68     		ldr	r3, [r7, #12]
 2871 003c 9BB2     		uxth	r3, r3
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2872              		.loc 1 2434 0
 2873 003e 1800     		movs	r0, r3
 2874 0040 BD46     		mov	sp, r7
 2875 0042 05B0     		add	sp, sp, #20
 2876              		@ sp needed
 2877 0044 90BD     		pop	{r4, r7, pc}
 2878              		.cfi_endproc
 2879              	.LFE66:
 2880              		.size	CapSense_AveragingFilter, .-CapSense_AveragingFilter
 2881 0046 C046     		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2882              		.align	2
 2883              		.global	CapSense_GetWidgetNumber
 2884              		.code	16
 2885              		.thumb_func
 2886              		.type	CapSense_GetWidgetNumber, %function
 2887              	CapSense_GetWidgetNumber:
 2888              	.LFB67:
2435:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2437:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2438:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2439:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 95


2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2455:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2457:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2459:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2460:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2461:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2462:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2463:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2464:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2465:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2467:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2469:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2472:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2475:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2476:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2477:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2491:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2494:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2495:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2496:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2498:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2499:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2500:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 96


2501:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2502:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2503:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2504:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2505:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2506:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
2507:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
2508:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2511:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2514:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2515:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2516:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2528:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2539:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2541:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2548:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2550:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2552:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2553:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2554:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2556:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 97


2558:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2560:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2562:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2576:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2578:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2580:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2581:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2583:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2584:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2585:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2586:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2587:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2588:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2589:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2590:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2591:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2592:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2593:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2596:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2597:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2598:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2599:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2613:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 98


2615:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2617:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2618:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2619:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2620:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2621:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2622:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2623:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2624:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2625:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2626:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2627:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2628:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2629:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2630:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2633:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2634:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2635:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2636:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2637:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2653:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2662:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 99


2672:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2674:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2687:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2697:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2698:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2699:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2700:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2701:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2702:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2703:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2704:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2705:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2706:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2707:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2708:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2709:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2710:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2711:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2712:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2713:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2714:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2715:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2716:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2718:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2719:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2720:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2722:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2723:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2724:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2725:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2726:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2727:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2728:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 100


2729:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2889              		.loc 1 2734 0
 2890              		.cfi_startproc
 2891              		@ args = 0, pretend = 0, frame = 8
 2892              		@ frame_needed = 1, uses_anonymous_args = 0
 2893 0000 80B5     		push	{r7, lr}
 2894              		.cfi_def_cfa_offset 8
 2895              		.cfi_offset 7, -8
 2896              		.cfi_offset 14, -4
 2897 0002 82B0     		sub	sp, sp, #8
 2898              		.cfi_def_cfa_offset 16
 2899 0004 00AF     		add	r7, sp, #0
 2900              		.cfi_def_cfa_register 7
 2901 0006 7860     		str	r0, [r7, #4]
2735:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2902              		.loc 1 2735 0
 2903 0008 034A     		ldr	r2, .L164
 2904 000a 7B68     		ldr	r3, [r7, #4]
 2905 000c D318     		adds	r3, r2, r3
 2906 000e 1B78     		ldrb	r3, [r3]
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2907              		.loc 1 2736 0
 2908 0010 1800     		movs	r0, r3
 2909 0012 BD46     		mov	sp, r7
 2910 0014 02B0     		add	sp, sp, #8
 2911              		@ sp needed
 2912 0016 80BD     		pop	{r7, pc}
 2913              	.L165:
 2914              		.align	2
 2915              	.L164:
 2916 0018 00000000 		.word	CapSense_widgetNumber
 2917              		.cfi_endproc
 2918              	.LFE67:
 2919              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2920              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2921              		.align	2
 2922              		.global	CapSense_GetLowBaselineReset
 2923              		.code	16
 2924              		.thumb_func
 2925              		.type	CapSense_GetLowBaselineReset, %function
 2926              	CapSense_GetLowBaselineReset:
 2927              	.LFB68:
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 101


2747:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2749:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2928              		.loc 1 2760 0
 2929              		.cfi_startproc
 2930              		@ args = 0, pretend = 0, frame = 8
 2931              		@ frame_needed = 1, uses_anonymous_args = 0
 2932 0000 80B5     		push	{r7, lr}
 2933              		.cfi_def_cfa_offset 8
 2934              		.cfi_offset 7, -8
 2935              		.cfi_offset 14, -4
 2936 0002 82B0     		sub	sp, sp, #8
 2937              		.cfi_def_cfa_offset 16
 2938 0004 00AF     		add	r7, sp, #0
 2939              		.cfi_def_cfa_register 7
 2940 0006 7860     		str	r0, [r7, #4]
2761:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2941              		.loc 1 2761 0
 2942 0008 034A     		ldr	r2, .L168
 2943 000a 7B68     		ldr	r3, [r7, #4]
 2944 000c D318     		adds	r3, r2, r3
 2945 000e 1B78     		ldrb	r3, [r3]
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2946              		.loc 1 2762 0
 2947 0010 1800     		movs	r0, r3
 2948 0012 BD46     		mov	sp, r7
 2949 0014 02B0     		add	sp, sp, #8
 2950              		@ sp needed
 2951 0016 80BD     		pop	{r7, pc}
 2952              	.L169:
 2953              		.align	2
 2954              	.L168:
 2955 0018 00000000 		.word	CapSense_lowBaselineReset
 2956              		.cfi_endproc
 2957              	.LFE68:
 2958              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2959              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2960              		.align	2
 2961              		.global	CapSense_GetDebounce
 2962              		.code	16
 2963              		.thumb_func
 2964              		.type	CapSense_GetDebounce, %function
 2965              	CapSense_GetDebounce:
 2966              	.LFB69:
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 102


2765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2779:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2780:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2781:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2782:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2783:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2784:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2786:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2967              		.loc 1 2786 0
 2968              		.cfi_startproc
 2969              		@ args = 0, pretend = 0, frame = 8
 2970              		@ frame_needed = 1, uses_anonymous_args = 0
 2971 0000 80B5     		push	{r7, lr}
 2972              		.cfi_def_cfa_offset 8
 2973              		.cfi_offset 7, -8
 2974              		.cfi_offset 14, -4
 2975 0002 82B0     		sub	sp, sp, #8
 2976              		.cfi_def_cfa_offset 16
 2977 0004 00AF     		add	r7, sp, #0
 2978              		.cfi_def_cfa_register 7
 2979 0006 7860     		str	r0, [r7, #4]
2787:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2980              		.loc 1 2787 0
 2981 0008 034A     		ldr	r2, .L172
 2982 000a 7B68     		ldr	r3, [r7, #4]
 2983 000c D318     		adds	r3, r2, r3
 2984 000e 1B78     		ldrb	r3, [r3]
2788:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2985              		.loc 1 2788 0
 2986 0010 1800     		movs	r0, r3
 2987 0012 BD46     		mov	sp, r7
 2988 0014 02B0     		add	sp, sp, #8
 2989              		@ sp needed
 2990 0016 80BD     		pop	{r7, pc}
 2991              	.L173:
 2992              		.align	2
 2993              	.L172:
 2994 0018 00000000 		.word	CapSense_debounce
 2995              		.cfi_endproc
 2996              	.LFE69:
 2997              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2998              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2999              		.align	2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 103


 3000              		.global	CapSense_EnableRawDataFilters
 3001              		.code	16
 3002              		.thumb_func
 3003              		.type	CapSense_EnableRawDataFilters, %function
 3004              	CapSense_EnableRawDataFilters:
 3005              	.LFB70:
2789:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2790:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2791:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2792:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2793:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2794:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2795:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2796:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2797:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2798:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2799:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2800:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2801:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2802:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2803:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2804:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2805:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2807:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2808:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2809:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 3006              		.loc 1 2812 0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 0
 3009              		@ frame_needed = 1, uses_anonymous_args = 0
 3010 0000 80B5     		push	{r7, lr}
 3011              		.cfi_def_cfa_offset 8
 3012              		.cfi_offset 7, -8
 3013              		.cfi_offset 14, -4
 3014 0002 00AF     		add	r7, sp, #0
 3015              		.cfi_def_cfa_register 7
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 3016              		.loc 1 2813 0
 3017 0004 024B     		ldr	r3, .L175
 3018 0006 0122     		movs	r2, #1
 3019 0008 1A70     		strb	r2, [r3]
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 3020              		.loc 1 2814 0
 3021 000a C046     		nop
 3022 000c BD46     		mov	sp, r7
 3023              		@ sp needed
 3024 000e 80BD     		pop	{r7, pc}
 3025              	.L176:
 3026              		.align	2
 3027              	.L175:
 3028 0010 00000000 		.word	CapSense_enableRawFilters
 3029              		.cfi_endproc
 3030              	.LFE70:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 104


 3031              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 3032              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 3033              		.align	2
 3034              		.global	CapSense_DisableRawDataFilters
 3035              		.code	16
 3036              		.thumb_func
 3037              		.type	CapSense_DisableRawDataFilters, %function
 3038              	CapSense_DisableRawDataFilters:
 3039              	.LFB71:
2815:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2830:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2831:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2832:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2833:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2834:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2835:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2837:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 3040              		.loc 1 2837 0
 3041              		.cfi_startproc
 3042              		@ args = 0, pretend = 0, frame = 0
 3043              		@ frame_needed = 1, uses_anonymous_args = 0
 3044 0000 80B5     		push	{r7, lr}
 3045              		.cfi_def_cfa_offset 8
 3046              		.cfi_offset 7, -8
 3047              		.cfi_offset 14, -4
 3048 0002 00AF     		add	r7, sp, #0
 3049              		.cfi_def_cfa_register 7
2838:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 3050              		.loc 1 2838 0
 3051 0004 024B     		ldr	r3, .L178
 3052 0006 0022     		movs	r2, #0
 3053 0008 1A70     		strb	r2, [r3]
2839:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 3054              		.loc 1 2839 0
 3055 000a C046     		nop
 3056 000c BD46     		mov	sp, r7
 3057              		@ sp needed
 3058 000e 80BD     		pop	{r7, pc}
 3059              	.L179:
 3060              		.align	2
 3061              	.L178:
 3062 0010 00000000 		.word	CapSense_enableRawFilters
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 105


 3063              		.cfi_endproc
 3064              	.LFE71:
 3065              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 3066              		.bss
 3067 001d 000000   		.align	2
 3068              	CapSense_debounceCounter.5528:
 3069 0020 00       		.space	1
 3070 0021 000000   		.align	2
 3071              	CapSense_centroid.5580:
 3072 0024 000000   		.space	3
 3073              		.text
 3074              	.Letext0:
 3075              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3076              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 3077              		.section	.debug_info,"",%progbits
 3078              	.Ldebug_info0:
 3079 0000 A30E0000 		.4byte	0xea3
 3080 0004 0400     		.2byte	0x4
 3081 0006 00000000 		.4byte	.Ldebug_abbrev0
 3082 000a 04       		.byte	0x4
 3083 000b 01       		.uleb128 0x1
 3084 000c 67010000 		.4byte	.LASF148
 3085 0010 0C       		.byte	0xc
 3086 0011 E9090000 		.4byte	.LASF149
 3087 0015 130B0000 		.4byte	.LASF150
 3088 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3089 001d 00000000 		.4byte	0
 3090 0021 00000000 		.4byte	.Ldebug_line0
 3091 0025 02       		.uleb128 0x2
 3092 0026 01       		.byte	0x1
 3093 0027 06       		.byte	0x6
 3094 0028 3A0A0000 		.4byte	.LASF0
 3095 002c 02       		.uleb128 0x2
 3096 002d 01       		.byte	0x1
 3097 002e 08       		.byte	0x8
 3098 002f 3A090000 		.4byte	.LASF1
 3099 0033 02       		.uleb128 0x2
 3100 0034 02       		.byte	0x2
 3101 0035 05       		.byte	0x5
 3102 0036 0B080000 		.4byte	.LASF2
 3103 003a 02       		.uleb128 0x2
 3104 003b 02       		.byte	0x2
 3105 003c 07       		.byte	0x7
 3106 003d 460A0000 		.4byte	.LASF3
 3107 0041 02       		.uleb128 0x2
 3108 0042 04       		.byte	0x4
 3109 0043 05       		.byte	0x5
 3110 0044 15080000 		.4byte	.LASF4
 3111 0048 02       		.uleb128 0x2
 3112 0049 04       		.byte	0x4
 3113 004a 07       		.byte	0x7
 3114 004b CC080000 		.4byte	.LASF5
 3115 004f 02       		.uleb128 0x2
 3116 0050 08       		.byte	0x8
 3117 0051 05       		.byte	0x5
 3118 0052 50060000 		.4byte	.LASF6
 3119 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 106


 3120 0057 08       		.byte	0x8
 3121 0058 07       		.byte	0x7
 3122 0059 B3030000 		.4byte	.LASF7
 3123 005d 03       		.uleb128 0x3
 3124 005e 04       		.byte	0x4
 3125 005f 05       		.byte	0x5
 3126 0060 696E7400 		.ascii	"int\000"
 3127 0064 02       		.uleb128 0x2
 3128 0065 04       		.byte	0x4
 3129 0066 07       		.byte	0x7
 3130 0067 3C010000 		.4byte	.LASF8
 3131 006b 04       		.uleb128 0x4
 3132 006c D60A0000 		.4byte	.LASF9
 3133 0070 02       		.byte	0x2
 3134 0071 E401     		.2byte	0x1e4
 3135 0073 2C000000 		.4byte	0x2c
 3136 0077 04       		.uleb128 0x4
 3137 0078 0F060000 		.4byte	.LASF10
 3138 007c 02       		.byte	0x2
 3139 007d E501     		.2byte	0x1e5
 3140 007f 3A000000 		.4byte	0x3a
 3141 0083 04       		.uleb128 0x4
 3142 0084 58070000 		.4byte	.LASF11
 3143 0088 02       		.byte	0x2
 3144 0089 E601     		.2byte	0x1e6
 3145 008b 48000000 		.4byte	0x48
 3146 008f 04       		.uleb128 0x4
 3147 0090 61010000 		.4byte	.LASF12
 3148 0094 02       		.byte	0x2
 3149 0095 E801     		.2byte	0x1e8
 3150 0097 33000000 		.4byte	0x33
 3151 009b 04       		.uleb128 0x4
 3152 009c 59030000 		.4byte	.LASF13
 3153 00a0 02       		.byte	0x2
 3154 00a1 E901     		.2byte	0x1e9
 3155 00a3 41000000 		.4byte	0x41
 3156 00a7 02       		.uleb128 0x2
 3157 00a8 04       		.byte	0x4
 3158 00a9 04       		.byte	0x4
 3159 00aa 53030000 		.4byte	.LASF14
 3160 00ae 02       		.uleb128 0x2
 3161 00af 08       		.byte	0x8
 3162 00b0 04       		.byte	0x4
 3163 00b1 DC0A0000 		.4byte	.LASF15
 3164 00b5 02       		.uleb128 0x2
 3165 00b6 01       		.byte	0x1
 3166 00b7 08       		.byte	0x8
 3167 00b8 D8050000 		.4byte	.LASF16
 3168 00bc 02       		.uleb128 0x2
 3169 00bd 04       		.byte	0x4
 3170 00be 07       		.byte	0x7
 3171 00bf C3080000 		.4byte	.LASF17
 3172 00c3 02       		.uleb128 0x2
 3173 00c4 08       		.byte	0x8
 3174 00c5 04       		.byte	0x4
 3175 00c6 BF070000 		.4byte	.LASF18
 3176 00ca 05       		.uleb128 0x5
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 107


 3177 00cb 5C       		.byte	0x5c
 3178 00cc 03       		.byte	0x3
 3179 00cd 2F       		.byte	0x2f
 3180 00ce E7010000 		.4byte	0x1e7
 3181 00d2 06       		.uleb128 0x6
 3182 00d3 1B060000 		.4byte	.LASF19
 3183 00d7 03       		.byte	0x3
 3184 00d8 31       		.byte	0x31
 3185 00d9 E7010000 		.4byte	0x1e7
 3186 00dd 00       		.byte	0
 3187 00de 06       		.uleb128 0x6
 3188 00df FC070000 		.4byte	.LASF20
 3189 00e3 03       		.byte	0x3
 3190 00e4 32       		.byte	0x32
 3191 00e5 E7010000 		.4byte	0x1e7
 3192 00e9 04       		.byte	0x4
 3193 00ea 06       		.uleb128 0x6
 3194 00eb C4090000 		.4byte	.LASF21
 3195 00ef 03       		.byte	0x3
 3196 00f0 33       		.byte	0x33
 3197 00f1 E7010000 		.4byte	0x1e7
 3198 00f5 08       		.byte	0x8
 3199 00f6 06       		.uleb128 0x6
 3200 00f7 2D090000 		.4byte	.LASF22
 3201 00fb 03       		.byte	0x3
 3202 00fc 34       		.byte	0x34
 3203 00fd E7010000 		.4byte	0x1e7
 3204 0101 0C       		.byte	0xc
 3205 0102 06       		.uleb128 0x6
 3206 0103 300A0000 		.4byte	.LASF23
 3207 0107 03       		.byte	0x3
 3208 0108 35       		.byte	0x35
 3209 0109 E7010000 		.4byte	0x1e7
 3210 010d 10       		.byte	0x10
 3211 010e 06       		.uleb128 0x6
 3212 010f 44080000 		.4byte	.LASF24
 3213 0113 03       		.byte	0x3
 3214 0114 36       		.byte	0x36
 3215 0115 ED010000 		.4byte	0x1ed
 3216 0119 14       		.byte	0x14
 3217 011a 06       		.uleb128 0x6
 3218 011b 65030000 		.4byte	.LASF25
 3219 011f 03       		.byte	0x3
 3220 0120 37       		.byte	0x37
 3221 0121 F8010000 		.4byte	0x1f8
 3222 0125 18       		.byte	0x18
 3223 0126 06       		.uleb128 0x6
 3224 0127 ED040000 		.4byte	.LASF26
 3225 012b 03       		.byte	0x3
 3226 012c 38       		.byte	0x38
 3227 012d E7010000 		.4byte	0x1e7
 3228 0131 1C       		.byte	0x1c
 3229 0132 06       		.uleb128 0x6
 3230 0133 9E030000 		.4byte	.LASF27
 3231 0137 03       		.byte	0x3
 3232 0138 39       		.byte	0x39
 3233 0139 E7010000 		.4byte	0x1e7
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 108


 3234 013d 20       		.byte	0x20
 3235 013e 06       		.uleb128 0x6
 3236 013f 3E020000 		.4byte	.LASF28
 3237 0143 03       		.byte	0x3
 3238 0144 3A       		.byte	0x3a
 3239 0145 E7010000 		.4byte	0x1e7
 3240 0149 24       		.byte	0x24
 3241 014a 06       		.uleb128 0x6
 3242 014b F8060000 		.4byte	.LASF29
 3243 014f 03       		.byte	0x3
 3244 0150 3B       		.byte	0x3b
 3245 0151 FE010000 		.4byte	0x1fe
 3246 0155 28       		.byte	0x28
 3247 0156 06       		.uleb128 0x6
 3248 0157 F5010000 		.4byte	.LASF30
 3249 015b 03       		.byte	0x3
 3250 015c 3C       		.byte	0x3c
 3251 015d FE010000 		.4byte	0x1fe
 3252 0161 2C       		.byte	0x2c
 3253 0162 06       		.uleb128 0x6
 3254 0163 F6080000 		.4byte	.LASF31
 3255 0167 03       		.byte	0x3
 3256 0168 3D       		.byte	0x3d
 3257 0169 FE010000 		.4byte	0x1fe
 3258 016d 30       		.byte	0x30
 3259 016e 06       		.uleb128 0x6
 3260 016f 99080000 		.4byte	.LASF32
 3261 0173 03       		.byte	0x3
 3262 0174 3E       		.byte	0x3e
 3263 0175 E7010000 		.4byte	0x1e7
 3264 0179 34       		.byte	0x34
 3265 017a 06       		.uleb128 0x6
 3266 017b 34000000 		.4byte	.LASF33
 3267 017f 03       		.byte	0x3
 3268 0180 3F       		.byte	0x3f
 3269 0181 E7010000 		.4byte	0x1e7
 3270 0185 38       		.byte	0x38
 3271 0186 06       		.uleb128 0x6
 3272 0187 00060000 		.4byte	.LASF34
 3273 018b 03       		.byte	0x3
 3274 018c 40       		.byte	0x40
 3275 018d ED010000 		.4byte	0x1ed
 3276 0191 3C       		.byte	0x3c
 3277 0192 06       		.uleb128 0x6
 3278 0193 A3020000 		.4byte	.LASF35
 3279 0197 03       		.byte	0x3
 3280 0198 41       		.byte	0x41
 3281 0199 ED010000 		.4byte	0x1ed
 3282 019d 40       		.byte	0x40
 3283 019e 06       		.uleb128 0x6
 3284 019f 81000000 		.4byte	.LASF36
 3285 01a3 03       		.byte	0x3
 3286 01a4 42       		.byte	0x42
 3287 01a5 ED010000 		.4byte	0x1ed
 3288 01a9 44       		.byte	0x44
 3289 01aa 06       		.uleb128 0x6
 3290 01ab A8060000 		.4byte	.LASF37
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 109


 3291 01af 03       		.byte	0x3
 3292 01b0 43       		.byte	0x43
 3293 01b1 13020000 		.4byte	0x213
 3294 01b5 48       		.byte	0x48
 3295 01b6 06       		.uleb128 0x6
 3296 01b7 80060000 		.4byte	.LASF38
 3297 01bb 03       		.byte	0x3
 3298 01bc 44       		.byte	0x44
 3299 01bd 24020000 		.4byte	0x224
 3300 01c1 4C       		.byte	0x4c
 3301 01c2 06       		.uleb128 0x6
 3302 01c3 03050000 		.4byte	.LASF39
 3303 01c7 03       		.byte	0x3
 3304 01c8 45       		.byte	0x45
 3305 01c9 13020000 		.4byte	0x213
 3306 01cd 50       		.byte	0x50
 3307 01ce 06       		.uleb128 0x6
 3308 01cf 91000000 		.4byte	.LASF40
 3309 01d3 03       		.byte	0x3
 3310 01d4 46       		.byte	0x46
 3311 01d5 3E020000 		.4byte	0x23e
 3312 01d9 54       		.byte	0x54
 3313 01da 06       		.uleb128 0x6
 3314 01db 770A0000 		.4byte	.LASF41
 3315 01df 03       		.byte	0x3
 3316 01e0 47       		.byte	0x47
 3317 01e1 59020000 		.4byte	0x259
 3318 01e5 58       		.byte	0x58
 3319 01e6 00       		.byte	0
 3320 01e7 07       		.uleb128 0x7
 3321 01e8 04       		.byte	0x4
 3322 01e9 6B000000 		.4byte	0x6b
 3323 01ed 07       		.uleb128 0x7
 3324 01ee 04       		.byte	0x4
 3325 01ef F3010000 		.4byte	0x1f3
 3326 01f3 08       		.uleb128 0x8
 3327 01f4 6B000000 		.4byte	0x6b
 3328 01f8 07       		.uleb128 0x7
 3329 01f9 04       		.byte	0x4
 3330 01fa 83000000 		.4byte	0x83
 3331 01fe 07       		.uleb128 0x7
 3332 01ff 04       		.byte	0x4
 3333 0200 77000000 		.4byte	0x77
 3334 0204 09       		.uleb128 0x9
 3335 0205 77000000 		.4byte	0x77
 3336 0209 13020000 		.4byte	0x213
 3337 020d 0A       		.uleb128 0xa
 3338 020e 83000000 		.4byte	0x83
 3339 0212 00       		.byte	0
 3340 0213 07       		.uleb128 0x7
 3341 0214 04       		.byte	0x4
 3342 0215 04020000 		.4byte	0x204
 3343 0219 0B       		.uleb128 0xb
 3344 021a 24020000 		.4byte	0x224
 3345 021e 0A       		.uleb128 0xa
 3346 021f 83000000 		.4byte	0x83
 3347 0223 00       		.byte	0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 110


 3348 0224 07       		.uleb128 0x7
 3349 0225 04       		.byte	0x4
 3350 0226 19020000 		.4byte	0x219
 3351 022a 09       		.uleb128 0x9
 3352 022b 83000000 		.4byte	0x83
 3353 022f 3E020000 		.4byte	0x23e
 3354 0233 0A       		.uleb128 0xa
 3355 0234 ED010000 		.4byte	0x1ed
 3356 0238 0A       		.uleb128 0xa
 3357 0239 83000000 		.4byte	0x83
 3358 023d 00       		.byte	0
 3359 023e 07       		.uleb128 0x7
 3360 023f 04       		.byte	0x4
 3361 0240 2A020000 		.4byte	0x22a
 3362 0244 0B       		.uleb128 0xb
 3363 0245 59020000 		.4byte	0x259
 3364 0249 0A       		.uleb128 0xa
 3365 024a E7010000 		.4byte	0x1e7
 3366 024e 0A       		.uleb128 0xa
 3367 024f 83000000 		.4byte	0x83
 3368 0253 0A       		.uleb128 0xa
 3369 0254 83000000 		.4byte	0x83
 3370 0258 00       		.byte	0
 3371 0259 07       		.uleb128 0x7
 3372 025a 04       		.byte	0x4
 3373 025b 44020000 		.4byte	0x244
 3374 025f 0C       		.uleb128 0xc
 3375 0260 15010000 		.4byte	.LASF42
 3376 0264 03       		.byte	0x3
 3377 0265 48       		.byte	0x48
 3378 0266 CA000000 		.4byte	0xca
 3379 026a 05       		.uleb128 0x5
 3380 026b 0C       		.byte	0xc
 3381 026c 03       		.byte	0x3
 3382 026d 4A       		.byte	0x4a
 3383 026e BB020000 		.4byte	0x2bb
 3384 0272 06       		.uleb128 0x6
 3385 0273 99050000 		.4byte	.LASF43
 3386 0277 03       		.byte	0x3
 3387 0278 4C       		.byte	0x4c
 3388 0279 6B000000 		.4byte	0x6b
 3389 027d 00       		.byte	0
 3390 027e 06       		.uleb128 0x6
 3391 027f B0020000 		.4byte	.LASF44
 3392 0283 03       		.byte	0x3
 3393 0284 4D       		.byte	0x4d
 3394 0285 6B000000 		.4byte	0x6b
 3395 0289 01       		.byte	0x1
 3396 028a 06       		.uleb128 0x6
 3397 028b 49010000 		.4byte	.LASF45
 3398 028f 03       		.byte	0x3
 3399 0290 4E       		.byte	0x4e
 3400 0291 6B000000 		.4byte	0x6b
 3401 0295 02       		.byte	0x2
 3402 0296 06       		.uleb128 0x6
 3403 0297 B2050000 		.4byte	.LASF46
 3404 029b 03       		.byte	0x3
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 111


 3405 029c 4F       		.byte	0x4f
 3406 029d 77000000 		.4byte	0x77
 3407 02a1 04       		.byte	0x4
 3408 02a2 06       		.uleb128 0x6
 3409 02a3 D6070000 		.4byte	.LASF47
 3410 02a7 03       		.byte	0x3
 3411 02a8 50       		.byte	0x50
 3412 02a9 77000000 		.4byte	0x77
 3413 02ad 06       		.byte	0x6
 3414 02ae 06       		.uleb128 0x6
 3415 02af DE080000 		.4byte	.LASF48
 3416 02b3 03       		.byte	0x3
 3417 02b4 51       		.byte	0x51
 3418 02b5 BB020000 		.4byte	0x2bb
 3419 02b9 08       		.byte	0x8
 3420 02ba 00       		.byte	0
 3421 02bb 07       		.uleb128 0x7
 3422 02bc 04       		.byte	0x4
 3423 02bd C1020000 		.4byte	0x2c1
 3424 02c1 08       		.uleb128 0x8
 3425 02c2 5F020000 		.4byte	0x25f
 3426 02c6 0C       		.uleb128 0xc
 3427 02c7 35040000 		.4byte	.LASF49
 3428 02cb 03       		.byte	0x3
 3429 02cc 52       		.byte	0x52
 3430 02cd 6A020000 		.4byte	0x26a
 3431 02d1 0D       		.uleb128 0xd
 3432 02d2 D0060000 		.4byte	.LASF50
 3433 02d6 01       		.byte	0x1
 3434 02d7 8E       		.byte	0x8e
 3435 02d8 00000000 		.4byte	.LFB34
 3436 02dc 6C000000 		.4byte	.LFE34-.LFB34
 3437 02e0 01       		.uleb128 0x1
 3438 02e1 9C       		.byte	0x9c
 3439 02e2 F5020000 		.4byte	0x2f5
 3440 02e6 0E       		.uleb128 0xe
 3441 02e7 AB050000 		.4byte	.LASF52
 3442 02eb 01       		.byte	0x1
 3443 02ec 8E       		.byte	0x8e
 3444 02ed 83000000 		.4byte	0x83
 3445 02f1 02       		.uleb128 0x2
 3446 02f2 91       		.byte	0x91
 3447 02f3 74       		.sleb128 -12
 3448 02f4 00       		.byte	0
 3449 02f5 0F       		.uleb128 0xf
 3450 02f6 60020000 		.4byte	.LASF51
 3451 02fa 01       		.byte	0x1
 3452 02fb D9       		.byte	0xd9
 3453 02fc 00000000 		.4byte	.LFB35
 3454 0300 2A000000 		.4byte	.LFE35-.LFB35
 3455 0304 01       		.uleb128 0x1
 3456 0305 9C       		.byte	0x9c
 3457 0306 19030000 		.4byte	0x319
 3458 030a 0E       		.uleb128 0xe
 3459 030b AB050000 		.4byte	.LASF52
 3460 030f 01       		.byte	0x1
 3461 0310 D9       		.byte	0xd9
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 112


 3462 0311 83000000 		.4byte	0x83
 3463 0315 02       		.uleb128 0x2
 3464 0316 91       		.byte	0x91
 3465 0317 74       		.sleb128 -12
 3466 0318 00       		.byte	0
 3467 0319 0F       		.uleb128 0xf
 3468 031a 6E090000 		.4byte	.LASF53
 3469 031e 01       		.byte	0x1
 3470 031f FE       		.byte	0xfe
 3471 0320 00000000 		.4byte	.LFB36
 3472 0324 28000000 		.4byte	.LFE36-.LFB36
 3473 0328 01       		.uleb128 0x1
 3474 0329 9C       		.byte	0x9c
 3475 032a 3C030000 		.4byte	0x33c
 3476 032e 10       		.uleb128 0x10
 3477 032f 6900     		.ascii	"i\000"
 3478 0331 01       		.byte	0x1
 3479 0332 0001     		.2byte	0x100
 3480 0334 83000000 		.4byte	0x83
 3481 0338 02       		.uleb128 0x2
 3482 0339 91       		.byte	0x91
 3483 033a 74       		.sleb128 -12
 3484 033b 00       		.byte	0
 3485 033c 11       		.uleb128 0x11
 3486 033d 02020000 		.4byte	.LASF54
 3487 0341 01       		.byte	0x1
 3488 0342 2101     		.2byte	0x121
 3489 0344 00000000 		.4byte	.LFB37
 3490 0348 50000000 		.4byte	.LFE37-.LFB37
 3491 034c 01       		.uleb128 0x1
 3492 034d 9C       		.byte	0x9c
 3493 034e 6F030000 		.4byte	0x36f
 3494 0352 10       		.uleb128 0x10
 3495 0353 6900     		.ascii	"i\000"
 3496 0355 01       		.byte	0x1
 3497 0356 2301     		.2byte	0x123
 3498 0358 83000000 		.4byte	0x83
 3499 035c 02       		.uleb128 0x2
 3500 035d 91       		.byte	0x91
 3501 035e 74       		.sleb128 -12
 3502 035f 12       		.uleb128 0x12
 3503 0360 F8000000 		.4byte	.LASF55
 3504 0364 01       		.byte	0x1
 3505 0365 2401     		.2byte	0x124
 3506 0367 83000000 		.4byte	0x83
 3507 036b 02       		.uleb128 0x2
 3508 036c 91       		.byte	0x91
 3509 036d 70       		.sleb128 -16
 3510 036e 00       		.byte	0
 3511 036f 11       		.uleb128 0x11
 3512 0370 5E000000 		.4byte	.LASF56
 3513 0374 01       		.byte	0x1
 3514 0375 6201     		.2byte	0x162
 3515 0377 00000000 		.4byte	.LFB38
 3516 037b 5C020000 		.4byte	.LFE38-.LFB38
 3517 037f 01       		.uleb128 0x1
 3518 0380 9C       		.byte	0x9c
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 113


 3519 0381 EF030000 		.4byte	0x3ef
 3520 0385 13       		.uleb128 0x13
 3521 0386 AB050000 		.4byte	.LASF52
 3522 038a 01       		.byte	0x1
 3523 038b 6201     		.2byte	0x162
 3524 038d 83000000 		.4byte	0x83
 3525 0391 02       		.uleb128 0x2
 3526 0392 91       		.byte	0x91
 3527 0393 5C       		.sleb128 -36
 3528 0394 12       		.uleb128 0x12
 3529 0395 FE040000 		.4byte	.LASF57
 3530 0399 01       		.byte	0x1
 3531 039a 6401     		.2byte	0x164
 3532 039c 83000000 		.4byte	0x83
 3533 03a0 02       		.uleb128 0x2
 3534 03a1 91       		.byte	0x91
 3535 03a2 60       		.sleb128 -32
 3536 03a3 12       		.uleb128 0x12
 3537 03a4 E1040000 		.4byte	.LASF58
 3538 03a8 01       		.byte	0x1
 3539 03a9 6501     		.2byte	0x165
 3540 03ab 83000000 		.4byte	0x83
 3541 03af 02       		.uleb128 0x2
 3542 03b0 91       		.byte	0x91
 3543 03b1 6C       		.sleb128 -20
 3544 03b2 12       		.uleb128 0x12
 3545 03b3 9C0A0000 		.4byte	.LASF59
 3546 03b7 01       		.byte	0x1
 3547 03b8 6601     		.2byte	0x166
 3548 03ba 77000000 		.4byte	0x77
 3549 03be 02       		.uleb128 0x2
 3550 03bf 91       		.byte	0x91
 3551 03c0 6A       		.sleb128 -22
 3552 03c1 12       		.uleb128 0x12
 3553 03c2 1F050000 		.4byte	.LASF60
 3554 03c6 01       		.byte	0x1
 3555 03c7 6701     		.2byte	0x167
 3556 03c9 77000000 		.4byte	0x77
 3557 03cd 02       		.uleb128 0x2
 3558 03ce 91       		.byte	0x91
 3559 03cf 68       		.sleb128 -24
 3560 03d0 12       		.uleb128 0x12
 3561 03d1 E4030000 		.4byte	.LASF61
 3562 03d5 01       		.byte	0x1
 3563 03d6 6801     		.2byte	0x168
 3564 03d8 6B000000 		.4byte	0x6b
 3565 03dc 02       		.uleb128 0x2
 3566 03dd 91       		.byte	0x91
 3567 03de 67       		.sleb128 -25
 3568 03df 12       		.uleb128 0x12
 3569 03e0 E7080000 		.4byte	.LASF62
 3570 03e4 01       		.byte	0x1
 3571 03e5 6901     		.2byte	0x169
 3572 03e7 6B000000 		.4byte	0x6b
 3573 03eb 02       		.uleb128 0x2
 3574 03ec 91       		.byte	0x91
 3575 03ed 66       		.sleb128 -26
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 114


 3576 03ee 00       		.byte	0
 3577 03ef 11       		.uleb128 0x11
 3578 03f0 B2060000 		.4byte	.LASF63
 3579 03f4 01       		.byte	0x1
 3580 03f5 2202     		.2byte	0x222
 3581 03f7 00000000 		.4byte	.LFB39
 3582 03fb 20000000 		.4byte	.LFE39-.LFB39
 3583 03ff 01       		.uleb128 0x1
 3584 0400 9C       		.byte	0x9c
 3585 0401 15040000 		.4byte	0x415
 3586 0405 13       		.uleb128 0x13
 3587 0406 AB050000 		.4byte	.LASF52
 3588 040a 01       		.byte	0x1
 3589 040b 2202     		.2byte	0x222
 3590 040d 83000000 		.4byte	0x83
 3591 0411 02       		.uleb128 0x2
 3592 0412 91       		.byte	0x91
 3593 0413 74       		.sleb128 -12
 3594 0414 00       		.byte	0
 3595 0415 11       		.uleb128 0x11
 3596 0416 BF000000 		.4byte	.LASF64
 3597 041a 01       		.byte	0x1
 3598 041b 5802     		.2byte	0x258
 3599 041d 00000000 		.4byte	.LFB40
 3600 0421 44000000 		.4byte	.LFE40-.LFB40
 3601 0425 01       		.uleb128 0x1
 3602 0426 9C       		.byte	0x9c
 3603 0427 48040000 		.4byte	0x448
 3604 042b 10       		.uleb128 0x10
 3605 042c 6900     		.ascii	"i\000"
 3606 042e 01       		.byte	0x1
 3607 042f 5A02     		.2byte	0x25a
 3608 0431 83000000 		.4byte	0x83
 3609 0435 02       		.uleb128 0x2
 3610 0436 91       		.byte	0x91
 3611 0437 74       		.sleb128 -12
 3612 0438 12       		.uleb128 0x12
 3613 0439 F8000000 		.4byte	.LASF55
 3614 043d 01       		.byte	0x1
 3615 043e 5B02     		.2byte	0x25b
 3616 0440 83000000 		.4byte	0x83
 3617 0444 02       		.uleb128 0x2
 3618 0445 91       		.byte	0x91
 3619 0446 70       		.sleb128 -16
 3620 0447 00       		.byte	0
 3621 0448 11       		.uleb128 0x11
 3622 0449 21030000 		.4byte	.LASF65
 3623 044d 01       		.byte	0x1
 3624 044e 8502     		.2byte	0x285
 3625 0450 00000000 		.4byte	.LFB41
 3626 0454 58000000 		.4byte	.LFE41-.LFB41
 3627 0458 01       		.uleb128 0x1
 3628 0459 9C       		.byte	0x9c
 3629 045a B7040000 		.4byte	0x4b7
 3630 045e 13       		.uleb128 0x13
 3631 045f E4030000 		.4byte	.LASF61
 3632 0463 01       		.byte	0x1
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 115


 3633 0464 8502     		.2byte	0x285
 3634 0466 83000000 		.4byte	0x83
 3635 046a 02       		.uleb128 0x2
 3636 046b 91       		.byte	0x91
 3637 046c 5C       		.sleb128 -36
 3638 046d 12       		.uleb128 0x12
 3639 046e 2F050000 		.4byte	.LASF66
 3640 0472 01       		.byte	0x1
 3641 0473 8702     		.2byte	0x287
 3642 0475 83000000 		.4byte	0x83
 3643 0479 02       		.uleb128 0x2
 3644 047a 91       		.byte	0x91
 3645 047b 70       		.sleb128 -16
 3646 047c 12       		.uleb128 0x12
 3647 047d 1E080000 		.4byte	.LASF67
 3648 0481 01       		.byte	0x1
 3649 0482 8802     		.2byte	0x288
 3650 0484 83000000 		.4byte	0x83
 3651 0488 02       		.uleb128 0x2
 3652 0489 91       		.byte	0x91
 3653 048a 6C       		.sleb128 -20
 3654 048b 12       		.uleb128 0x12
 3655 048c CB070000 		.4byte	.LASF68
 3656 0490 01       		.byte	0x1
 3657 0491 8902     		.2byte	0x289
 3658 0493 83000000 		.4byte	0x83
 3659 0497 02       		.uleb128 0x2
 3660 0498 91       		.byte	0x91
 3661 0499 68       		.sleb128 -24
 3662 049a 10       		.uleb128 0x10
 3663 049b 6900     		.ascii	"i\000"
 3664 049d 01       		.byte	0x1
 3665 049e 8A02     		.2byte	0x28a
 3666 04a0 83000000 		.4byte	0x83
 3667 04a4 02       		.uleb128 0x2
 3668 04a5 91       		.byte	0x91
 3669 04a6 74       		.sleb128 -12
 3670 04a7 12       		.uleb128 0x12
 3671 04a8 F8000000 		.4byte	.LASF55
 3672 04ac 01       		.byte	0x1
 3673 04ad 8B02     		.2byte	0x28b
 3674 04af 83000000 		.4byte	0x83
 3675 04b3 02       		.uleb128 0x2
 3676 04b4 91       		.byte	0x91
 3677 04b5 64       		.sleb128 -28
 3678 04b6 00       		.byte	0
 3679 04b7 14       		.uleb128 0x14
 3680 04b8 8E090000 		.4byte	.LASF71
 3681 04bc 01       		.byte	0x1
 3682 04bd B602     		.2byte	0x2b6
 3683 04bf 77000000 		.4byte	0x77
 3684 04c3 00000000 		.4byte	.LFB42
 3685 04c7 1C000000 		.4byte	.LFE42-.LFB42
 3686 04cb 01       		.uleb128 0x1
 3687 04cc 9C       		.byte	0x9c
 3688 04cd E1040000 		.4byte	0x4e1
 3689 04d1 13       		.uleb128 0x13
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 116


 3690 04d2 AB050000 		.4byte	.LASF52
 3691 04d6 01       		.byte	0x1
 3692 04d7 B602     		.2byte	0x2b6
 3693 04d9 83000000 		.4byte	0x83
 3694 04dd 02       		.uleb128 0x2
 3695 04de 91       		.byte	0x91
 3696 04df 74       		.sleb128 -12
 3697 04e0 00       		.byte	0
 3698 04e1 15       		.uleb128 0x15
 3699 04e2 8A020000 		.4byte	.LASF69
 3700 04e6 01       		.byte	0x1
 3701 04e7 D102     		.2byte	0x2d1
 3702 04e9 00000000 		.4byte	.LFB43
 3703 04ed 28000000 		.4byte	.LFE43-.LFB43
 3704 04f1 01       		.uleb128 0x1
 3705 04f2 9C       		.byte	0x9c
 3706 04f3 16050000 		.4byte	0x516
 3707 04f7 13       		.uleb128 0x13
 3708 04f8 AB050000 		.4byte	.LASF52
 3709 04fc 01       		.byte	0x1
 3710 04fd D102     		.2byte	0x2d1
 3711 04ff 83000000 		.4byte	0x83
 3712 0503 02       		.uleb128 0x2
 3713 0504 91       		.byte	0x91
 3714 0505 74       		.sleb128 -12
 3715 0506 13       		.uleb128 0x13
 3716 0507 16060000 		.4byte	.LASF70
 3717 050b 01       		.byte	0x1
 3718 050c D102     		.2byte	0x2d1
 3719 050e 77000000 		.4byte	0x77
 3720 0512 02       		.uleb128 0x2
 3721 0513 91       		.byte	0x91
 3722 0514 72       		.sleb128 -14
 3723 0515 00       		.byte	0
 3724 0516 14       		.uleb128 0x14
 3725 0517 C7040000 		.4byte	.LASF72
 3726 051b 01       		.byte	0x1
 3727 051c EC02     		.2byte	0x2ec
 3728 051e 6B000000 		.4byte	0x6b
 3729 0522 00000000 		.4byte	.LFB44
 3730 0526 1C000000 		.4byte	.LFE44-.LFB44
 3731 052a 01       		.uleb128 0x1
 3732 052b 9C       		.byte	0x9c
 3733 052c 40050000 		.4byte	0x540
 3734 0530 13       		.uleb128 0x13
 3735 0531 AB050000 		.4byte	.LASF52
 3736 0535 01       		.byte	0x1
 3737 0536 EC02     		.2byte	0x2ec
 3738 0538 83000000 		.4byte	0x83
 3739 053c 02       		.uleb128 0x2
 3740 053d 91       		.byte	0x91
 3741 053e 74       		.sleb128 -12
 3742 053f 00       		.byte	0
 3743 0540 15       		.uleb128 0x15
 3744 0541 C0020000 		.4byte	.LASF73
 3745 0545 01       		.byte	0x1
 3746 0546 0703     		.2byte	0x307
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 117


 3747 0548 00000000 		.4byte	.LFB45
 3748 054c 28000000 		.4byte	.LFE45-.LFB45
 3749 0550 01       		.uleb128 0x1
 3750 0551 9C       		.byte	0x9c
 3751 0552 75050000 		.4byte	0x575
 3752 0556 13       		.uleb128 0x13
 3753 0557 AB050000 		.4byte	.LASF52
 3754 055b 01       		.byte	0x1
 3755 055c 0703     		.2byte	0x307
 3756 055e 83000000 		.4byte	0x83
 3757 0562 02       		.uleb128 0x2
 3758 0563 91       		.byte	0x91
 3759 0564 74       		.sleb128 -12
 3760 0565 13       		.uleb128 0x13
 3761 0566 A4040000 		.4byte	.LASF74
 3762 056a 01       		.byte	0x1
 3763 056b 0703     		.2byte	0x307
 3764 056d 6B000000 		.4byte	0x6b
 3765 0571 02       		.uleb128 0x2
 3766 0572 91       		.byte	0x91
 3767 0573 73       		.sleb128 -13
 3768 0574 00       		.byte	0
 3769 0575 14       		.uleb128 0x14
 3770 0576 99070000 		.4byte	.LASF75
 3771 057a 01       		.byte	0x1
 3772 057b 2203     		.2byte	0x322
 3773 057d 6B000000 		.4byte	0x6b
 3774 0581 00000000 		.4byte	.LFB46
 3775 0585 1C000000 		.4byte	.LFE46-.LFB46
 3776 0589 01       		.uleb128 0x1
 3777 058a 9C       		.byte	0x9c
 3778 058b 9F050000 		.4byte	0x59f
 3779 058f 13       		.uleb128 0x13
 3780 0590 E4030000 		.4byte	.LASF61
 3781 0594 01       		.byte	0x1
 3782 0595 2203     		.2byte	0x322
 3783 0597 83000000 		.4byte	0x83
 3784 059b 02       		.uleb128 0x2
 3785 059c 91       		.byte	0x91
 3786 059d 74       		.sleb128 -12
 3787 059e 00       		.byte	0
 3788 059f 14       		.uleb128 0x14
 3789 05a0 83030000 		.4byte	.LASF76
 3790 05a4 01       		.byte	0x1
 3791 05a5 3D03     		.2byte	0x33d
 3792 05a7 6B000000 		.4byte	0x6b
 3793 05ab 00000000 		.4byte	.LFB47
 3794 05af 1C000000 		.4byte	.LFE47-.LFB47
 3795 05b3 01       		.uleb128 0x1
 3796 05b4 9C       		.byte	0x9c
 3797 05b5 C9050000 		.4byte	0x5c9
 3798 05b9 13       		.uleb128 0x13
 3799 05ba E4030000 		.4byte	.LASF61
 3800 05be 01       		.byte	0x1
 3801 05bf 3D03     		.2byte	0x33d
 3802 05c1 83000000 		.4byte	0x83
 3803 05c5 02       		.uleb128 0x2
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 118


 3804 05c6 91       		.byte	0x91
 3805 05c7 74       		.sleb128 -12
 3806 05c8 00       		.byte	0
 3807 05c9 14       		.uleb128 0x14
 3808 05ca AA040000 		.4byte	.LASF77
 3809 05ce 01       		.byte	0x1
 3810 05cf 5903     		.2byte	0x359
 3811 05d1 6B000000 		.4byte	0x6b
 3812 05d5 00000000 		.4byte	.LFB48
 3813 05d9 1C000000 		.4byte	.LFE48-.LFB48
 3814 05dd 01       		.uleb128 0x1
 3815 05de 9C       		.byte	0x9c
 3816 05df F3050000 		.4byte	0x5f3
 3817 05e3 13       		.uleb128 0x13
 3818 05e4 E4030000 		.4byte	.LASF61
 3819 05e8 01       		.byte	0x1
 3820 05e9 5903     		.2byte	0x359
 3821 05eb 83000000 		.4byte	0x83
 3822 05ef 02       		.uleb128 0x2
 3823 05f0 91       		.byte	0x91
 3824 05f1 74       		.sleb128 -12
 3825 05f2 00       		.byte	0
 3826 05f3 14       		.uleb128 0x14
 3827 05f4 DD050000 		.4byte	.LASF78
 3828 05f8 01       		.byte	0x1
 3829 05f9 7503     		.2byte	0x375
 3830 05fb 6B000000 		.4byte	0x6b
 3831 05ff 00000000 		.4byte	.LFB49
 3832 0603 1C000000 		.4byte	.LFE49-.LFB49
 3833 0607 01       		.uleb128 0x1
 3834 0608 9C       		.byte	0x9c
 3835 0609 1D060000 		.4byte	0x61d
 3836 060d 13       		.uleb128 0x13
 3837 060e E4030000 		.4byte	.LASF61
 3838 0612 01       		.byte	0x1
 3839 0613 7503     		.2byte	0x375
 3840 0615 83000000 		.4byte	0x83
 3841 0619 02       		.uleb128 0x2
 3842 061a 91       		.byte	0x91
 3843 061b 74       		.sleb128 -12
 3844 061c 00       		.byte	0
 3845 061d 15       		.uleb128 0x15
 3846 061e 69040000 		.4byte	.LASF79
 3847 0622 01       		.byte	0x1
 3848 0623 9603     		.2byte	0x396
 3849 0625 00000000 		.4byte	.LFB50
 3850 0629 28000000 		.4byte	.LFE50-.LFB50
 3851 062d 01       		.uleb128 0x1
 3852 062e 9C       		.byte	0x9c
 3853 062f 52060000 		.4byte	0x652
 3854 0633 13       		.uleb128 0x13
 3855 0634 E4030000 		.4byte	.LASF61
 3856 0638 01       		.byte	0x1
 3857 0639 9603     		.2byte	0x396
 3858 063b 83000000 		.4byte	0x83
 3859 063f 02       		.uleb128 0x2
 3860 0640 91       		.byte	0x91
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 119


 3861 0641 74       		.sleb128 -12
 3862 0642 13       		.uleb128 0x13
 3863 0643 A4040000 		.4byte	.LASF74
 3864 0647 01       		.byte	0x1
 3865 0648 9603     		.2byte	0x396
 3866 064a 6B000000 		.4byte	0x6b
 3867 064e 02       		.uleb128 0x2
 3868 064f 91       		.byte	0x91
 3869 0650 73       		.sleb128 -13
 3870 0651 00       		.byte	0
 3871 0652 15       		.uleb128 0x15
 3872 0653 06030000 		.4byte	.LASF80
 3873 0657 01       		.byte	0x1
 3874 0658 B203     		.2byte	0x3b2
 3875 065a 00000000 		.4byte	.LFB51
 3876 065e 28000000 		.4byte	.LFE51-.LFB51
 3877 0662 01       		.uleb128 0x1
 3878 0663 9C       		.byte	0x9c
 3879 0664 87060000 		.4byte	0x687
 3880 0668 13       		.uleb128 0x13
 3881 0669 E4030000 		.4byte	.LASF61
 3882 066d 01       		.byte	0x1
 3883 066e B203     		.2byte	0x3b2
 3884 0670 83000000 		.4byte	0x83
 3885 0674 02       		.uleb128 0x2
 3886 0675 91       		.byte	0x91
 3887 0676 74       		.sleb128 -12
 3888 0677 13       		.uleb128 0x13
 3889 0678 A4040000 		.4byte	.LASF74
 3890 067c 01       		.byte	0x1
 3891 067d B203     		.2byte	0x3b2
 3892 067f 6B000000 		.4byte	0x6b
 3893 0683 02       		.uleb128 0x2
 3894 0684 91       		.byte	0x91
 3895 0685 73       		.sleb128 -13
 3896 0686 00       		.byte	0
 3897 0687 15       		.uleb128 0x15
 3898 0688 7C070000 		.4byte	.LASF81
 3899 068c 01       		.byte	0x1
 3900 068d CE03     		.2byte	0x3ce
 3901 068f 00000000 		.4byte	.LFB52
 3902 0693 28000000 		.4byte	.LFE52-.LFB52
 3903 0697 01       		.uleb128 0x1
 3904 0698 9C       		.byte	0x9c
 3905 0699 BC060000 		.4byte	0x6bc
 3906 069d 13       		.uleb128 0x13
 3907 069e E4030000 		.4byte	.LASF61
 3908 06a2 01       		.byte	0x1
 3909 06a3 CE03     		.2byte	0x3ce
 3910 06a5 83000000 		.4byte	0x83
 3911 06a9 02       		.uleb128 0x2
 3912 06aa 91       		.byte	0x91
 3913 06ab 74       		.sleb128 -12
 3914 06ac 13       		.uleb128 0x13
 3915 06ad A4040000 		.4byte	.LASF74
 3916 06b1 01       		.byte	0x1
 3917 06b2 CE03     		.2byte	0x3ce
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 120


 3918 06b4 6B000000 		.4byte	0x6b
 3919 06b8 02       		.uleb128 0x2
 3920 06b9 91       		.byte	0x91
 3921 06ba 73       		.sleb128 -13
 3922 06bb 00       		.byte	0
 3923 06bc 15       		.uleb128 0x15
 3924 06bd 35070000 		.4byte	.LASF82
 3925 06c1 01       		.byte	0x1
 3926 06c2 EB03     		.2byte	0x3eb
 3927 06c4 00000000 		.4byte	.LFB53
 3928 06c8 28000000 		.4byte	.LFE53-.LFB53
 3929 06cc 01       		.uleb128 0x1
 3930 06cd 9C       		.byte	0x9c
 3931 06ce F1060000 		.4byte	0x6f1
 3932 06d2 13       		.uleb128 0x13
 3933 06d3 E4030000 		.4byte	.LASF61
 3934 06d7 01       		.byte	0x1
 3935 06d8 EB03     		.2byte	0x3eb
 3936 06da 83000000 		.4byte	0x83
 3937 06de 02       		.uleb128 0x2
 3938 06df 91       		.byte	0x91
 3939 06e0 74       		.sleb128 -12
 3940 06e1 13       		.uleb128 0x13
 3941 06e2 A4040000 		.4byte	.LASF74
 3942 06e6 01       		.byte	0x1
 3943 06e7 EB03     		.2byte	0x3eb
 3944 06e9 6B000000 		.4byte	0x6b
 3945 06ed 02       		.uleb128 0x2
 3946 06ee 91       		.byte	0x91
 3947 06ef 73       		.sleb128 -13
 3948 06f0 00       		.byte	0
 3949 06f1 15       		.uleb128 0x15
 3950 06f2 08090000 		.4byte	.LASF83
 3951 06f6 01       		.byte	0x1
 3952 06f7 0704     		.2byte	0x407
 3953 06f9 00000000 		.4byte	.LFB54
 3954 06fd 28000000 		.4byte	.LFE54-.LFB54
 3955 0701 01       		.uleb128 0x1
 3956 0702 9C       		.byte	0x9c
 3957 0703 26070000 		.4byte	0x726
 3958 0707 13       		.uleb128 0x13
 3959 0708 E4030000 		.4byte	.LASF61
 3960 070c 01       		.byte	0x1
 3961 070d 0704     		.2byte	0x407
 3962 070f 83000000 		.4byte	0x83
 3963 0713 02       		.uleb128 0x2
 3964 0714 91       		.byte	0x91
 3965 0715 74       		.sleb128 -12
 3966 0716 13       		.uleb128 0x13
 3967 0717 A4040000 		.4byte	.LASF74
 3968 071b 01       		.byte	0x1
 3969 071c 0704     		.2byte	0x407
 3970 071e 6B000000 		.4byte	0x6b
 3971 0722 02       		.uleb128 0x2
 3972 0723 91       		.byte	0x91
 3973 0724 73       		.sleb128 -13
 3974 0725 00       		.byte	0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 121


 3975 0726 15       		.uleb128 0x15
 3976 0727 A7090000 		.4byte	.LASF84
 3977 072b 01       		.byte	0x1
 3978 072c 2304     		.2byte	0x423
 3979 072e 00000000 		.4byte	.LFB55
 3980 0732 28000000 		.4byte	.LFE55-.LFB55
 3981 0736 01       		.uleb128 0x1
 3982 0737 9C       		.byte	0x9c
 3983 0738 5B070000 		.4byte	0x75b
 3984 073c 13       		.uleb128 0x13
 3985 073d AB050000 		.4byte	.LASF52
 3986 0741 01       		.byte	0x1
 3987 0742 2304     		.2byte	0x423
 3988 0744 83000000 		.4byte	0x83
 3989 0748 02       		.uleb128 0x2
 3990 0749 91       		.byte	0x91
 3991 074a 74       		.sleb128 -12
 3992 074b 13       		.uleb128 0x13
 3993 074c A4040000 		.4byte	.LASF74
 3994 0750 01       		.byte	0x1
 3995 0751 2304     		.2byte	0x423
 3996 0753 6B000000 		.4byte	0x6b
 3997 0757 02       		.uleb128 0x2
 3998 0758 91       		.byte	0x91
 3999 0759 73       		.sleb128 -13
 4000 075a 00       		.byte	0
 4001 075b 16       		.uleb128 0x16
 4002 075c 8B060000 		.4byte	.LASF85
 4003 0760 01       		.byte	0x1
 4004 0761 5104     		.2byte	0x451
 4005 0763 83000000 		.4byte	0x83
 4006 0767 00000000 		.4byte	.LFB56
 4007 076b 38010000 		.4byte	.LFE56-.LFB56
 4008 076f 01       		.uleb128 0x1
 4009 0770 9C       		.byte	0x9c
 4010 0771 E2070000 		.4byte	0x7e2
 4011 0775 13       		.uleb128 0x13
 4012 0776 AB050000 		.4byte	.LASF52
 4013 077a 01       		.byte	0x1
 4014 077b 5104     		.2byte	0x451
 4015 077d 83000000 		.4byte	0x83
 4016 0781 02       		.uleb128 0x2
 4017 0782 91       		.byte	0x91
 4018 0783 6C       		.sleb128 -20
 4019 0784 12       		.uleb128 0x12
 4020 0785 E4030000 		.4byte	.LASF61
 4021 0789 01       		.byte	0x1
 4022 078a 5304     		.2byte	0x453
 4023 078c 6B000000 		.4byte	0x6b
 4024 0790 02       		.uleb128 0x2
 4025 0791 91       		.byte	0x91
 4026 0792 77       		.sleb128 -9
 4027 0793 12       		.uleb128 0x12
 4028 0794 77060000 		.4byte	.LASF86
 4029 0798 01       		.byte	0x1
 4030 0799 5404     		.2byte	0x454
 4031 079b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 122


 4032 079f 02       		.uleb128 0x2
 4033 07a0 91       		.byte	0x91
 4034 07a1 74       		.sleb128 -12
 4035 07a2 12       		.uleb128 0x12
 4036 07a3 60090000 		.4byte	.LASF87
 4037 07a7 01       		.byte	0x1
 4038 07a8 5504     		.2byte	0x455
 4039 07aa 6B000000 		.4byte	0x6b
 4040 07ae 02       		.uleb128 0x2
 4041 07af 91       		.byte	0x91
 4042 07b0 73       		.sleb128 -13
 4043 07b1 12       		.uleb128 0x12
 4044 07b2 1D090000 		.4byte	.LASF88
 4045 07b6 01       		.byte	0x1
 4046 07b7 5704     		.2byte	0x457
 4047 07b9 6B000000 		.4byte	0x6b
 4048 07bd 02       		.uleb128 0x2
 4049 07be 91       		.byte	0x91
 4050 07bf 76       		.sleb128 -10
 4051 07c0 12       		.uleb128 0x12
 4052 07c1 14050000 		.4byte	.LASF89
 4053 07c5 01       		.byte	0x1
 4054 07c6 5804     		.2byte	0x458
 4055 07c8 6B000000 		.4byte	0x6b
 4056 07cc 02       		.uleb128 0x2
 4057 07cd 91       		.byte	0x91
 4058 07ce 75       		.sleb128 -11
 4059 07cf 12       		.uleb128 0x12
 4060 07d0 1B000000 		.4byte	.LASF90
 4061 07d4 01       		.byte	0x1
 4062 07d5 5904     		.2byte	0x459
 4063 07d7 E2070000 		.4byte	0x7e2
 4064 07db 05       		.uleb128 0x5
 4065 07dc 03       		.byte	0x3
 4066 07dd 20000000 		.4byte	CapSense_debounceCounter.5528
 4067 07e1 00       		.byte	0
 4068 07e2 17       		.uleb128 0x17
 4069 07e3 6B000000 		.4byte	0x6b
 4070 07e7 F2070000 		.4byte	0x7f2
 4071 07eb 18       		.uleb128 0x18
 4072 07ec BC000000 		.4byte	0xbc
 4073 07f0 00       		.byte	0
 4074 07f1 00       		.byte	0
 4075 07f2 16       		.uleb128 0x16
 4076 07f3 B90A0000 		.4byte	.LASF91
 4077 07f7 01       		.byte	0x1
 4078 07f8 A804     		.2byte	0x4a8
 4079 07fa 83000000 		.4byte	0x83
 4080 07fe 00000000 		.4byte	.LFB57
 4081 0802 42000000 		.4byte	.LFE57-.LFB57
 4082 0806 01       		.uleb128 0x1
 4083 0807 9C       		.byte	0x9c
 4084 0808 49080000 		.4byte	0x849
 4085 080c 13       		.uleb128 0x13
 4086 080d E4030000 		.4byte	.LASF61
 4087 0811 01       		.byte	0x1
 4088 0812 A804     		.2byte	0x4a8
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 123


 4089 0814 83000000 		.4byte	0x83
 4090 0818 02       		.uleb128 0x2
 4091 0819 91       		.byte	0x91
 4092 081a 64       		.sleb128 -28
 4093 081b 12       		.uleb128 0x12
 4094 081c 35060000 		.4byte	.LASF92
 4095 0820 01       		.byte	0x1
 4096 0821 AA04     		.2byte	0x4aa
 4097 0823 83000000 		.4byte	0x83
 4098 0827 02       		.uleb128 0x2
 4099 0828 91       		.byte	0x91
 4100 0829 74       		.sleb128 -12
 4101 082a 12       		.uleb128 0x12
 4102 082b 08010000 		.4byte	.LASF93
 4103 082f 01       		.byte	0x1
 4104 0830 AB04     		.2byte	0x4ab
 4105 0832 83000000 		.4byte	0x83
 4106 0836 02       		.uleb128 0x2
 4107 0837 91       		.byte	0x91
 4108 0838 6C       		.sleb128 -20
 4109 0839 12       		.uleb128 0x12
 4110 083a 100A0000 		.4byte	.LASF94
 4111 083e 01       		.byte	0x1
 4112 083f AC04     		.2byte	0x4ac
 4113 0841 83000000 		.4byte	0x83
 4114 0845 02       		.uleb128 0x2
 4115 0846 91       		.byte	0x91
 4116 0847 70       		.sleb128 -16
 4117 0848 00       		.byte	0
 4118 0849 16       		.uleb128 0x16
 4119 084a 40050000 		.4byte	.LASF95
 4120 084e 01       		.byte	0x1
 4121 084f D604     		.2byte	0x4d6
 4122 0851 83000000 		.4byte	0x83
 4123 0855 00000000 		.4byte	.LFB58
 4124 0859 36000000 		.4byte	.LFE58-.LFB58
 4125 085d 01       		.uleb128 0x1
 4126 085e 9C       		.byte	0x9c
 4127 085f 80080000 		.4byte	0x880
 4128 0863 10       		.uleb128 0x10
 4129 0864 6900     		.ascii	"i\000"
 4130 0866 01       		.byte	0x1
 4131 0867 D904     		.2byte	0x4d9
 4132 0869 83000000 		.4byte	0x83
 4133 086d 02       		.uleb128 0x2
 4134 086e 91       		.byte	0x91
 4135 086f 74       		.sleb128 -12
 4136 0870 12       		.uleb128 0x12
 4137 0871 100A0000 		.4byte	.LASF94
 4138 0875 01       		.byte	0x1
 4139 0876 DA04     		.2byte	0x4da
 4140 0878 83000000 		.4byte	0x83
 4141 087c 02       		.uleb128 0x2
 4142 087d 91       		.byte	0x91
 4143 087e 70       		.sleb128 -16
 4144 087f 00       		.byte	0
 4145 0880 11       		.uleb128 0x11
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 124


 4146 0881 C2050000 		.4byte	.LASF96
 4147 0885 01       		.byte	0x1
 4148 0886 0505     		.2byte	0x505
 4149 0888 00000000 		.4byte	.LFB59
 4150 088c 5C000000 		.4byte	.LFE59-.LFB59
 4151 0890 01       		.uleb128 0x1
 4152 0891 9C       		.byte	0x9c
 4153 0892 C4080000 		.4byte	0x8c4
 4154 0896 13       		.uleb128 0x13
 4155 0897 E4030000 		.4byte	.LASF61
 4156 089b 01       		.byte	0x1
 4157 089c 0505     		.2byte	0x505
 4158 089e 83000000 		.4byte	0x83
 4159 08a2 02       		.uleb128 0x2
 4160 08a3 91       		.byte	0x91
 4161 08a4 6C       		.sleb128 -20
 4162 08a5 12       		.uleb128 0x12
 4163 08a6 35060000 		.4byte	.LASF92
 4164 08aa 01       		.byte	0x1
 4165 08ab 0805     		.2byte	0x508
 4166 08ad 6B000000 		.4byte	0x6b
 4167 08b1 02       		.uleb128 0x2
 4168 08b2 91       		.byte	0x91
 4169 08b3 77       		.sleb128 -9
 4170 08b4 12       		.uleb128 0x12
 4171 08b5 08010000 		.4byte	.LASF93
 4172 08b9 01       		.byte	0x1
 4173 08ba 0905     		.2byte	0x509
 4174 08bc 6B000000 		.4byte	0x6b
 4175 08c0 02       		.uleb128 0x2
 4176 08c1 91       		.byte	0x91
 4177 08c2 76       		.sleb128 -10
 4178 08c3 00       		.byte	0
 4179 08c4 11       		.uleb128 0x11
 4180 08c5 A0000000 		.4byte	.LASF97
 4181 08c9 01       		.byte	0x1
 4182 08ca 3005     		.2byte	0x530
 4183 08cc 00000000 		.4byte	.LFB60
 4184 08d0 5C000000 		.4byte	.LFE60-.LFB60
 4185 08d4 01       		.uleb128 0x1
 4186 08d5 9C       		.byte	0x9c
 4187 08d6 08090000 		.4byte	0x908
 4188 08da 13       		.uleb128 0x13
 4189 08db E4030000 		.4byte	.LASF61
 4190 08df 01       		.byte	0x1
 4191 08e0 3005     		.2byte	0x530
 4192 08e2 83000000 		.4byte	0x83
 4193 08e6 02       		.uleb128 0x2
 4194 08e7 91       		.byte	0x91
 4195 08e8 6C       		.sleb128 -20
 4196 08e9 12       		.uleb128 0x12
 4197 08ea 35060000 		.4byte	.LASF92
 4198 08ee 01       		.byte	0x1
 4199 08ef 3205     		.2byte	0x532
 4200 08f1 6B000000 		.4byte	0x6b
 4201 08f5 02       		.uleb128 0x2
 4202 08f6 91       		.byte	0x91
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 125


 4203 08f7 77       		.sleb128 -9
 4204 08f8 12       		.uleb128 0x12
 4205 08f9 08010000 		.4byte	.LASF93
 4206 08fd 01       		.byte	0x1
 4207 08fe 3305     		.2byte	0x533
 4208 0900 6B000000 		.4byte	0x6b
 4209 0904 02       		.uleb128 0x2
 4210 0905 91       		.byte	0x91
 4211 0906 76       		.sleb128 -10
 4212 0907 00       		.byte	0
 4213 0908 14       		.uleb128 0x14
 4214 0909 2F080000 		.4byte	.LASF98
 4215 090d 01       		.byte	0x1
 4216 090e 6205     		.2byte	0x562
 4217 0910 6B000000 		.4byte	0x6b
 4218 0914 00000000 		.4byte	.LFB61
 4219 0918 B8000000 		.4byte	.LFE61-.LFB61
 4220 091c 01       		.uleb128 0x1
 4221 091d 9C       		.byte	0x9c
 4222 091e 8A090000 		.4byte	0x98a
 4223 0922 13       		.uleb128 0x13
 4224 0923 E6040000 		.4byte	.LASF99
 4225 0927 01       		.byte	0x1
 4226 0928 6205     		.2byte	0x562
 4227 092a 6B000000 		.4byte	0x6b
 4228 092e 02       		.uleb128 0x2
 4229 092f 91       		.byte	0x91
 4230 0930 67       		.sleb128 -25
 4231 0931 13       		.uleb128 0x13
 4232 0932 5F030000 		.4byte	.LASF100
 4233 0936 01       		.byte	0x1
 4234 0937 6205     		.2byte	0x562
 4235 0939 6B000000 		.4byte	0x6b
 4236 093d 02       		.uleb128 0x2
 4237 093e 91       		.byte	0x91
 4238 093f 66       		.sleb128 -26
 4239 0940 13       		.uleb128 0x13
 4240 0941 1D090000 		.4byte	.LASF88
 4241 0945 01       		.byte	0x1
 4242 0946 6205     		.2byte	0x562
 4243 0948 6B000000 		.4byte	0x6b
 4244 094c 02       		.uleb128 0x2
 4245 094d 91       		.byte	0x91
 4246 094e 65       		.sleb128 -27
 4247 094f 10       		.uleb128 0x10
 4248 0950 6900     		.ascii	"i\000"
 4249 0952 01       		.byte	0x1
 4250 0953 6505     		.2byte	0x565
 4251 0955 6B000000 		.4byte	0x6b
 4252 0959 02       		.uleb128 0x2
 4253 095a 91       		.byte	0x91
 4254 095b 6F       		.sleb128 -17
 4255 095c 12       		.uleb128 0x12
 4256 095d BB080000 		.4byte	.LASF101
 4257 0961 01       		.byte	0x1
 4258 0962 6F05     		.2byte	0x56f
 4259 0964 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 126


 4260 0968 02       		.uleb128 0x2
 4261 0969 91       		.byte	0x91
 4262 096a 6E       		.sleb128 -18
 4263 096b 12       		.uleb128 0x12
 4264 096c 2A080000 		.4byte	.LASF102
 4265 0970 01       		.byte	0x1
 4266 0971 7105     		.2byte	0x571
 4267 0973 6B000000 		.4byte	0x6b
 4268 0977 02       		.uleb128 0x2
 4269 0978 91       		.byte	0x91
 4270 0979 6D       		.sleb128 -19
 4271 097a 12       		.uleb128 0x12
 4272 097b 6E070000 		.4byte	.LASF103
 4273 097f 01       		.byte	0x1
 4274 0980 7205     		.2byte	0x572
 4275 0982 E7010000 		.4byte	0x1e7
 4276 0986 02       		.uleb128 0x2
 4277 0987 91       		.byte	0x91
 4278 0988 68       		.sleb128 -24
 4279 0989 00       		.byte	0
 4280 098a 16       		.uleb128 0x16
 4281 098b E2060000 		.4byte	.LASF104
 4282 098f 01       		.byte	0x1
 4283 0990 0106     		.2byte	0x601
 4284 0992 6B000000 		.4byte	0x6b
 4285 0996 00000000 		.4byte	.LFB62
 4286 099a A0010000 		.4byte	.LFE62-.LFB62
 4287 099e 01       		.uleb128 0x1
 4288 099f 9C       		.byte	0x9c
 4289 09a0 5C0A0000 		.4byte	0xa5c
 4290 09a4 13       		.uleb128 0x13
 4291 09a5 BB080000 		.4byte	.LASF101
 4292 09a9 01       		.byte	0x1
 4293 09aa 0106     		.2byte	0x601
 4294 09ac 6B000000 		.4byte	0x6b
 4295 09b0 02       		.uleb128 0x2
 4296 09b1 91       		.byte	0x91
 4297 09b2 57       		.sleb128 -41
 4298 09b3 13       		.uleb128 0x13
 4299 09b4 E6040000 		.4byte	.LASF99
 4300 09b8 01       		.byte	0x1
 4301 09b9 0106     		.2byte	0x601
 4302 09bb 6B000000 		.4byte	0x6b
 4303 09bf 02       		.uleb128 0x2
 4304 09c0 91       		.byte	0x91
 4305 09c1 56       		.sleb128 -42
 4306 09c2 13       		.uleb128 0x13
 4307 09c3 5F030000 		.4byte	.LASF100
 4308 09c7 01       		.byte	0x1
 4309 09c8 0206     		.2byte	0x602
 4310 09ca 6B000000 		.4byte	0x6b
 4311 09ce 02       		.uleb128 0x2
 4312 09cf 91       		.byte	0x91
 4313 09d0 55       		.sleb128 -43
 4314 09d1 13       		.uleb128 0x13
 4315 09d2 2A060000 		.4byte	.LASF105
 4316 09d6 01       		.byte	0x1
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 127


 4317 09d7 0206     		.2byte	0x602
 4318 09d9 77000000 		.4byte	0x77
 4319 09dd 02       		.uleb128 0x2
 4320 09de 91       		.byte	0x91
 4321 09df 52       		.sleb128 -46
 4322 09e0 13       		.uleb128 0x13
 4323 09e1 E7080000 		.4byte	.LASF62
 4324 09e5 01       		.byte	0x1
 4325 09e6 0206     		.2byte	0x602
 4326 09e8 6B000000 		.4byte	0x6b
 4327 09ec 02       		.uleb128 0x2
 4328 09ed 91       		.byte	0x91
 4329 09ee 00       		.sleb128 0
 4330 09ef 12       		.uleb128 0x12
 4331 09f0 82020000 		.4byte	.LASF106
 4332 09f4 01       		.byte	0x1
 4333 09f5 0606     		.2byte	0x606
 4334 09f7 6B000000 		.4byte	0x6b
 4335 09fb 02       		.uleb128 0x2
 4336 09fc 91       		.byte	0x91
 4337 09fd 6F       		.sleb128 -17
 4338 09fe 12       		.uleb128 0x12
 4339 09ff 59010000 		.4byte	.LASF107
 4340 0a03 01       		.byte	0x1
 4341 0a04 0706     		.2byte	0x607
 4342 0a06 6B000000 		.4byte	0x6b
 4343 0a0a 02       		.uleb128 0x2
 4344 0a0b 91       		.byte	0x91
 4345 0a0c 67       		.sleb128 -25
 4346 0a0d 12       		.uleb128 0x12
 4347 0a0e 3E060000 		.4byte	.LASF108
 4348 0a12 01       		.byte	0x1
 4349 0a13 0C06     		.2byte	0x60c
 4350 0a15 5C0A0000 		.4byte	0xa5c
 4351 0a19 05       		.uleb128 0x5
 4352 0a1a 03       		.byte	0x3
 4353 0a1b 24000000 		.4byte	CapSense_centroid.5580
 4354 0a1f 12       		.uleb128 0x12
 4355 0a20 940B0000 		.4byte	.LASF109
 4356 0a24 01       		.byte	0x1
 4357 0a25 1306     		.2byte	0x613
 4358 0a27 6B000000 		.4byte	0x6b
 4359 0a2b 02       		.uleb128 0x2
 4360 0a2c 91       		.byte	0x91
 4361 0a2d 5B       		.sleb128 -37
 4362 0a2e 12       		.uleb128 0x12
 4363 0a2f B5070000 		.4byte	.LASF110
 4364 0a33 01       		.byte	0x1
 4365 0a34 1406     		.2byte	0x614
 4366 0a36 83000000 		.4byte	0x83
 4367 0a3a 02       		.uleb128 0x2
 4368 0a3b 91       		.byte	0x91
 4369 0a3c 60       		.sleb128 -32
 4370 0a3d 12       		.uleb128 0x12
 4371 0a3e 8D080000 		.4byte	.LASF111
 4372 0a42 01       		.byte	0x1
 4373 0a43 1506     		.2byte	0x615
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 128


 4374 0a45 9B000000 		.4byte	0x9b
 4375 0a49 02       		.uleb128 0x2
 4376 0a4a 91       		.byte	0x91
 4377 0a4b 5C       		.sleb128 -36
 4378 0a4c 12       		.uleb128 0x12
 4379 0a4d 6E070000 		.4byte	.LASF103
 4380 0a51 01       		.byte	0x1
 4381 0a52 1706     		.2byte	0x617
 4382 0a54 E7010000 		.4byte	0x1e7
 4383 0a58 02       		.uleb128 0x2
 4384 0a59 91       		.byte	0x91
 4385 0a5a 68       		.sleb128 -24
 4386 0a5b 00       		.byte	0
 4387 0a5c 17       		.uleb128 0x17
 4388 0a5d 6B000000 		.4byte	0x6b
 4389 0a61 6C0A0000 		.4byte	0xa6c
 4390 0a65 18       		.uleb128 0x18
 4391 0a66 BC000000 		.4byte	0xbc
 4392 0a6a 02       		.byte	0x2
 4393 0a6b 00       		.byte	0
 4394 0a6c 16       		.uleb128 0x16
 4395 0a6d E4070000 		.4byte	.LASF112
 4396 0a71 01       		.byte	0x1
 4397 0a72 D406     		.2byte	0x6d4
 4398 0a74 77000000 		.4byte	0x77
 4399 0a78 00000000 		.4byte	.LFB63
 4400 0a7c B8010000 		.4byte	.LFE63-.LFB63
 4401 0a80 01       		.uleb128 0x1
 4402 0a81 9C       		.byte	0x9c
 4403 0a82 0E0B0000 		.4byte	0xb0e
 4404 0a86 13       		.uleb128 0x13
 4405 0a87 E4030000 		.4byte	.LASF61
 4406 0a8b 01       		.byte	0x1
 4407 0a8c D406     		.2byte	0x6d4
 4408 0a8e 83000000 		.4byte	0x83
 4409 0a92 02       		.uleb128 0x2
 4410 0a93 91       		.byte	0x91
 4411 0a94 5C       		.sleb128 -36
 4412 0a95 12       		.uleb128 0x12
 4413 0a96 DF000000 		.4byte	.LASF113
 4414 0a9a 01       		.byte	0x1
 4415 0a9b DB06     		.2byte	0x6db
 4416 0a9d 6B000000 		.4byte	0x6b
 4417 0aa1 02       		.uleb128 0x2
 4418 0aa2 91       		.byte	0x91
 4419 0aa3 68       		.sleb128 -24
 4420 0aa4 12       		.uleb128 0x12
 4421 0aa5 5F070000 		.4byte	.LASF114
 4422 0aa9 01       		.byte	0x1
 4423 0aaa DC06     		.2byte	0x6dc
 4424 0aac 6B000000 		.4byte	0x6b
 4425 0ab0 02       		.uleb128 0x2
 4426 0ab1 91       		.byte	0x91
 4427 0ab2 6D       		.sleb128 -19
 4428 0ab3 12       		.uleb128 0x12
 4429 0ab4 74030000 		.4byte	.LASF115
 4430 0ab8 01       		.byte	0x1
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 129


 4431 0ab9 DD06     		.2byte	0x6dd
 4432 0abb 6B000000 		.4byte	0x6b
 4433 0abf 02       		.uleb128 0x2
 4434 0ac0 91       		.byte	0x91
 4435 0ac1 6C       		.sleb128 -20
 4436 0ac2 12       		.uleb128 0x12
 4437 0ac3 B7000000 		.4byte	.LASF116
 4438 0ac7 01       		.byte	0x1
 4439 0ac8 E206     		.2byte	0x6e2
 4440 0aca 6B000000 		.4byte	0x6b
 4441 0ace 02       		.uleb128 0x2
 4442 0acf 91       		.byte	0x91
 4443 0ad0 67       		.sleb128 -25
 4444 0ad1 12       		.uleb128 0x12
 4445 0ad2 BB080000 		.4byte	.LASF101
 4446 0ad6 01       		.byte	0x1
 4447 0ad7 E706     		.2byte	0x6e7
 4448 0ad9 6B000000 		.4byte	0x6b
 4449 0add 02       		.uleb128 0x2
 4450 0ade 91       		.byte	0x91
 4451 0adf 69       		.sleb128 -23
 4452 0ae0 12       		.uleb128 0x12
 4453 0ae1 940B0000 		.4byte	.LASF109
 4454 0ae5 01       		.byte	0x1
 4455 0ae6 E806     		.2byte	0x6e8
 4456 0ae8 77000000 		.4byte	0x77
 4457 0aec 02       		.uleb128 0x2
 4458 0aed 91       		.byte	0x91
 4459 0aee 6E       		.sleb128 -18
 4460 0aef 12       		.uleb128 0x12
 4461 0af0 E6040000 		.4byte	.LASF99
 4462 0af4 01       		.byte	0x1
 4463 0af5 E906     		.2byte	0x6e9
 4464 0af7 6B000000 		.4byte	0x6b
 4465 0afb 02       		.uleb128 0x2
 4466 0afc 91       		.byte	0x91
 4467 0afd 6B       		.sleb128 -21
 4468 0afe 12       		.uleb128 0x12
 4469 0aff 5F030000 		.4byte	.LASF100
 4470 0b03 01       		.byte	0x1
 4471 0b04 EA06     		.2byte	0x6ea
 4472 0b06 6B000000 		.4byte	0x6b
 4473 0b0a 02       		.uleb128 0x2
 4474 0b0b 91       		.byte	0x91
 4475 0b0c 6A       		.sleb128 -22
 4476 0b0d 00       		.byte	0
 4477 0b0e 16       		.uleb128 0x16
 4478 0b0f 590A0000 		.4byte	.LASF117
 4479 0b13 01       		.byte	0x1
 4480 0b14 9F07     		.2byte	0x79f
 4481 0b16 77000000 		.4byte	0x77
 4482 0b1a 00000000 		.4byte	.LFB64
 4483 0b1e 98000000 		.4byte	.LFE64-.LFB64
 4484 0b22 01       		.uleb128 0x1
 4485 0b23 9C       		.byte	0x9c
 4486 0b24 740B0000 		.4byte	0xb74
 4487 0b28 13       		.uleb128 0x13
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 130


 4488 0b29 E4030000 		.4byte	.LASF61
 4489 0b2d 01       		.byte	0x1
 4490 0b2e 9F07     		.2byte	0x79f
 4491 0b30 83000000 		.4byte	0x83
 4492 0b34 02       		.uleb128 0x2
 4493 0b35 91       		.byte	0x91
 4494 0b36 64       		.sleb128 -28
 4495 0b37 12       		.uleb128 0x12
 4496 0b38 BB080000 		.4byte	.LASF101
 4497 0b3c 01       		.byte	0x1
 4498 0b3d AE07     		.2byte	0x7ae
 4499 0b3f 6B000000 		.4byte	0x6b
 4500 0b43 02       		.uleb128 0x2
 4501 0b44 91       		.byte	0x91
 4502 0b45 6B       		.sleb128 -21
 4503 0b46 12       		.uleb128 0x12
 4504 0b47 940B0000 		.4byte	.LASF109
 4505 0b4b 01       		.byte	0x1
 4506 0b4c AF07     		.2byte	0x7af
 4507 0b4e 77000000 		.4byte	0x77
 4508 0b52 02       		.uleb128 0x2
 4509 0b53 91       		.byte	0x91
 4510 0b54 6E       		.sleb128 -18
 4511 0b55 12       		.uleb128 0x12
 4512 0b56 E6040000 		.4byte	.LASF99
 4513 0b5a 01       		.byte	0x1
 4514 0b5b B007     		.2byte	0x7b0
 4515 0b5d 6B000000 		.4byte	0x6b
 4516 0b61 02       		.uleb128 0x2
 4517 0b62 91       		.byte	0x91
 4518 0b63 6D       		.sleb128 -19
 4519 0b64 12       		.uleb128 0x12
 4520 0b65 5F030000 		.4byte	.LASF100
 4521 0b69 01       		.byte	0x1
 4522 0b6a B107     		.2byte	0x7b1
 4523 0b6c 6B000000 		.4byte	0x6b
 4524 0b70 02       		.uleb128 0x2
 4525 0b71 91       		.byte	0x91
 4526 0b72 6C       		.sleb128 -20
 4527 0b73 00       		.byte	0
 4528 0b74 14       		.uleb128 0x14
 4529 0b75 860A0000 		.4byte	.LASF118
 4530 0b79 01       		.byte	0x1
 4531 0b7a 4C09     		.2byte	0x94c
 4532 0b7c 77000000 		.4byte	0x77
 4533 0b80 00000000 		.4byte	.LFB65
 4534 0b84 76000000 		.4byte	.LFE65-.LFB65
 4535 0b88 01       		.uleb128 0x1
 4536 0b89 9C       		.byte	0x9c
 4537 0b8a C80B0000 		.4byte	0xbc8
 4538 0b8e 19       		.uleb128 0x19
 4539 0b8f 783100   		.ascii	"x1\000"
 4540 0b92 01       		.byte	0x1
 4541 0b93 4C09     		.2byte	0x94c
 4542 0b95 77000000 		.4byte	0x77
 4543 0b99 02       		.uleb128 0x2
 4544 0b9a 91       		.byte	0x91
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 131


 4545 0b9b 66       		.sleb128 -26
 4546 0b9c 19       		.uleb128 0x19
 4547 0b9d 783200   		.ascii	"x2\000"
 4548 0ba0 01       		.byte	0x1
 4549 0ba1 4C09     		.2byte	0x94c
 4550 0ba3 77000000 		.4byte	0x77
 4551 0ba7 02       		.uleb128 0x2
 4552 0ba8 91       		.byte	0x91
 4553 0ba9 64       		.sleb128 -28
 4554 0baa 19       		.uleb128 0x19
 4555 0bab 783300   		.ascii	"x3\000"
 4556 0bae 01       		.byte	0x1
 4557 0baf 4C09     		.2byte	0x94c
 4558 0bb1 77000000 		.4byte	0x77
 4559 0bb5 02       		.uleb128 0x2
 4560 0bb6 91       		.byte	0x91
 4561 0bb7 62       		.sleb128 -30
 4562 0bb8 10       		.uleb128 0x10
 4563 0bb9 746D7000 		.ascii	"tmp\000"
 4564 0bbd 01       		.byte	0x1
 4565 0bbe 4E09     		.2byte	0x94e
 4566 0bc0 77000000 		.4byte	0x77
 4567 0bc4 02       		.uleb128 0x2
 4568 0bc5 91       		.byte	0x91
 4569 0bc6 6E       		.sleb128 -18
 4570 0bc7 00       		.byte	0
 4571 0bc8 16       		.uleb128 0x16
 4572 0bc9 1C040000 		.4byte	.LASF119
 4573 0bcd 01       		.byte	0x1
 4574 0bce 7D09     		.2byte	0x97d
 4575 0bd0 77000000 		.4byte	0x77
 4576 0bd4 00000000 		.4byte	.LFB66
 4577 0bd8 46000000 		.4byte	.LFE66-.LFB66
 4578 0bdc 01       		.uleb128 0x1
 4579 0bdd 9C       		.byte	0x9c
 4580 0bde 1C0C0000 		.4byte	0xc1c
 4581 0be2 19       		.uleb128 0x19
 4582 0be3 783100   		.ascii	"x1\000"
 4583 0be6 01       		.byte	0x1
 4584 0be7 7D09     		.2byte	0x97d
 4585 0be9 77000000 		.4byte	0x77
 4586 0bed 02       		.uleb128 0x2
 4587 0bee 91       		.byte	0x91
 4588 0bef 66       		.sleb128 -26
 4589 0bf0 19       		.uleb128 0x19
 4590 0bf1 783200   		.ascii	"x2\000"
 4591 0bf4 01       		.byte	0x1
 4592 0bf5 7D09     		.2byte	0x97d
 4593 0bf7 77000000 		.4byte	0x77
 4594 0bfb 02       		.uleb128 0x2
 4595 0bfc 91       		.byte	0x91
 4596 0bfd 64       		.sleb128 -28
 4597 0bfe 19       		.uleb128 0x19
 4598 0bff 783300   		.ascii	"x3\000"
 4599 0c02 01       		.byte	0x1
 4600 0c03 7D09     		.2byte	0x97d
 4601 0c05 77000000 		.4byte	0x77
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 132


 4602 0c09 02       		.uleb128 0x2
 4603 0c0a 91       		.byte	0x91
 4604 0c0b 62       		.sleb128 -30
 4605 0c0c 10       		.uleb128 0x10
 4606 0c0d 746D7000 		.ascii	"tmp\000"
 4607 0c11 01       		.byte	0x1
 4608 0c12 7F09     		.2byte	0x97f
 4609 0c14 83000000 		.4byte	0x83
 4610 0c18 02       		.uleb128 0x2
 4611 0c19 91       		.byte	0x91
 4612 0c1a 6C       		.sleb128 -20
 4613 0c1b 00       		.byte	0
 4614 0c1c 14       		.uleb128 0x14
 4615 0c1d 5E060000 		.4byte	.LASF120
 4616 0c21 01       		.byte	0x1
 4617 0c22 AD0A     		.2byte	0xaad
 4618 0c24 83000000 		.4byte	0x83
 4619 0c28 00000000 		.4byte	.LFB67
 4620 0c2c 1C000000 		.4byte	.LFE67-.LFB67
 4621 0c30 01       		.uleb128 0x1
 4622 0c31 9C       		.byte	0x9c
 4623 0c32 460C0000 		.4byte	0xc46
 4624 0c36 13       		.uleb128 0x13
 4625 0c37 AB050000 		.4byte	.LASF52
 4626 0c3b 01       		.byte	0x1
 4627 0c3c AD0A     		.2byte	0xaad
 4628 0c3e 83000000 		.4byte	0x83
 4629 0c42 02       		.uleb128 0x2
 4630 0c43 91       		.byte	0x91
 4631 0c44 74       		.sleb128 -12
 4632 0c45 00       		.byte	0
 4633 0c46 14       		.uleb128 0x14
 4634 0c47 18070000 		.4byte	.LASF121
 4635 0c4b 01       		.byte	0x1
 4636 0c4c C70A     		.2byte	0xac7
 4637 0c4e 6B000000 		.4byte	0x6b
 4638 0c52 00000000 		.4byte	.LFB68
 4639 0c56 1C000000 		.4byte	.LFE68-.LFB68
 4640 0c5a 01       		.uleb128 0x1
 4641 0c5b 9C       		.byte	0x9c
 4642 0c5c 700C0000 		.4byte	0xc70
 4643 0c60 13       		.uleb128 0x13
 4644 0c61 AB050000 		.4byte	.LASF52
 4645 0c65 01       		.byte	0x1
 4646 0c66 C70A     		.2byte	0xac7
 4647 0c68 83000000 		.4byte	0x83
 4648 0c6c 02       		.uleb128 0x2
 4649 0c6d 91       		.byte	0x91
 4650 0c6e 74       		.sleb128 -12
 4651 0c6f 00       		.byte	0
 4652 0c70 14       		.uleb128 0x14
 4653 0c71 A40A0000 		.4byte	.LASF122
 4654 0c75 01       		.byte	0x1
 4655 0c76 E10A     		.2byte	0xae1
 4656 0c78 6B000000 		.4byte	0x6b
 4657 0c7c 00000000 		.4byte	.LFB69
 4658 0c80 1C000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 133


 4659 0c84 01       		.uleb128 0x1
 4660 0c85 9C       		.byte	0x9c
 4661 0c86 9A0C0000 		.4byte	0xc9a
 4662 0c8a 13       		.uleb128 0x13
 4663 0c8b E4030000 		.4byte	.LASF61
 4664 0c8f 01       		.byte	0x1
 4665 0c90 E10A     		.2byte	0xae1
 4666 0c92 83000000 		.4byte	0x83
 4667 0c96 02       		.uleb128 0x2
 4668 0c97 91       		.byte	0x91
 4669 0c98 74       		.sleb128 -12
 4670 0c99 00       		.byte	0
 4671 0c9a 1A       		.uleb128 0x1a
 4672 0c9b 55080000 		.4byte	.LASF123
 4673 0c9f 01       		.byte	0x1
 4674 0ca0 FB0A     		.2byte	0xafb
 4675 0ca2 00000000 		.4byte	.LFB70
 4676 0ca6 14000000 		.4byte	.LFE70-.LFB70
 4677 0caa 01       		.uleb128 0x1
 4678 0cab 9C       		.byte	0x9c
 4679 0cac 1A       		.uleb128 0x1a
 4680 0cad 85040000 		.4byte	.LASF124
 4681 0cb1 01       		.byte	0x1
 4682 0cb2 140B     		.2byte	0xb14
 4683 0cb4 00000000 		.4byte	.LFB71
 4684 0cb8 14000000 		.4byte	.LFE71-.LFB71
 4685 0cbc 01       		.uleb128 0x1
 4686 0cbd 9C       		.byte	0x9c
 4687 0cbe 17       		.uleb128 0x17
 4688 0cbf CE0C0000 		.4byte	0xcce
 4689 0cc3 CE0C0000 		.4byte	0xcce
 4690 0cc7 18       		.uleb128 0x18
 4691 0cc8 BC000000 		.4byte	0xbc
 4692 0ccc 00       		.byte	0
 4693 0ccd 00       		.byte	0
 4694 0cce 08       		.uleb128 0x8
 4695 0ccf 77000000 		.4byte	0x77
 4696 0cd3 1B       		.uleb128 0x1b
 4697 0cd4 D3090000 		.4byte	.LASF125
 4698 0cd8 01       		.byte	0x1
 4699 0cd9 5D       		.byte	0x5d
 4700 0cda E40C0000 		.4byte	0xce4
 4701 0cde 05       		.uleb128 0x5
 4702 0cdf 03       		.byte	0x3
 4703 0ce0 08000000 		.4byte	CapSense_centroidMult
 4704 0ce4 08       		.uleb128 0x8
 4705 0ce5 BE0C0000 		.4byte	0xcbe
 4706 0ce9 1B       		.uleb128 0x1b
 4707 0cea EB030000 		.4byte	.LASF126
 4708 0cee 01       		.byte	0x1
 4709 0cef 61       		.byte	0x61
 4710 0cf0 E2070000 		.4byte	0x7e2
 4711 0cf4 05       		.uleb128 0x5
 4712 0cf5 03       		.byte	0x3
 4713 0cf6 0C000000 		.4byte	CapSense_posFiltersMask
 4714 0cfa 17       		.uleb128 0x17
 4715 0cfb 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 134


 4716 0cff 0A0D0000 		.4byte	0xd0a
 4717 0d03 18       		.uleb128 0x18
 4718 0d04 BC000000 		.4byte	0xbc
 4719 0d08 03       		.byte	0x3
 4720 0d09 00       		.byte	0
 4721 0d0a 1B       		.uleb128 0x1b
 4722 0d0b 26020000 		.4byte	.LASF127
 4723 0d0f 01       		.byte	0x1
 4724 0d10 65       		.byte	0x65
 4725 0d11 FA0C0000 		.4byte	0xcfa
 4726 0d15 05       		.uleb128 0x5
 4727 0d16 03       		.byte	0x3
 4728 0d17 10000000 		.4byte	CapSense_posFiltersData
 4729 0d1b 17       		.uleb128 0x17
 4730 0d1c 77000000 		.4byte	0x77
 4731 0d20 2B0D0000 		.4byte	0xd2b
 4732 0d24 18       		.uleb128 0x18
 4733 0d25 BC000000 		.4byte	0xbc
 4734 0d29 04       		.byte	0x4
 4735 0d2a 00       		.byte	0
 4736 0d2b 1C       		.uleb128 0x1c
 4737 0d2c 05070000 		.4byte	.LASF128
 4738 0d30 01       		.byte	0x1
 4739 0d31 2C       		.byte	0x2c
 4740 0d32 1B0D0000 		.4byte	0xd1b
 4741 0d36 1C       		.uleb128 0x1c
 4742 0d37 CA030000 		.4byte	.LASF129
 4743 0d3b 01       		.byte	0x1
 4744 0d3c 2D       		.byte	0x2d
 4745 0d3d E2070000 		.4byte	0x7e2
 4746 0d41 17       		.uleb128 0x17
 4747 0d42 F3010000 		.4byte	0x1f3
 4748 0d46 510D0000 		.4byte	0xd51
 4749 0d4a 18       		.uleb128 0x18
 4750 0d4b BC000000 		.4byte	0xbc
 4751 0d4f 04       		.byte	0x4
 4752 0d50 00       		.byte	0
 4753 0d51 1C       		.uleb128 0x1c
 4754 0d52 53040000 		.4byte	.LASF130
 4755 0d56 01       		.byte	0x1
 4756 0d57 2E       		.byte	0x2e
 4757 0d58 5C0D0000 		.4byte	0xd5c
 4758 0d5c 08       		.uleb128 0x8
 4759 0d5d 410D0000 		.4byte	0xd41
 4760 0d61 1D       		.uleb128 0x1d
 4761 0d62 A3080000 		.4byte	.LASF131
 4762 0d66 01       		.byte	0x1
 4763 0d67 34       		.byte	0x34
 4764 0d68 1B0D0000 		.4byte	0xd1b
 4765 0d6c 05       		.uleb128 0x5
 4766 0d6d 03       		.byte	0x3
 4767 0d6e 00000000 		.4byte	CapSense_sensorBaseline
 4768 0d72 17       		.uleb128 0x17
 4769 0d73 6B000000 		.4byte	0x6b
 4770 0d77 820D0000 		.4byte	0xd82
 4771 0d7b 18       		.uleb128 0x18
 4772 0d7c BC000000 		.4byte	0xbc
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 135


 4773 0d80 04       		.byte	0x4
 4774 0d81 00       		.byte	0
 4775 0d82 1D       		.uleb128 0x1d
 4776 0d83 00000000 		.4byte	.LASF132
 4777 0d87 01       		.byte	0x1
 4778 0d88 35       		.byte	0x35
 4779 0d89 720D0000 		.4byte	0xd72
 4780 0d8d 05       		.uleb128 0x5
 4781 0d8e 03       		.byte	0x3
 4782 0d8f 00000000 		.4byte	CapSense_sensorBaselineLow
 4783 0d93 1D       		.uleb128 0x1d
 4784 0d94 DA020000 		.4byte	.LASF133
 4785 0d98 01       		.byte	0x1
 4786 0d99 36       		.byte	0x36
 4787 0d9a 720D0000 		.4byte	0xd72
 4788 0d9e 05       		.uleb128 0x5
 4789 0d9f 03       		.byte	0x3
 4790 0da0 00000000 		.4byte	CapSense_sensorSignal
 4791 0da4 1D       		.uleb128 0x1d
 4792 0da5 9D0B0000 		.4byte	.LASF134
 4793 0da9 01       		.byte	0x1
 4794 0daa 37       		.byte	0x37
 4795 0dab E2070000 		.4byte	0x7e2
 4796 0daf 05       		.uleb128 0x5
 4797 0db0 03       		.byte	0x3
 4798 0db1 00000000 		.4byte	CapSense_sensorOnMask
 4799 0db5 1D       		.uleb128 0x1d
 4800 0db6 41000000 		.4byte	.LASF135
 4801 0dba 01       		.byte	0x1
 4802 0dbb 39       		.byte	0x39
 4803 0dbc 720D0000 		.4byte	0xd72
 4804 0dc0 05       		.uleb128 0x5
 4805 0dc1 03       		.byte	0x3
 4806 0dc2 00000000 		.4byte	CapSense_lowBaselineResetCnt
 4807 0dc6 1D       		.uleb128 0x1d
 4808 0dc7 73080000 		.4byte	.LASF136
 4809 0dcb 01       		.byte	0x1
 4810 0dcc 3A       		.byte	0x3a
 4811 0dcd 720D0000 		.4byte	0xd72
 4812 0dd1 05       		.uleb128 0x5
 4813 0dd2 03       		.byte	0x3
 4814 0dd3 00000000 		.4byte	CapSense_lowBaselineReset
 4815 0dd7 1D       		.uleb128 0x1d
 4816 0dd8 03040000 		.4byte	.LASF137
 4817 0ddc 01       		.byte	0x1
 4818 0ddd 49       		.byte	0x49
 4819 0dde E2070000 		.4byte	0x7e2
 4820 0de2 05       		.uleb128 0x5
 4821 0de3 03       		.byte	0x3
 4822 0de4 00000000 		.4byte	CapSense_fingerThreshold
 4823 0de8 1D       		.uleb128 0x1d
 4824 0de9 48090000 		.4byte	.LASF138
 4825 0ded 01       		.byte	0x1
 4826 0dee 4B       		.byte	0x4b
 4827 0def E2070000 		.4byte	0x7e2
 4828 0df3 05       		.uleb128 0x5
 4829 0df4 03       		.byte	0x3
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 136


 4830 0df5 00000000 		.4byte	CapSense_noiseThreshold
 4831 0df9 1D       		.uleb128 0x1d
 4832 0dfa 79050000 		.4byte	.LASF139
 4833 0dfe 01       		.byte	0x1
 4834 0dff 4D       		.byte	0x4d
 4835 0e00 E2070000 		.4byte	0x7e2
 4836 0e04 05       		.uleb128 0x5
 4837 0e05 03       		.byte	0x3
 4838 0e06 00000000 		.4byte	CapSense_negativeNoiseThreshold
 4839 0e0a 1D       		.uleb128 0x1d
 4840 0e0b 3F030000 		.4byte	.LASF140
 4841 0e0f 01       		.byte	0x1
 4842 0e10 4F       		.byte	0x4f
 4843 0e11 E2070000 		.4byte	0x7e2
 4844 0e15 05       		.uleb128 0x5
 4845 0e16 03       		.byte	0x3
 4846 0e17 00000000 		.4byte	CapSense_hysteresis
 4847 0e1b 1D       		.uleb128 0x1d
 4848 0e1c 4E020000 		.4byte	.LASF141
 4849 0e20 01       		.byte	0x1
 4850 0e21 51       		.byte	0x51
 4851 0e22 E2070000 		.4byte	0x7e2
 4852 0e26 05       		.uleb128 0x5
 4853 0e27 03       		.byte	0x3
 4854 0e28 00000000 		.4byte	CapSense_debounce
 4855 0e2c 17       		.uleb128 0x17
 4856 0e2d F3010000 		.4byte	0x1f3
 4857 0e31 3C0E0000 		.4byte	0xe3c
 4858 0e35 18       		.uleb128 0x18
 4859 0e36 BC000000 		.4byte	0xbc
 4860 0e3a 00       		.byte	0
 4861 0e3b 00       		.byte	0
 4862 0e3c 1D       		.uleb128 0x1d
 4863 0e3d F0020000 		.4byte	.LASF142
 4864 0e41 01       		.byte	0x1
 4865 0e42 55       		.byte	0x55
 4866 0e43 4D0E0000 		.4byte	0xe4d
 4867 0e47 05       		.uleb128 0x5
 4868 0e48 03       		.byte	0x3
 4869 0e49 00000000 		.4byte	CapSense_rawDataIndex
 4870 0e4d 08       		.uleb128 0x8
 4871 0e4e 2C0E0000 		.4byte	0xe2c
 4872 0e52 1D       		.uleb128 0x1d
 4873 0e53 60050000 		.4byte	.LASF143
 4874 0e57 01       		.byte	0x1
 4875 0e58 59       		.byte	0x59
 4876 0e59 630E0000 		.4byte	0xe63
 4877 0e5d 05       		.uleb128 0x5
 4878 0e5e 03       		.byte	0x3
 4879 0e5f 00000000 		.4byte	CapSense_numberOfSensors
 4880 0e63 08       		.uleb128 0x8
 4881 0e64 2C0E0000 		.4byte	0xe2c
 4882 0e68 1D       		.uleb128 0x1d
 4883 0e69 E30A0000 		.4byte	.LASF144
 4884 0e6d 01       		.byte	0x1
 4885 0e6e 1E       		.byte	0x1e
 4886 0e6f 1B0D0000 		.4byte	0xd1b
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 137


 4887 0e73 05       		.uleb128 0x5
 4888 0e74 03       		.byte	0x3
 4889 0e75 00000000 		.4byte	CapSense_rawFilterData1
 4890 0e79 1D       		.uleb128 0x1d
 4891 0e7a FB0A0000 		.4byte	.LASF145
 4892 0e7e 01       		.byte	0x1
 4893 0e7f 1F       		.byte	0x1f
 4894 0e80 1B0D0000 		.4byte	0xd1b
 4895 0e84 05       		.uleb128 0x5
 4896 0e85 03       		.byte	0x3
 4897 0e86 00000000 		.4byte	CapSense_rawFilterData2
 4898 0e8a 1C       		.uleb128 0x1c
 4899 0e8b E8000000 		.4byte	.LASF146
 4900 0e8f 01       		.byte	0x1
 4901 0e90 41       		.byte	0x41
 4902 0e91 C6020000 		.4byte	0x2c6
 4903 0e95 1D       		.uleb128 0x1d
 4904 0e96 160A0000 		.4byte	.LASF147
 4905 0e9a 01       		.byte	0x1
 4906 0e9b 45       		.byte	0x45
 4907 0e9c 6B000000 		.4byte	0x6b
 4908 0ea0 05       		.uleb128 0x5
 4909 0ea1 03       		.byte	0x3
 4910 0ea2 00000000 		.4byte	CapSense_enableRawFilters
 4911 0ea6 00       		.byte	0
 4912              		.section	.debug_abbrev,"",%progbits
 4913              	.Ldebug_abbrev0:
 4914 0000 01       		.uleb128 0x1
 4915 0001 11       		.uleb128 0x11
 4916 0002 01       		.byte	0x1
 4917 0003 25       		.uleb128 0x25
 4918 0004 0E       		.uleb128 0xe
 4919 0005 13       		.uleb128 0x13
 4920 0006 0B       		.uleb128 0xb
 4921 0007 03       		.uleb128 0x3
 4922 0008 0E       		.uleb128 0xe
 4923 0009 1B       		.uleb128 0x1b
 4924 000a 0E       		.uleb128 0xe
 4925 000b 55       		.uleb128 0x55
 4926 000c 17       		.uleb128 0x17
 4927 000d 11       		.uleb128 0x11
 4928 000e 01       		.uleb128 0x1
 4929 000f 10       		.uleb128 0x10
 4930 0010 17       		.uleb128 0x17
 4931 0011 00       		.byte	0
 4932 0012 00       		.byte	0
 4933 0013 02       		.uleb128 0x2
 4934 0014 24       		.uleb128 0x24
 4935 0015 00       		.byte	0
 4936 0016 0B       		.uleb128 0xb
 4937 0017 0B       		.uleb128 0xb
 4938 0018 3E       		.uleb128 0x3e
 4939 0019 0B       		.uleb128 0xb
 4940 001a 03       		.uleb128 0x3
 4941 001b 0E       		.uleb128 0xe
 4942 001c 00       		.byte	0
 4943 001d 00       		.byte	0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 138


 4944 001e 03       		.uleb128 0x3
 4945 001f 24       		.uleb128 0x24
 4946 0020 00       		.byte	0
 4947 0021 0B       		.uleb128 0xb
 4948 0022 0B       		.uleb128 0xb
 4949 0023 3E       		.uleb128 0x3e
 4950 0024 0B       		.uleb128 0xb
 4951 0025 03       		.uleb128 0x3
 4952 0026 08       		.uleb128 0x8
 4953 0027 00       		.byte	0
 4954 0028 00       		.byte	0
 4955 0029 04       		.uleb128 0x4
 4956 002a 16       		.uleb128 0x16
 4957 002b 00       		.byte	0
 4958 002c 03       		.uleb128 0x3
 4959 002d 0E       		.uleb128 0xe
 4960 002e 3A       		.uleb128 0x3a
 4961 002f 0B       		.uleb128 0xb
 4962 0030 3B       		.uleb128 0x3b
 4963 0031 05       		.uleb128 0x5
 4964 0032 49       		.uleb128 0x49
 4965 0033 13       		.uleb128 0x13
 4966 0034 00       		.byte	0
 4967 0035 00       		.byte	0
 4968 0036 05       		.uleb128 0x5
 4969 0037 13       		.uleb128 0x13
 4970 0038 01       		.byte	0x1
 4971 0039 0B       		.uleb128 0xb
 4972 003a 0B       		.uleb128 0xb
 4973 003b 3A       		.uleb128 0x3a
 4974 003c 0B       		.uleb128 0xb
 4975 003d 3B       		.uleb128 0x3b
 4976 003e 0B       		.uleb128 0xb
 4977 003f 01       		.uleb128 0x1
 4978 0040 13       		.uleb128 0x13
 4979 0041 00       		.byte	0
 4980 0042 00       		.byte	0
 4981 0043 06       		.uleb128 0x6
 4982 0044 0D       		.uleb128 0xd
 4983 0045 00       		.byte	0
 4984 0046 03       		.uleb128 0x3
 4985 0047 0E       		.uleb128 0xe
 4986 0048 3A       		.uleb128 0x3a
 4987 0049 0B       		.uleb128 0xb
 4988 004a 3B       		.uleb128 0x3b
 4989 004b 0B       		.uleb128 0xb
 4990 004c 49       		.uleb128 0x49
 4991 004d 13       		.uleb128 0x13
 4992 004e 38       		.uleb128 0x38
 4993 004f 0B       		.uleb128 0xb
 4994 0050 00       		.byte	0
 4995 0051 00       		.byte	0
 4996 0052 07       		.uleb128 0x7
 4997 0053 0F       		.uleb128 0xf
 4998 0054 00       		.byte	0
 4999 0055 0B       		.uleb128 0xb
 5000 0056 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 139


 5001 0057 49       		.uleb128 0x49
 5002 0058 13       		.uleb128 0x13
 5003 0059 00       		.byte	0
 5004 005a 00       		.byte	0
 5005 005b 08       		.uleb128 0x8
 5006 005c 26       		.uleb128 0x26
 5007 005d 00       		.byte	0
 5008 005e 49       		.uleb128 0x49
 5009 005f 13       		.uleb128 0x13
 5010 0060 00       		.byte	0
 5011 0061 00       		.byte	0
 5012 0062 09       		.uleb128 0x9
 5013 0063 15       		.uleb128 0x15
 5014 0064 01       		.byte	0x1
 5015 0065 27       		.uleb128 0x27
 5016 0066 19       		.uleb128 0x19
 5017 0067 49       		.uleb128 0x49
 5018 0068 13       		.uleb128 0x13
 5019 0069 01       		.uleb128 0x1
 5020 006a 13       		.uleb128 0x13
 5021 006b 00       		.byte	0
 5022 006c 00       		.byte	0
 5023 006d 0A       		.uleb128 0xa
 5024 006e 05       		.uleb128 0x5
 5025 006f 00       		.byte	0
 5026 0070 49       		.uleb128 0x49
 5027 0071 13       		.uleb128 0x13
 5028 0072 00       		.byte	0
 5029 0073 00       		.byte	0
 5030 0074 0B       		.uleb128 0xb
 5031 0075 15       		.uleb128 0x15
 5032 0076 01       		.byte	0x1
 5033 0077 27       		.uleb128 0x27
 5034 0078 19       		.uleb128 0x19
 5035 0079 01       		.uleb128 0x1
 5036 007a 13       		.uleb128 0x13
 5037 007b 00       		.byte	0
 5038 007c 00       		.byte	0
 5039 007d 0C       		.uleb128 0xc
 5040 007e 16       		.uleb128 0x16
 5041 007f 00       		.byte	0
 5042 0080 03       		.uleb128 0x3
 5043 0081 0E       		.uleb128 0xe
 5044 0082 3A       		.uleb128 0x3a
 5045 0083 0B       		.uleb128 0xb
 5046 0084 3B       		.uleb128 0x3b
 5047 0085 0B       		.uleb128 0xb
 5048 0086 49       		.uleb128 0x49
 5049 0087 13       		.uleb128 0x13
 5050 0088 00       		.byte	0
 5051 0089 00       		.byte	0
 5052 008a 0D       		.uleb128 0xd
 5053 008b 2E       		.uleb128 0x2e
 5054 008c 01       		.byte	0x1
 5055 008d 3F       		.uleb128 0x3f
 5056 008e 19       		.uleb128 0x19
 5057 008f 03       		.uleb128 0x3
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 140


 5058 0090 0E       		.uleb128 0xe
 5059 0091 3A       		.uleb128 0x3a
 5060 0092 0B       		.uleb128 0xb
 5061 0093 3B       		.uleb128 0x3b
 5062 0094 0B       		.uleb128 0xb
 5063 0095 27       		.uleb128 0x27
 5064 0096 19       		.uleb128 0x19
 5065 0097 11       		.uleb128 0x11
 5066 0098 01       		.uleb128 0x1
 5067 0099 12       		.uleb128 0x12
 5068 009a 06       		.uleb128 0x6
 5069 009b 40       		.uleb128 0x40
 5070 009c 18       		.uleb128 0x18
 5071 009d 9742     		.uleb128 0x2117
 5072 009f 19       		.uleb128 0x19
 5073 00a0 01       		.uleb128 0x1
 5074 00a1 13       		.uleb128 0x13
 5075 00a2 00       		.byte	0
 5076 00a3 00       		.byte	0
 5077 00a4 0E       		.uleb128 0xe
 5078 00a5 05       		.uleb128 0x5
 5079 00a6 00       		.byte	0
 5080 00a7 03       		.uleb128 0x3
 5081 00a8 0E       		.uleb128 0xe
 5082 00a9 3A       		.uleb128 0x3a
 5083 00aa 0B       		.uleb128 0xb
 5084 00ab 3B       		.uleb128 0x3b
 5085 00ac 0B       		.uleb128 0xb
 5086 00ad 49       		.uleb128 0x49
 5087 00ae 13       		.uleb128 0x13
 5088 00af 02       		.uleb128 0x2
 5089 00b0 18       		.uleb128 0x18
 5090 00b1 00       		.byte	0
 5091 00b2 00       		.byte	0
 5092 00b3 0F       		.uleb128 0xf
 5093 00b4 2E       		.uleb128 0x2e
 5094 00b5 01       		.byte	0x1
 5095 00b6 3F       		.uleb128 0x3f
 5096 00b7 19       		.uleb128 0x19
 5097 00b8 03       		.uleb128 0x3
 5098 00b9 0E       		.uleb128 0xe
 5099 00ba 3A       		.uleb128 0x3a
 5100 00bb 0B       		.uleb128 0xb
 5101 00bc 3B       		.uleb128 0x3b
 5102 00bd 0B       		.uleb128 0xb
 5103 00be 27       		.uleb128 0x27
 5104 00bf 19       		.uleb128 0x19
 5105 00c0 11       		.uleb128 0x11
 5106 00c1 01       		.uleb128 0x1
 5107 00c2 12       		.uleb128 0x12
 5108 00c3 06       		.uleb128 0x6
 5109 00c4 40       		.uleb128 0x40
 5110 00c5 18       		.uleb128 0x18
 5111 00c6 9642     		.uleb128 0x2116
 5112 00c8 19       		.uleb128 0x19
 5113 00c9 01       		.uleb128 0x1
 5114 00ca 13       		.uleb128 0x13
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 141


 5115 00cb 00       		.byte	0
 5116 00cc 00       		.byte	0
 5117 00cd 10       		.uleb128 0x10
 5118 00ce 34       		.uleb128 0x34
 5119 00cf 00       		.byte	0
 5120 00d0 03       		.uleb128 0x3
 5121 00d1 08       		.uleb128 0x8
 5122 00d2 3A       		.uleb128 0x3a
 5123 00d3 0B       		.uleb128 0xb
 5124 00d4 3B       		.uleb128 0x3b
 5125 00d5 05       		.uleb128 0x5
 5126 00d6 49       		.uleb128 0x49
 5127 00d7 13       		.uleb128 0x13
 5128 00d8 02       		.uleb128 0x2
 5129 00d9 18       		.uleb128 0x18
 5130 00da 00       		.byte	0
 5131 00db 00       		.byte	0
 5132 00dc 11       		.uleb128 0x11
 5133 00dd 2E       		.uleb128 0x2e
 5134 00de 01       		.byte	0x1
 5135 00df 3F       		.uleb128 0x3f
 5136 00e0 19       		.uleb128 0x19
 5137 00e1 03       		.uleb128 0x3
 5138 00e2 0E       		.uleb128 0xe
 5139 00e3 3A       		.uleb128 0x3a
 5140 00e4 0B       		.uleb128 0xb
 5141 00e5 3B       		.uleb128 0x3b
 5142 00e6 05       		.uleb128 0x5
 5143 00e7 27       		.uleb128 0x27
 5144 00e8 19       		.uleb128 0x19
 5145 00e9 11       		.uleb128 0x11
 5146 00ea 01       		.uleb128 0x1
 5147 00eb 12       		.uleb128 0x12
 5148 00ec 06       		.uleb128 0x6
 5149 00ed 40       		.uleb128 0x40
 5150 00ee 18       		.uleb128 0x18
 5151 00ef 9642     		.uleb128 0x2116
 5152 00f1 19       		.uleb128 0x19
 5153 00f2 01       		.uleb128 0x1
 5154 00f3 13       		.uleb128 0x13
 5155 00f4 00       		.byte	0
 5156 00f5 00       		.byte	0
 5157 00f6 12       		.uleb128 0x12
 5158 00f7 34       		.uleb128 0x34
 5159 00f8 00       		.byte	0
 5160 00f9 03       		.uleb128 0x3
 5161 00fa 0E       		.uleb128 0xe
 5162 00fb 3A       		.uleb128 0x3a
 5163 00fc 0B       		.uleb128 0xb
 5164 00fd 3B       		.uleb128 0x3b
 5165 00fe 05       		.uleb128 0x5
 5166 00ff 49       		.uleb128 0x49
 5167 0100 13       		.uleb128 0x13
 5168 0101 02       		.uleb128 0x2
 5169 0102 18       		.uleb128 0x18
 5170 0103 00       		.byte	0
 5171 0104 00       		.byte	0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 142


 5172 0105 13       		.uleb128 0x13
 5173 0106 05       		.uleb128 0x5
 5174 0107 00       		.byte	0
 5175 0108 03       		.uleb128 0x3
 5176 0109 0E       		.uleb128 0xe
 5177 010a 3A       		.uleb128 0x3a
 5178 010b 0B       		.uleb128 0xb
 5179 010c 3B       		.uleb128 0x3b
 5180 010d 05       		.uleb128 0x5
 5181 010e 49       		.uleb128 0x49
 5182 010f 13       		.uleb128 0x13
 5183 0110 02       		.uleb128 0x2
 5184 0111 18       		.uleb128 0x18
 5185 0112 00       		.byte	0
 5186 0113 00       		.byte	0
 5187 0114 14       		.uleb128 0x14
 5188 0115 2E       		.uleb128 0x2e
 5189 0116 01       		.byte	0x1
 5190 0117 3F       		.uleb128 0x3f
 5191 0118 19       		.uleb128 0x19
 5192 0119 03       		.uleb128 0x3
 5193 011a 0E       		.uleb128 0xe
 5194 011b 3A       		.uleb128 0x3a
 5195 011c 0B       		.uleb128 0xb
 5196 011d 3B       		.uleb128 0x3b
 5197 011e 05       		.uleb128 0x5
 5198 011f 27       		.uleb128 0x27
 5199 0120 19       		.uleb128 0x19
 5200 0121 49       		.uleb128 0x49
 5201 0122 13       		.uleb128 0x13
 5202 0123 11       		.uleb128 0x11
 5203 0124 01       		.uleb128 0x1
 5204 0125 12       		.uleb128 0x12
 5205 0126 06       		.uleb128 0x6
 5206 0127 40       		.uleb128 0x40
 5207 0128 18       		.uleb128 0x18
 5208 0129 9742     		.uleb128 0x2117
 5209 012b 19       		.uleb128 0x19
 5210 012c 01       		.uleb128 0x1
 5211 012d 13       		.uleb128 0x13
 5212 012e 00       		.byte	0
 5213 012f 00       		.byte	0
 5214 0130 15       		.uleb128 0x15
 5215 0131 2E       		.uleb128 0x2e
 5216 0132 01       		.byte	0x1
 5217 0133 3F       		.uleb128 0x3f
 5218 0134 19       		.uleb128 0x19
 5219 0135 03       		.uleb128 0x3
 5220 0136 0E       		.uleb128 0xe
 5221 0137 3A       		.uleb128 0x3a
 5222 0138 0B       		.uleb128 0xb
 5223 0139 3B       		.uleb128 0x3b
 5224 013a 05       		.uleb128 0x5
 5225 013b 27       		.uleb128 0x27
 5226 013c 19       		.uleb128 0x19
 5227 013d 11       		.uleb128 0x11
 5228 013e 01       		.uleb128 0x1
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 143


 5229 013f 12       		.uleb128 0x12
 5230 0140 06       		.uleb128 0x6
 5231 0141 40       		.uleb128 0x40
 5232 0142 18       		.uleb128 0x18
 5233 0143 9742     		.uleb128 0x2117
 5234 0145 19       		.uleb128 0x19
 5235 0146 01       		.uleb128 0x1
 5236 0147 13       		.uleb128 0x13
 5237 0148 00       		.byte	0
 5238 0149 00       		.byte	0
 5239 014a 16       		.uleb128 0x16
 5240 014b 2E       		.uleb128 0x2e
 5241 014c 01       		.byte	0x1
 5242 014d 3F       		.uleb128 0x3f
 5243 014e 19       		.uleb128 0x19
 5244 014f 03       		.uleb128 0x3
 5245 0150 0E       		.uleb128 0xe
 5246 0151 3A       		.uleb128 0x3a
 5247 0152 0B       		.uleb128 0xb
 5248 0153 3B       		.uleb128 0x3b
 5249 0154 05       		.uleb128 0x5
 5250 0155 27       		.uleb128 0x27
 5251 0156 19       		.uleb128 0x19
 5252 0157 49       		.uleb128 0x49
 5253 0158 13       		.uleb128 0x13
 5254 0159 11       		.uleb128 0x11
 5255 015a 01       		.uleb128 0x1
 5256 015b 12       		.uleb128 0x12
 5257 015c 06       		.uleb128 0x6
 5258 015d 40       		.uleb128 0x40
 5259 015e 18       		.uleb128 0x18
 5260 015f 9642     		.uleb128 0x2116
 5261 0161 19       		.uleb128 0x19
 5262 0162 01       		.uleb128 0x1
 5263 0163 13       		.uleb128 0x13
 5264 0164 00       		.byte	0
 5265 0165 00       		.byte	0
 5266 0166 17       		.uleb128 0x17
 5267 0167 01       		.uleb128 0x1
 5268 0168 01       		.byte	0x1
 5269 0169 49       		.uleb128 0x49
 5270 016a 13       		.uleb128 0x13
 5271 016b 01       		.uleb128 0x1
 5272 016c 13       		.uleb128 0x13
 5273 016d 00       		.byte	0
 5274 016e 00       		.byte	0
 5275 016f 18       		.uleb128 0x18
 5276 0170 21       		.uleb128 0x21
 5277 0171 00       		.byte	0
 5278 0172 49       		.uleb128 0x49
 5279 0173 13       		.uleb128 0x13
 5280 0174 2F       		.uleb128 0x2f
 5281 0175 0B       		.uleb128 0xb
 5282 0176 00       		.byte	0
 5283 0177 00       		.byte	0
 5284 0178 19       		.uleb128 0x19
 5285 0179 05       		.uleb128 0x5
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 144


 5286 017a 00       		.byte	0
 5287 017b 03       		.uleb128 0x3
 5288 017c 08       		.uleb128 0x8
 5289 017d 3A       		.uleb128 0x3a
 5290 017e 0B       		.uleb128 0xb
 5291 017f 3B       		.uleb128 0x3b
 5292 0180 05       		.uleb128 0x5
 5293 0181 49       		.uleb128 0x49
 5294 0182 13       		.uleb128 0x13
 5295 0183 02       		.uleb128 0x2
 5296 0184 18       		.uleb128 0x18
 5297 0185 00       		.byte	0
 5298 0186 00       		.byte	0
 5299 0187 1A       		.uleb128 0x1a
 5300 0188 2E       		.uleb128 0x2e
 5301 0189 00       		.byte	0
 5302 018a 3F       		.uleb128 0x3f
 5303 018b 19       		.uleb128 0x19
 5304 018c 03       		.uleb128 0x3
 5305 018d 0E       		.uleb128 0xe
 5306 018e 3A       		.uleb128 0x3a
 5307 018f 0B       		.uleb128 0xb
 5308 0190 3B       		.uleb128 0x3b
 5309 0191 05       		.uleb128 0x5
 5310 0192 27       		.uleb128 0x27
 5311 0193 19       		.uleb128 0x19
 5312 0194 11       		.uleb128 0x11
 5313 0195 01       		.uleb128 0x1
 5314 0196 12       		.uleb128 0x12
 5315 0197 06       		.uleb128 0x6
 5316 0198 40       		.uleb128 0x40
 5317 0199 18       		.uleb128 0x18
 5318 019a 9742     		.uleb128 0x2117
 5319 019c 19       		.uleb128 0x19
 5320 019d 00       		.byte	0
 5321 019e 00       		.byte	0
 5322 019f 1B       		.uleb128 0x1b
 5323 01a0 34       		.uleb128 0x34
 5324 01a1 00       		.byte	0
 5325 01a2 03       		.uleb128 0x3
 5326 01a3 0E       		.uleb128 0xe
 5327 01a4 3A       		.uleb128 0x3a
 5328 01a5 0B       		.uleb128 0xb
 5329 01a6 3B       		.uleb128 0x3b
 5330 01a7 0B       		.uleb128 0xb
 5331 01a8 49       		.uleb128 0x49
 5332 01a9 13       		.uleb128 0x13
 5333 01aa 02       		.uleb128 0x2
 5334 01ab 18       		.uleb128 0x18
 5335 01ac 00       		.byte	0
 5336 01ad 00       		.byte	0
 5337 01ae 1C       		.uleb128 0x1c
 5338 01af 34       		.uleb128 0x34
 5339 01b0 00       		.byte	0
 5340 01b1 03       		.uleb128 0x3
 5341 01b2 0E       		.uleb128 0xe
 5342 01b3 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 145


 5343 01b4 0B       		.uleb128 0xb
 5344 01b5 3B       		.uleb128 0x3b
 5345 01b6 0B       		.uleb128 0xb
 5346 01b7 49       		.uleb128 0x49
 5347 01b8 13       		.uleb128 0x13
 5348 01b9 3F       		.uleb128 0x3f
 5349 01ba 19       		.uleb128 0x19
 5350 01bb 3C       		.uleb128 0x3c
 5351 01bc 19       		.uleb128 0x19
 5352 01bd 00       		.byte	0
 5353 01be 00       		.byte	0
 5354 01bf 1D       		.uleb128 0x1d
 5355 01c0 34       		.uleb128 0x34
 5356 01c1 00       		.byte	0
 5357 01c2 03       		.uleb128 0x3
 5358 01c3 0E       		.uleb128 0xe
 5359 01c4 3A       		.uleb128 0x3a
 5360 01c5 0B       		.uleb128 0xb
 5361 01c6 3B       		.uleb128 0x3b
 5362 01c7 0B       		.uleb128 0xb
 5363 01c8 49       		.uleb128 0x49
 5364 01c9 13       		.uleb128 0x13
 5365 01ca 3F       		.uleb128 0x3f
 5366 01cb 19       		.uleb128 0x19
 5367 01cc 02       		.uleb128 0x2
 5368 01cd 18       		.uleb128 0x18
 5369 01ce 00       		.byte	0
 5370 01cf 00       		.byte	0
 5371 01d0 00       		.byte	0
 5372              		.section	.debug_aranges,"",%progbits
 5373 0000 44010000 		.4byte	0x144
 5374 0004 0200     		.2byte	0x2
 5375 0006 00000000 		.4byte	.Ldebug_info0
 5376 000a 04       		.byte	0x4
 5377 000b 00       		.byte	0
 5378 000c 0000     		.2byte	0
 5379 000e 0000     		.2byte	0
 5380 0010 00000000 		.4byte	.LFB34
 5381 0014 6C000000 		.4byte	.LFE34-.LFB34
 5382 0018 00000000 		.4byte	.LFB35
 5383 001c 2A000000 		.4byte	.LFE35-.LFB35
 5384 0020 00000000 		.4byte	.LFB36
 5385 0024 28000000 		.4byte	.LFE36-.LFB36
 5386 0028 00000000 		.4byte	.LFB37
 5387 002c 50000000 		.4byte	.LFE37-.LFB37
 5388 0030 00000000 		.4byte	.LFB38
 5389 0034 5C020000 		.4byte	.LFE38-.LFB38
 5390 0038 00000000 		.4byte	.LFB39
 5391 003c 20000000 		.4byte	.LFE39-.LFB39
 5392 0040 00000000 		.4byte	.LFB40
 5393 0044 44000000 		.4byte	.LFE40-.LFB40
 5394 0048 00000000 		.4byte	.LFB41
 5395 004c 58000000 		.4byte	.LFE41-.LFB41
 5396 0050 00000000 		.4byte	.LFB42
 5397 0054 1C000000 		.4byte	.LFE42-.LFB42
 5398 0058 00000000 		.4byte	.LFB43
 5399 005c 28000000 		.4byte	.LFE43-.LFB43
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 146


 5400 0060 00000000 		.4byte	.LFB44
 5401 0064 1C000000 		.4byte	.LFE44-.LFB44
 5402 0068 00000000 		.4byte	.LFB45
 5403 006c 28000000 		.4byte	.LFE45-.LFB45
 5404 0070 00000000 		.4byte	.LFB46
 5405 0074 1C000000 		.4byte	.LFE46-.LFB46
 5406 0078 00000000 		.4byte	.LFB47
 5407 007c 1C000000 		.4byte	.LFE47-.LFB47
 5408 0080 00000000 		.4byte	.LFB48
 5409 0084 1C000000 		.4byte	.LFE48-.LFB48
 5410 0088 00000000 		.4byte	.LFB49
 5411 008c 1C000000 		.4byte	.LFE49-.LFB49
 5412 0090 00000000 		.4byte	.LFB50
 5413 0094 28000000 		.4byte	.LFE50-.LFB50
 5414 0098 00000000 		.4byte	.LFB51
 5415 009c 28000000 		.4byte	.LFE51-.LFB51
 5416 00a0 00000000 		.4byte	.LFB52
 5417 00a4 28000000 		.4byte	.LFE52-.LFB52
 5418 00a8 00000000 		.4byte	.LFB53
 5419 00ac 28000000 		.4byte	.LFE53-.LFB53
 5420 00b0 00000000 		.4byte	.LFB54
 5421 00b4 28000000 		.4byte	.LFE54-.LFB54
 5422 00b8 00000000 		.4byte	.LFB55
 5423 00bc 28000000 		.4byte	.LFE55-.LFB55
 5424 00c0 00000000 		.4byte	.LFB56
 5425 00c4 38010000 		.4byte	.LFE56-.LFB56
 5426 00c8 00000000 		.4byte	.LFB57
 5427 00cc 42000000 		.4byte	.LFE57-.LFB57
 5428 00d0 00000000 		.4byte	.LFB58
 5429 00d4 36000000 		.4byte	.LFE58-.LFB58
 5430 00d8 00000000 		.4byte	.LFB59
 5431 00dc 5C000000 		.4byte	.LFE59-.LFB59
 5432 00e0 00000000 		.4byte	.LFB60
 5433 00e4 5C000000 		.4byte	.LFE60-.LFB60
 5434 00e8 00000000 		.4byte	.LFB61
 5435 00ec B8000000 		.4byte	.LFE61-.LFB61
 5436 00f0 00000000 		.4byte	.LFB62
 5437 00f4 A0010000 		.4byte	.LFE62-.LFB62
 5438 00f8 00000000 		.4byte	.LFB63
 5439 00fc B8010000 		.4byte	.LFE63-.LFB63
 5440 0100 00000000 		.4byte	.LFB64
 5441 0104 98000000 		.4byte	.LFE64-.LFB64
 5442 0108 00000000 		.4byte	.LFB65
 5443 010c 76000000 		.4byte	.LFE65-.LFB65
 5444 0110 00000000 		.4byte	.LFB66
 5445 0114 46000000 		.4byte	.LFE66-.LFB66
 5446 0118 00000000 		.4byte	.LFB67
 5447 011c 1C000000 		.4byte	.LFE67-.LFB67
 5448 0120 00000000 		.4byte	.LFB68
 5449 0124 1C000000 		.4byte	.LFE68-.LFB68
 5450 0128 00000000 		.4byte	.LFB69
 5451 012c 1C000000 		.4byte	.LFE69-.LFB69
 5452 0130 00000000 		.4byte	.LFB70
 5453 0134 14000000 		.4byte	.LFE70-.LFB70
 5454 0138 00000000 		.4byte	.LFB71
 5455 013c 14000000 		.4byte	.LFE71-.LFB71
 5456 0140 00000000 		.4byte	0
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 147


 5457 0144 00000000 		.4byte	0
 5458              		.section	.debug_ranges,"",%progbits
 5459              	.Ldebug_ranges0:
 5460 0000 00000000 		.4byte	.LFB34
 5461 0004 6C000000 		.4byte	.LFE34
 5462 0008 00000000 		.4byte	.LFB35
 5463 000c 2A000000 		.4byte	.LFE35
 5464 0010 00000000 		.4byte	.LFB36
 5465 0014 28000000 		.4byte	.LFE36
 5466 0018 00000000 		.4byte	.LFB37
 5467 001c 50000000 		.4byte	.LFE37
 5468 0020 00000000 		.4byte	.LFB38
 5469 0024 5C020000 		.4byte	.LFE38
 5470 0028 00000000 		.4byte	.LFB39
 5471 002c 20000000 		.4byte	.LFE39
 5472 0030 00000000 		.4byte	.LFB40
 5473 0034 44000000 		.4byte	.LFE40
 5474 0038 00000000 		.4byte	.LFB41
 5475 003c 58000000 		.4byte	.LFE41
 5476 0040 00000000 		.4byte	.LFB42
 5477 0044 1C000000 		.4byte	.LFE42
 5478 0048 00000000 		.4byte	.LFB43
 5479 004c 28000000 		.4byte	.LFE43
 5480 0050 00000000 		.4byte	.LFB44
 5481 0054 1C000000 		.4byte	.LFE44
 5482 0058 00000000 		.4byte	.LFB45
 5483 005c 28000000 		.4byte	.LFE45
 5484 0060 00000000 		.4byte	.LFB46
 5485 0064 1C000000 		.4byte	.LFE46
 5486 0068 00000000 		.4byte	.LFB47
 5487 006c 1C000000 		.4byte	.LFE47
 5488 0070 00000000 		.4byte	.LFB48
 5489 0074 1C000000 		.4byte	.LFE48
 5490 0078 00000000 		.4byte	.LFB49
 5491 007c 1C000000 		.4byte	.LFE49
 5492 0080 00000000 		.4byte	.LFB50
 5493 0084 28000000 		.4byte	.LFE50
 5494 0088 00000000 		.4byte	.LFB51
 5495 008c 28000000 		.4byte	.LFE51
 5496 0090 00000000 		.4byte	.LFB52
 5497 0094 28000000 		.4byte	.LFE52
 5498 0098 00000000 		.4byte	.LFB53
 5499 009c 28000000 		.4byte	.LFE53
 5500 00a0 00000000 		.4byte	.LFB54
 5501 00a4 28000000 		.4byte	.LFE54
 5502 00a8 00000000 		.4byte	.LFB55
 5503 00ac 28000000 		.4byte	.LFE55
 5504 00b0 00000000 		.4byte	.LFB56
 5505 00b4 38010000 		.4byte	.LFE56
 5506 00b8 00000000 		.4byte	.LFB57
 5507 00bc 42000000 		.4byte	.LFE57
 5508 00c0 00000000 		.4byte	.LFB58
 5509 00c4 36000000 		.4byte	.LFE58
 5510 00c8 00000000 		.4byte	.LFB59
 5511 00cc 5C000000 		.4byte	.LFE59
 5512 00d0 00000000 		.4byte	.LFB60
 5513 00d4 5C000000 		.4byte	.LFE60
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 148


 5514 00d8 00000000 		.4byte	.LFB61
 5515 00dc B8000000 		.4byte	.LFE61
 5516 00e0 00000000 		.4byte	.LFB62
 5517 00e4 A0010000 		.4byte	.LFE62
 5518 00e8 00000000 		.4byte	.LFB63
 5519 00ec B8010000 		.4byte	.LFE63
 5520 00f0 00000000 		.4byte	.LFB64
 5521 00f4 98000000 		.4byte	.LFE64
 5522 00f8 00000000 		.4byte	.LFB65
 5523 00fc 76000000 		.4byte	.LFE65
 5524 0100 00000000 		.4byte	.LFB66
 5525 0104 46000000 		.4byte	.LFE66
 5526 0108 00000000 		.4byte	.LFB67
 5527 010c 1C000000 		.4byte	.LFE67
 5528 0110 00000000 		.4byte	.LFB68
 5529 0114 1C000000 		.4byte	.LFE68
 5530 0118 00000000 		.4byte	.LFB69
 5531 011c 1C000000 		.4byte	.LFE69
 5532 0120 00000000 		.4byte	.LFB70
 5533 0124 14000000 		.4byte	.LFE70
 5534 0128 00000000 		.4byte	.LFB71
 5535 012c 14000000 		.4byte	.LFE71
 5536 0130 00000000 		.4byte	0
 5537 0134 00000000 		.4byte	0
 5538              		.section	.debug_line,"",%progbits
 5539              	.Ldebug_line0:
 5540 0000 A9040000 		.section	.debug_str,"MS",%progbits,1
 5540      02005C00 
 5540      00000201 
 5540      FB0E0D00 
 5540      01010101 
 5541              	.LASF132:
 5542 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5542      656E7365 
 5542      5F73656E 
 5542      736F7242 
 5542      6173656C 
 5543              	.LASF90:
 5544 001b 43617053 		.ascii	"CapSense_debounceCounter\000"
 5544      656E7365 
 5544      5F646562 
 5544      6F756E63 
 5544      65436F75 
 5545              	.LASF33:
 5546 0034 7363616E 		.ascii	"scanSpeedTbl\000"
 5546      53706565 
 5546      6454626C 
 5546      00
 5547              	.LASF135:
 5548 0041 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5548      656E7365 
 5548      5F6C6F77 
 5548      42617365 
 5548      6C696E65 
 5549              	.LASF56:
 5550 005e 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5550      656E7365 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 149


 5550      5F557064 
 5550      61746542 
 5550      6173656C 
 5551              	.LASF36:
 5552 0081 6E756D62 		.ascii	"numberOfSensors\000"
 5552      65724F66 
 5552      53656E73 
 5552      6F727300 
 5553              	.LASF40:
 5554 0091 70747247 		.ascii	"ptrGetBitValue\000"
 5554      65744269 
 5554      7456616C 
 5554      756500
 5555              	.LASF97:
 5556 00a0 43617053 		.ascii	"CapSense_DisableWidget\000"
 5556      656E7365 
 5556      5F446973 
 5556      61626C65 
 5556      57696467 
 5557              	.LASF116:
 5558 00b7 74656D70 		.ascii	"tempPos\000"
 5558      506F7300 
 5559              	.LASF64:
 5560 00bf 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5560      656E7365 
 5560      5F557064 
 5560      61746545 
 5560      6E61626C 
 5561              	.LASF113:
 5562 00df 706F7349 		.ascii	"posIndex\000"
 5562      6E646578 
 5562      00
 5563              	.LASF146:
 5564 00e8 43617053 		.ascii	"CapSense_config\000"
 5564      656E7365 
 5564      5F636F6E 
 5564      66696700 
 5565              	.LASF55:
 5566 00f8 69735365 		.ascii	"isSensorEnabled\000"
 5566      6E736F72 
 5566      456E6162 
 5566      6C656400 
 5567              	.LASF93:
 5568 0108 6E756D4F 		.ascii	"numOfSensors\000"
 5568      6653656E 
 5568      736F7273 
 5568      00
 5569              	.LASF42:
 5570 0115 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_60\000"
 5570      656E7365 
 5570      5F434F4E 
 5570      4649475F 
 5570      54595045 
 5571              	.LASF8:
 5572 013c 756E7369 		.ascii	"unsigned int\000"
 5572      676E6564 
 5572      20696E74 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 150


 5572      00
 5573              	.LASF45:
 5574 0149 746F7461 		.ascii	"totalSensorsNum\000"
 5574      6C53656E 
 5574      736F7273 
 5574      4E756D00 
 5575              	.LASF107:
 5576 0159 706F734E 		.ascii	"posNext\000"
 5576      65787400 
 5577              	.LASF12:
 5578 0161 696E7431 		.ascii	"int16\000"
 5578      3600
 5579              	.LASF148:
 5580 0167 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5580      43313120 
 5580      352E342E 
 5580      31203230 
 5580      31363036 
 5581 019a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5581      20726576 
 5581      6973696F 
 5581      6E203233 
 5581      37373135 
 5582 01cd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5582      66756E63 
 5582      74696F6E 
 5582      2D736563 
 5582      74696F6E 
 5583              	.LASF30:
 5584 01f5 73616D70 		.ascii	"sampleMaxTbl\000"
 5584      6C654D61 
 5584      7854626C 
 5584      00
 5585              	.LASF54:
 5586 0202 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5586      656E7365 
 5586      5F496E69 
 5586      7469616C 
 5586      697A6545 
 5587              	.LASF127:
 5588 0226 43617053 		.ascii	"CapSense_posFiltersData\000"
 5588      656E7365 
 5588      5F706F73 
 5588      46696C74 
 5588      65727344 
 5589              	.LASF28:
 5590 023e 7369676E 		.ascii	"signRegisterTbl\000"
 5590      52656769 
 5590      73746572 
 5590      54626C00 
 5591              	.LASF141:
 5592 024e 43617053 		.ascii	"CapSense_debounce\000"
 5592      656E7365 
 5592      5F646562 
 5592      6F756E63 
 5592      6500
 5593              	.LASF51:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 151


 5594 0260 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5594      656E7365 
 5594      5F496E69 
 5594      7469616C 
 5594      697A6553 
 5595              	.LASF106:
 5596 0282 706F7350 		.ascii	"posPrev\000"
 5596      72657600 
 5597              	.LASF69:
 5598 028a 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5598      656E7365 
 5598      5F536574 
 5598      42617365 
 5598      6C696E65 
 5599              	.LASF35:
 5600 02a3 72617744 		.ascii	"rawDataIndex\000"
 5600      61746149 
 5600      6E646578 
 5600      00
 5601              	.LASF44:
 5602 02b0 746F7461 		.ascii	"totalWidgetsNum\000"
 5602      6C576964 
 5602      67657473 
 5602      4E756D00 
 5603              	.LASF73:
 5604 02c0 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5604      656E7365 
 5604      5F536574 
 5604      44696666 
 5604      436F756E 
 5605              	.LASF133:
 5606 02da 43617053 		.ascii	"CapSense_sensorSignal\000"
 5606      656E7365 
 5606      5F73656E 
 5606      736F7253 
 5606      69676E61 
 5607              	.LASF142:
 5608 02f0 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5608      656E7365 
 5608      5F726177 
 5608      44617461 
 5608      496E6465 
 5609              	.LASF80:
 5610 0306 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5610      656E7365 
 5610      5F536574 
 5610      4E6F6973 
 5610      65546872 
 5611              	.LASF65:
 5612 0321 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5612      656E7365 
 5612      5F557064 
 5612      61746557 
 5612      69646765 
 5613              	.LASF140:
 5614 033f 43617053 		.ascii	"CapSense_hysteresis\000"
 5614      656E7365 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 152


 5614      5F687973 
 5614      74657265 
 5614      73697300 
 5615              	.LASF14:
 5616 0353 666C6F61 		.ascii	"float\000"
 5616      7400
 5617              	.LASF13:
 5618 0359 696E7433 		.ascii	"int32\000"
 5618      3200
 5619              	.LASF100:
 5620 035f 636F756E 		.ascii	"count\000"
 5620      7400
 5621              	.LASF25:
 5622 0365 7265736F 		.ascii	"resolutionsTbl\000"
 5622      6C757469 
 5622      6F6E7354 
 5622      626C00
 5623              	.LASF115:
 5624 0374 706F7346 		.ascii	"posFiltersMask\000"
 5624      696C7465 
 5624      72734D61 
 5624      736B00
 5625              	.LASF76:
 5626 0383 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5626      656E7365 
 5626      5F476574 
 5626      4E6F6973 
 5626      65546872 
 5627              	.LASF27:
 5628 039e 72756E6E 		.ascii	"runningDifferenceTbl\000"
 5628      696E6744 
 5628      69666665 
 5628      72656E63 
 5628      6554626C 
 5629              	.LASF7:
 5630 03b3 6C6F6E67 		.ascii	"long long unsigned int\000"
 5630      206C6F6E 
 5630      6720756E 
 5630      7369676E 
 5630      65642069 
 5631              	.LASF129:
 5632 03ca 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5632      656E7365 
 5632      5F73656E 
 5632      736F7245 
 5632      6E61626C 
 5633              	.LASF61:
 5634 03e4 77696467 		.ascii	"widget\000"
 5634      657400
 5635              	.LASF126:
 5636 03eb 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5636      656E7365 
 5636      5F706F73 
 5636      46696C74 
 5636      6572734D 
 5637              	.LASF137:
 5638 0403 43617053 		.ascii	"CapSense_fingerThreshold\000"
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 153


 5638      656E7365 
 5638      5F66696E 
 5638      67657254 
 5638      68726573 
 5639              	.LASF119:
 5640 041c 43617053 		.ascii	"CapSense_AveragingFilter\000"
 5640      656E7365 
 5640      5F417665 
 5640      72616769 
 5640      6E674669 
 5641              	.LASF49:
 5642 0435 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_60\000"
 5642      656E7365 
 5642      5F434F4E 
 5642      4649475F 
 5642      54595045 
 5643              	.LASF130:
 5644 0453 43617053 		.ascii	"CapSense_widgetNumber\000"
 5644      656E7365 
 5644      5F776964 
 5644      6765744E 
 5644      756D6265 
 5645              	.LASF79:
 5646 0469 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5646      656E7365 
 5646      5F536574 
 5646      46696E67 
 5646      65725468 
 5647              	.LASF124:
 5648 0485 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5648      656E7365 
 5648      5F446973 
 5648      61626C65 
 5648      52617744 
 5649              	.LASF74:
 5650 04a4 76616C75 		.ascii	"value\000"
 5650      6500
 5651              	.LASF77:
 5652 04aa 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5652      656E7365 
 5652      5F476574 
 5652      46696E67 
 5652      65724879 
 5653              	.LASF72:
 5654 04c7 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5654      656E7365 
 5654      5F476574 
 5654      44696666 
 5654      436F756E 
 5655              	.LASF58:
 5656 04e1 7369676E 		.ascii	"sign\000"
 5656      00
 5657              	.LASF99:
 5658 04e6 6F666673 		.ascii	"offset\000"
 5658      657400
 5659              	.LASF26:
 5660 04ed 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 154


 5660      65456E76 
 5660      656C6F70 
 5660      6554626C 
 5660      00
 5661              	.LASF57:
 5662 04fe 63616C63 		.ascii	"calc\000"
 5662      00
 5663              	.LASF39:
 5664 0503 70747252 		.ascii	"ptrReadSensorRaw\000"
 5664      65616453 
 5664      656E736F 
 5664      72526177 
 5664      00
 5665              	.LASF89:
 5666 0514 68797374 		.ascii	"hysteresis\000"
 5666      65726573 
 5666      697300
 5667              	.LASF60:
 5668 051f 66696C74 		.ascii	"filteredRawData\000"
 5668      65726564 
 5668      52617744 
 5668      61746100 
 5669              	.LASF66:
 5670 052f 73656E73 		.ascii	"sensorsPerWidget\000"
 5670      6F727350 
 5670      65725769 
 5670      64676574 
 5670      00
 5671              	.LASF95:
 5672 0540 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5672      656E7365 
 5672      5F436865 
 5672      636B4973 
 5672      416E7957 
 5673              	.LASF143:
 5674 0560 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5674      656E7365 
 5674      5F6E756D 
 5674      6265724F 
 5674      6653656E 
 5675              	.LASF139:
 5676 0579 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5676      656E7365 
 5676      5F6E6567 
 5676      61746976 
 5676      654E6F69 
 5677              	.LASF43:
 5678 0599 746F7461 		.ascii	"totalScanslotsNum\000"
 5678      6C536361 
 5678      6E736C6F 
 5678      74734E75 
 5678      6D00
 5679              	.LASF52:
 5680 05ab 73656E73 		.ascii	"sensor\000"
 5680      6F7200
 5681              	.LASF46:
 5682 05b2 73656E73 		.ascii	"sensetivitySeed\000"
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 155


 5682      65746976 
 5682      69747953 
 5682      65656400 
 5683              	.LASF96:
 5684 05c2 43617053 		.ascii	"CapSense_EnableWidget\000"
 5684      656E7365 
 5684      5F456E61 
 5684      626C6557 
 5684      69646765 
 5685              	.LASF16:
 5686 05d8 63686172 		.ascii	"char\000"
 5686      00
 5687              	.LASF78:
 5688 05dd 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5688      656E7365 
 5688      5F476574 
 5688      4E656761 
 5688      74697665 
 5689              	.LASF34:
 5690 0600 70726573 		.ascii	"prescalerTable\000"
 5690      63616C65 
 5690      72546162 
 5690      6C6500
 5691              	.LASF10:
 5692 060f 75696E74 		.ascii	"uint16\000"
 5692      313600
 5693              	.LASF70:
 5694 0616 64617461 		.ascii	"data\000"
 5694      00
 5695              	.LASF19:
 5696 061b 69646163 		.ascii	"idac1LevelsTbl\000"
 5696      314C6576 
 5696      656C7354 
 5696      626C00
 5697              	.LASF105:
 5698 062a 7265736F 		.ascii	"resolution\000"
 5698      6C757469 
 5698      6F6E00
 5699              	.LASF92:
 5700 0635 72617749 		.ascii	"rawIndex\000"
 5700      6E646578 
 5700      00
 5701              	.LASF108:
 5702 063e 43617053 		.ascii	"CapSense_centroid\000"
 5702      656E7365 
 5702      5F63656E 
 5702      74726F69 
 5702      6400
 5703              	.LASF6:
 5704 0650 6C6F6E67 		.ascii	"long long int\000"
 5704      206C6F6E 
 5704      6720696E 
 5704      7400
 5705              	.LASF120:
 5706 065e 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5706      656E7365 
 5706      5F476574 
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 156


 5706      57696467 
 5706      65744E75 
 5707              	.LASF86:
 5708 0677 6465626F 		.ascii	"debounce\000"
 5708      756E6365 
 5708      00
 5709              	.LASF38:
 5710 0680 70747250 		.ascii	"ptrPreScan\000"
 5710      72655363 
 5710      616E00
 5711              	.LASF85:
 5712 068b 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5712      656E7365 
 5712      5F436865 
 5712      636B4973 
 5712      53656E73 
 5713              	.LASF37:
 5714 06a8 70747247 		.ascii	"ptrGetRaw\000"
 5714      65745261 
 5714      7700
 5715              	.LASF63:
 5716 06b2 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5716      656E7365 
 5716      5F557064 
 5716      61746553 
 5716      656E736F 
 5717              	.LASF50:
 5718 06d0 43617053 		.ascii	"CapSense_BaseInit\000"
 5718      656E7365 
 5718      5F426173 
 5718      65496E69 
 5718      7400
 5719              	.LASF104:
 5720 06e2 43617053 		.ascii	"CapSense_CalcCentroid\000"
 5720      656E7365 
 5720      5F43616C 
 5720      6343656E 
 5720      74726F69 
 5721              	.LASF29:
 5722 06f8 73616D70 		.ascii	"sampleMinTbl\000"
 5722      6C654D69 
 5722      6E54626C 
 5722      00
 5723              	.LASF128:
 5724 0705 43617053 		.ascii	"CapSense_sensorRaw\000"
 5724      656E7365 
 5724      5F73656E 
 5724      736F7252 
 5724      617700
 5725              	.LASF121:
 5726 0718 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5726      656E7365 
 5726      5F476574 
 5726      4C6F7742 
 5726      6173656C 
 5727              	.LASF82:
 5728 0735 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 157


 5728      656E7365 
 5728      5F536574 
 5728      4E656761 
 5728      74697665 
 5729              	.LASF11:
 5730 0758 75696E74 		.ascii	"uint32\000"
 5730      333200
 5731              	.LASF114:
 5732 075f 66697273 		.ascii	"firstTimeIndex\000"
 5732      7454696D 
 5732      65496E64 
 5732      657800
 5733              	.LASF103:
 5734 076e 73746172 		.ascii	"startOfSlider\000"
 5734      744F6653 
 5734      6C696465 
 5734      7200
 5735              	.LASF81:
 5736 077c 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5736      656E7365 
 5736      5F536574 
 5736      46696E67 
 5736      65724879 
 5737              	.LASF75:
 5738 0799 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5738      656E7365 
 5738      5F476574 
 5738      46696E67 
 5738      65725468 
 5739              	.LASF110:
 5740 07b5 6E756D65 		.ascii	"numerator\000"
 5740      7261746F 
 5740      7200
 5741              	.LASF18:
 5742 07bf 6C6F6E67 		.ascii	"long double\000"
 5742      20646F75 
 5742      626C6500 
 5743              	.LASF68:
 5744 07cb 6C617374 		.ascii	"lastSensor\000"
 5744      53656E73 
 5744      6F7200
 5745              	.LASF47:
 5746 07d6 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5746      6B467265 
 5746      715F4D48 
 5746      7A00
 5747              	.LASF112:
 5748 07e4 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 5748      656E7365 
 5748      5F476574 
 5748      43656E74 
 5748      726F6964 
 5749              	.LASF20:
 5750 07fc 69646163 		.ascii	"idac2LevelsTbl\000"
 5750      324C6576 
 5750      656C7354 
 5750      626C00
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 158


 5751              	.LASF2:
 5752 080b 73686F72 		.ascii	"short int\000"
 5752      7420696E 
 5752      7400
 5753              	.LASF4:
 5754 0815 6C6F6E67 		.ascii	"long int\000"
 5754      20696E74 
 5754      00
 5755              	.LASF67:
 5756 081e 66697273 		.ascii	"firstSensor\000"
 5756      7453656E 
 5756      736F7200 
 5757              	.LASF102:
 5758 082a 74656D70 		.ascii	"temp\000"
 5758      00
 5759              	.LASF98:
 5760 082f 43617053 		.ascii	"CapSense_FindMaximum\000"
 5760      656E7365 
 5760      5F46696E 
 5760      644D6178 
 5760      696D756D 
 5761              	.LASF24:
 5762 0844 77696467 		.ascii	"widgetNubmersTbl\000"
 5762      65744E75 
 5762      626D6572 
 5762      7354626C 
 5762      00
 5763              	.LASF123:
 5764 0855 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5764      656E7365 
 5764      5F456E61 
 5764      626C6552 
 5764      61774461 
 5765              	.LASF136:
 5766 0873 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5766      656E7365 
 5766      5F6C6F77 
 5766      42617365 
 5766      6C696E65 
 5767              	.LASF111:
 5768 088d 64656E6F 		.ascii	"denominator\000"
 5768      6D696E61 
 5768      746F7200 
 5769              	.LASF32:
 5770 0899 6B56616C 		.ascii	"kValueTbl\000"
 5770      75655462 
 5770      6C00
 5771              	.LASF131:
 5772 08a3 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5772      656E7365 
 5772      5F73656E 
 5772      736F7242 
 5772      6173656C 
 5773              	.LASF101:
 5774 08bb 6D617869 		.ascii	"maximum\000"
 5774      6D756D00 
 5775              	.LASF17:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 159


 5776 08c3 73697A65 		.ascii	"sizetype\000"
 5776      74797065 
 5776      00
 5777              	.LASF5:
 5778 08cc 6C6F6E67 		.ascii	"long unsigned int\000"
 5778      20756E73 
 5778      69676E65 
 5778      6420696E 
 5778      7400
 5779              	.LASF48:
 5780 08de 706F696E 		.ascii	"pointers\000"
 5780      74657273 
 5780      00
 5781              	.LASF62:
 5782 08e7 6E6F6973 		.ascii	"noiseThreshold\000"
 5782      65546872 
 5782      6573686F 
 5782      6C6400
 5783              	.LASF31:
 5784 08f6 70726576 		.ascii	"previousSampleTbl\000"
 5784      696F7573 
 5784      53616D70 
 5784      6C655462 
 5784      6C00
 5785              	.LASF83:
 5786 0908 43617053 		.ascii	"CapSense_SetDebounce\000"
 5786      656E7365 
 5786      5F536574 
 5786      4465626F 
 5786      756E6365 
 5787              	.LASF88:
 5788 091d 66696E67 		.ascii	"fingerThreshold\000"
 5788      65725468 
 5788      72657368 
 5788      6F6C6400 
 5789              	.LASF22:
 5790 092d 63686172 		.ascii	"chargeDivTbl\000"
 5790      67654469 
 5790      7654626C 
 5790      00
 5791              	.LASF1:
 5792 093a 756E7369 		.ascii	"unsigned char\000"
 5792      676E6564 
 5792      20636861 
 5792      7200
 5793              	.LASF138:
 5794 0948 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5794      656E7365 
 5794      5F6E6F69 
 5794      73655468 
 5794      72657368 
 5795              	.LASF87:
 5796 0960 6465626F 		.ascii	"debounceIndex\000"
 5796      756E6365 
 5796      496E6465 
 5796      7800
 5797              	.LASF53:
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 160


 5798 096e 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5798      656E7365 
 5798      5F496E69 
 5798      7469616C 
 5798      697A6541 
 5799              	.LASF71:
 5800 098e 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5800      656E7365 
 5800      5F476574 
 5800      42617365 
 5800      6C696E65 
 5801              	.LASF84:
 5802 09a7 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5802      656E7365 
 5802      5F536574 
 5802      4C6F7742 
 5802      6173656C 
 5803              	.LASF21:
 5804 09c4 73656E73 		.ascii	"sensetivityTbl\000"
 5804      65746976 
 5804      69747954 
 5804      626C00
 5805              	.LASF125:
 5806 09d3 43617053 		.ascii	"CapSense_centroidMult\000"
 5806      656E7365 
 5806      5F63656E 
 5806      74726F69 
 5806      644D756C 
 5807              	.LASF149:
 5808 09e9 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5808      72617465 
 5808      645F536F 
 5808      75726365 
 5808      5C50536F 
 5809              	.LASF94:
 5810 0a10 73746174 		.ascii	"state\000"
 5810      6500
 5811              	.LASF147:
 5812 0a16 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5812      656E7365 
 5812      5F656E61 
 5812      626C6552 
 5812      61774669 
 5813              	.LASF23:
 5814 0a30 6D6F6444 		.ascii	"modDivTbl\000"
 5814      69765462 
 5814      6C00
 5815              	.LASF0:
 5816 0a3a 7369676E 		.ascii	"signed char\000"
 5816      65642063 
 5816      68617200 
 5817              	.LASF3:
 5818 0a46 73686F72 		.ascii	"short unsigned int\000"
 5818      7420756E 
 5818      7369676E 
 5818      65642069 
 5818      6E7400
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 161


 5819              	.LASF117:
 5820 0a59 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 5820      656E7365 
 5820      5F476574 
 5820      52616469 
 5820      616C4365 
 5821              	.LASF41:
 5822 0a77 70747253 		.ascii	"ptrSetBitValue\000"
 5822      65744269 
 5822      7456616C 
 5822      756500
 5823              	.LASF118:
 5824 0a86 43617053 		.ascii	"CapSense_MedianFilter\000"
 5824      656E7365 
 5824      5F4D6564 
 5824      69616E46 
 5824      696C7465 
 5825              	.LASF59:
 5826 0a9c 74656D70 		.ascii	"tempRaw\000"
 5826      52617700 
 5827              	.LASF122:
 5828 0aa4 43617053 		.ascii	"CapSense_GetDebounce\000"
 5828      656E7365 
 5828      5F476574 
 5828      4465626F 
 5828      756E6365 
 5829              	.LASF91:
 5830 0ab9 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5830      656E7365 
 5830      5F436865 
 5830      636B4973 
 5830      57696467 
 5831              	.LASF9:
 5832 0ad6 75696E74 		.ascii	"uint8\000"
 5832      3800
 5833              	.LASF15:
 5834 0adc 646F7562 		.ascii	"double\000"
 5834      6C6500
 5835              	.LASF144:
 5836 0ae3 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5836      656E7365 
 5836      5F726177 
 5836      46696C74 
 5836      65724461 
 5837              	.LASF145:
 5838 0afb 43617053 		.ascii	"CapSense_rawFilterData2\000"
 5838      656E7365 
 5838      5F726177 
 5838      46696C74 
 5838      65724461 
 5839              	.LASF150:
 5840 0b13 433A5C55 		.ascii	"C:\\Users\\Jack\\Documents\\PSoC Creator\\LED capse"
 5840      73657273 
 5840      5C4A6163 
 5840      6B5C446F 
 5840      63756D65 
 5841 0b41 6E736520 		.ascii	"nse slider\\PSoC_4_BLE_CapSense_Slider_LED01\\PSoC_"
ARM GAS  C:\Users\Jack\AppData\Local\Temp\ccoY3Ai2.s 			page 162


 5841      736C6964 
 5841      65725C50 
 5841      536F435F 
 5841      345F424C 
 5842 0b72 345F424C 		.ascii	"4_BLE_CapSense_Slider_LED01.cydsn\000"
 5842      455F4361 
 5842      7053656E 
 5842      73655F53 
 5842      6C696465 
 5843              	.LASF109:
 5844 0b94 706F7369 		.ascii	"position\000"
 5844      74696F6E 
 5844      00
 5845              	.LASF134:
 5846 0b9d 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5846      656E7365 
 5846      5F73656E 
 5846      736F724F 
 5846      6E4D6173 
 5847              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
